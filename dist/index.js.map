{"version":3,"file":"index.js","sources":["../webpack://deployment-feedback/./index.js","../webpack://deployment-feedback/./node_modules/@actions/core/lib/command.js","../webpack://deployment-feedback/./node_modules/@actions/core/lib/core.js","../webpack://deployment-feedback/./node_modules/@actions/core/lib/file-command.js","../webpack://deployment-feedback/./node_modules/@actions/core/lib/utils.js","../webpack://deployment-feedback/./node_modules/@actions/github/lib/context.js","../webpack://deployment-feedback/./node_modules/@actions/github/lib/github.js","../webpack://deployment-feedback/./node_modules/@actions/github/lib/internal/utils.js","../webpack://deployment-feedback/./node_modules/@actions/github/lib/utils.js","../webpack://deployment-feedback/./node_modules/@actions/http-client/index.js","../webpack://deployment-feedback/./node_modules/@actions/http-client/proxy.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/ECS.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/ECSClient.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/CreateCapacityProviderCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/CreateClusterCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/CreateServiceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/CreateTaskSetCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteAccountSettingCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteAttributesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteCapacityProviderCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteClusterCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteServiceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeleteTaskSetCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeregisterContainerInstanceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DeregisterTaskDefinitionCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeCapacityProvidersCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeClustersCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeContainerInstancesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeServicesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeTaskDefinitionCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeTaskSetsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DescribeTasksCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/DiscoverPollEndpointCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ExecuteCommandCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListAccountSettingsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListAttributesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListClustersCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListContainerInstancesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListServicesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListTagsForResourceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListTaskDefinitionFamiliesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListTaskDefinitionsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/ListTasksCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/PutAccountSettingCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/PutAccountSettingDefaultCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/PutAttributesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/PutClusterCapacityProvidersCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/RegisterContainerInstanceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/RegisterTaskDefinitionCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/RunTaskCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/StartTaskCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/StopTaskCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/SubmitAttachmentStateChangesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/SubmitContainerStateChangeCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/SubmitTaskStateChangeCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/TagResourceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UntagResourceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateCapacityProviderCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateClusterCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateClusterSettingsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateContainerAgentCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateContainerInstancesStateCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateServiceCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateServicePrimaryTaskSetCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/commands/UpdateTaskSetCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/endpoints.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/models/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/models/models_0.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/Interfaces.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListAccountSettingsPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListAttributesPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListClustersPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListContainerInstancesPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListServicesPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListTaskDefinitionFamiliesPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListTaskDefinitionsPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/pagination/ListTasksPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/protocols/Aws_json1_1.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/runtimeConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/runtimeConfig.shared.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/waiters/waitForServicesInactive.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/waiters/waitForTasksRunning.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-ecs/dist/cjs/waiters/waitForTasksStopped.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/SSO.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/SSOClient.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/GetRoleCredentialsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/ListAccountRolesCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/ListAccountsCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/LogoutCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/endpoints.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/models/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/models/models_0.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/Interfaces.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/ListAccountRolesPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/ListAccountsPaginator.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/protocols/Aws_restJson1.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/runtimeConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sso/dist/cjs/runtimeConfig.shared.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/STS.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/STSClient.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetAccessKeyInfoCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetCallerIdentityCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetFederationTokenCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetSessionTokenCommand.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/defaultRoleAssumers.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/defaultStsRoleAssumers.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/endpoints.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/models/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/models/models_0.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/protocols/Aws_query.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/runtimeConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/client-sts/dist/cjs/runtimeConfig.shared.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/config-resolver/dist/cjs/CustomEndpointsConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/config-resolver/dist/cjs/EndpointsConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/config-resolver/dist/cjs/RegionConfig.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/config-resolver/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-env/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/fromContainerMetadata.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/fromInstanceMetadata.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/ImdsCredentials.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/RemoteProviderInit.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/httpRequest.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/retry.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-ini/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-process/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-sso/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/fromTokenFile.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/fromWebToken.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/hash-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/is-array-buffer/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-content-length/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-host-header/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-logger/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-logger/dist/cjs/loggerMiddleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/AdaptiveRetryStrategy.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/DefaultRateLimiter.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/StandardRetryStrategy.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/config.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/configurations.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/defaultRetryQuota.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/delayDecider.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/omitRetryHeadersMiddleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/retryDecider.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/retryMiddleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-retry/dist/cjs/types.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-sdk-sts/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-serde/dist/cjs/deserializerMiddleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-serde/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-serde/dist/cjs/serdePlugin.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-serde/dist/cjs/serializerMiddleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-signing/dist/cjs/configurations.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-signing/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-signing/dist/cjs/middleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-stack/dist/cjs/MiddlewareStack.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-stack/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/configurations.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/user-agent-middleware.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-config-provider/dist/cjs/configLoader.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromEnv.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromSharedConfigFiles.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromStatic.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-config-provider/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/get-transformed-headers.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/node-http-handler.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/node-http2-handler.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/set-connection-timeout.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/set-socket-timeout.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/stream-collector/collector.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/stream-collector/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/node-http-handler/dist/cjs/write-request-body.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/property-provider/dist/cjs/ProviderError.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/property-provider/dist/cjs/chain.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/property-provider/dist/cjs/fromStatic.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/property-provider/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/property-provider/dist/cjs/memoize.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpHandler.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpRequest.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpResponse.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/protocol-http/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/protocol-http/dist/cjs/isValidHostname.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/querystring-builder/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/querystring-parser/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/service-error-classification/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/service-error-classification/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/shared-ini-file-loader/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/SignatureV4.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/cloneRequest.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/credentialDerivation.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/getCanonicalHeaders.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/getCanonicalQuery.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/getPayloadHash.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/hasHeader.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/moveHeadersToQuery.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/prepareRequest.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/signature-v4/dist/cjs/utilDate.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/client.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/command.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/constants.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/date-utils.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/document-type.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/exception.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/extended-encode-uri-component.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/get-array-if-single-item.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/get-value-from-text-node.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/lazy-json.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/retryable-trait.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/sdk-error.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/smithy-client/dist/cjs/split-every.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/url-parser/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-base64-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-body-length-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-buffer-from/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-hex-encoding/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/escape-uri-path.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/escape-uri.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-user-agent-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-utf8-node/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/createWaiter.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/poller.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/index.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/sleep.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/validate.js","../webpack://deployment-feedback/./node_modules/@aws-sdk/util-waiter/dist/cjs/waiter.js","../webpack://deployment-feedback/./node_modules/@octokit/auth-token/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/core/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/endpoint/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/endpoint/node_modules/is-plain-object/dist/is-plain-object.js","../webpack://deployment-feedback/./node_modules/@octokit/graphql/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/plugin-paginate-rest/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/request-error/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/request/dist-node/index.js","../webpack://deployment-feedback/./node_modules/@octokit/request/node_modules/is-plain-object/dist/is-plain-object.js","../webpack://deployment-feedback/./node_modules/before-after-hook/index.js","../webpack://deployment-feedback/./node_modules/before-after-hook/lib/add.js","../webpack://deployment-feedback/./node_modules/before-after-hook/lib/register.js","../webpack://deployment-feedback/./node_modules/before-after-hook/lib/remove.js","../webpack://deployment-feedback/./node_modules/deprecation/dist-node/index.js","../webpack://deployment-feedback/./node_modules/entities/lib/decode.js","../webpack://deployment-feedback/./node_modules/entities/lib/decode_codepoint.js","../webpack://deployment-feedback/./node_modules/entities/lib/encode.js","../webpack://deployment-feedback/./node_modules/entities/lib/index.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/json2xml.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/nimndata.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/node2json.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/node2json_str.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/parser.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/util.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/validator.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/xmlNode.js","../webpack://deployment-feedback/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../webpack://deployment-feedback/./node_modules/lru-cache/index.js","../webpack://deployment-feedback/./node_modules/node-fetch/lib/index.js","../webpack://deployment-feedback/./node_modules/once/once.js","../webpack://deployment-feedback/./node_modules/semver/classes/comparator.js","../webpack://deployment-feedback/./node_modules/semver/classes/range.js","../webpack://deployment-feedback/./node_modules/semver/classes/semver.js","../webpack://deployment-feedback/./node_modules/semver/functions/clean.js","../webpack://deployment-feedback/./node_modules/semver/functions/cmp.js","../webpack://deployment-feedback/./node_modules/semver/functions/coerce.js","../webpack://deployment-feedback/./node_modules/semver/functions/compare-build.js","../webpack://deployment-feedback/./node_modules/semver/functions/compare-loose.js","../webpack://deployment-feedback/./node_modules/semver/functions/compare.js","../webpack://deployment-feedback/./node_modules/semver/functions/diff.js","../webpack://deployment-feedback/./node_modules/semver/functions/eq.js","../webpack://deployment-feedback/./node_modules/semver/functions/gt.js","../webpack://deployment-feedback/./node_modules/semver/functions/gte.js","../webpack://deployment-feedback/./node_modules/semver/functions/inc.js","../webpack://deployment-feedback/./node_modules/semver/functions/lt.js","../webpack://deployment-feedback/./node_modules/semver/functions/lte.js","../webpack://deployment-feedback/./node_modules/semver/functions/major.js","../webpack://deployment-feedback/./node_modules/semver/functions/minor.js","../webpack://deployment-feedback/./node_modules/semver/functions/neq.js","../webpack://deployment-feedback/./node_modules/semver/functions/parse.js","../webpack://deployment-feedback/./node_modules/semver/functions/patch.js","../webpack://deployment-feedback/./node_modules/semver/functions/prerelease.js","../webpack://deployment-feedback/./node_modules/semver/functions/rcompare.js","../webpack://deployment-feedback/./node_modules/semver/functions/rsort.js","../webpack://deployment-feedback/./node_modules/semver/functions/satisfies.js","../webpack://deployment-feedback/./node_modules/semver/functions/sort.js","../webpack://deployment-feedback/./node_modules/semver/functions/valid.js","../webpack://deployment-feedback/./node_modules/semver/index.js","../webpack://deployment-feedback/./node_modules/semver/internal/constants.js","../webpack://deployment-feedback/./node_modules/semver/internal/debug.js","../webpack://deployment-feedback/./node_modules/semver/internal/identifiers.js","../webpack://deployment-feedback/./node_modules/semver/internal/parse-options.js","../webpack://deployment-feedback/./node_modules/semver/internal/re.js","../webpack://deployment-feedback/./node_modules/semver/ranges/gtr.js","../webpack://deployment-feedback/./node_modules/semver/ranges/intersects.js","../webpack://deployment-feedback/./node_modules/semver/ranges/ltr.js","../webpack://deployment-feedback/./node_modules/semver/ranges/max-satisfying.js","../webpack://deployment-feedback/./node_modules/semver/ranges/min-satisfying.js","../webpack://deployment-feedback/./node_modules/semver/ranges/min-version.js","../webpack://deployment-feedback/./node_modules/semver/ranges/outside.js","../webpack://deployment-feedback/./node_modules/semver/ranges/simplify.js","../webpack://deployment-feedback/./node_modules/semver/ranges/subset.js","../webpack://deployment-feedback/./node_modules/semver/ranges/to-comparators.js","../webpack://deployment-feedback/./node_modules/semver/ranges/valid.js","../webpack://deployment-feedback/./node_modules/tslib/tslib.es6.js","../webpack://deployment-feedback/./node_modules/tunnel/index.js","../webpack://deployment-feedback/./node_modules/tunnel/lib/tunnel.js","../webpack://deployment-feedback/./node_modules/universal-user-agent/dist-node/index.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/rng.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/regex.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/validate.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/stringify.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/v1.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/parse.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/v35.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/md5.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/v3.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/v4.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/sha1.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/v5.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/nil.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/version.js","../webpack://deployment-feedback/./node_modules/uuid/dist/esm-node/index.js","../webpack://deployment-feedback/./node_modules/wrappy/wrappy.js","../webpack://deployment-feedback/./node_modules/yallist/iterator.js","../webpack://deployment-feedback/./node_modules/yallist/yallist.js","../webpack://deployment-feedback/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://deployment-feedback/external \"assert\"","../webpack://deployment-feedback/external \"buffer\"","../webpack://deployment-feedback/external \"child_process\"","../webpack://deployment-feedback/external \"crypto\"","../webpack://deployment-feedback/external \"events\"","../webpack://deployment-feedback/external \"fs\"","../webpack://deployment-feedback/external \"http\"","../webpack://deployment-feedback/external \"http2\"","../webpack://deployment-feedback/external \"https\"","../webpack://deployment-feedback/external \"net\"","../webpack://deployment-feedback/external \"os\"","../webpack://deployment-feedback/external \"path\"","../webpack://deployment-feedback/external \"process\"","../webpack://deployment-feedback/external \"stream\"","../webpack://deployment-feedback/external \"tls\"","../webpack://deployment-feedback/external \"url\"","../webpack://deployment-feedback/external \"util\"","../webpack://deployment-feedback/external \"zlib\"","../webpack://deployment-feedback/webpack/bootstrap","../webpack://deployment-feedback/webpack/runtime/compat get default export","../webpack://deployment-feedback/webpack/runtime/define property getters","../webpack://deployment-feedback/webpack/runtime/hasOwnProperty shorthand","../webpack://deployment-feedback/webpack/runtime/make namespace object","../webpack://deployment-feedback/webpack/runtime/compat","../webpack://deployment-feedback/webpack/startup"],"sourcesContent":["const core = require(\"@actions/core\");\nconst {\n  ECSClient,\n  DescribeServicesCommand,\n  DescribeTaskDefinitionCommand,\n} = require(\"@aws-sdk/client-ecs\");\nconst semver = require(\"semver\");\nconst github = require(\"@actions/github\");\n\nconst REGION = \"eu-north-1\";\n\nconst ENV_VERSION_COMPARATOR = {\n  dev: \">=\", // Deploy all newer versions\n  preview: \"^\", // Deploy only minor and patch versions\n  production: \"~\", // Deploy only patches\n};\n\nasync function getCurrentImage(env, key, secret, repoName, cluster, service) {\n  const client = new ECSClient({\n    region: REGION,\n    credentials: {\n      accessKeyId: key,\n      secretAccessKey: secret,\n    },\n  });\n\n  const describeServiceCmd = new DescribeServicesCommand({\n    cluster,\n    services: [service],\n  });\n\n  const results = await client.send(describeServiceCmd);\n\n  const taskDefinition = results.services[0].taskDefinition;\n\n  const describeTaskCmd = new DescribeTaskDefinitionCommand({\n    taskDefinition,\n  });\n  const taskDefRes = await client.send(describeTaskCmd);\n\n  const td = taskDefRes.taskDefinition;\n  const cds = td.containerDefinitions;\n  const cdx = cds.find((c) => new RegExp(repoName).test(c.image));\n  const currentImage = `${cdx.image}`;\n\n  return {\n    image: currentImage,\n    tag: currentImage.split(\":\")[1],\n  };\n}\n\nasync function deploymentFeedback(opts) {\n  const {\n    releaseVersion,\n    repoName,\n    clusterName,\n    serviceName,\n\n    devEcsKey,\n    devEcsSecret,\n    previewEcsKey,\n    previewEcsSecret,\n    productionEcsKey,\n    productionEcsSecret,\n  } = opts;\n\n  const ECS = {\n    dev: {\n      key: devEcsKey,\n      secret: devEcsSecret,\n    },\n    preview: {\n      key: previewEcsKey,\n      secret: previewEcsSecret,\n    },\n    production: {\n      key: productionEcsKey,\n      secret: productionEcsSecret,\n    },\n  };\n\n  const envs = Object.keys(ENV_VERSION_COMPARATOR).filter((env) => {\n    const hasCredentials = !!ECS[env];\n    return hasCredentials;\n  });\n\n  const images = Promise.all(\n    envs.map(async (env) => {\n      let image;\n      let willBeReplaced = false;\n      try {\n        image = await getCurrentImage(\n          env,\n          ECS[env].key,\n          ECS[env].secret,\n          repoName,\n          `${env}-${clusterName}`,\n          `${env}-${serviceName}`,\n        );\n\n        const currentImageTag = image.tag;\n        const versionComparator = ENV_VERSION_COMPARATOR[env];\n        const isCurrentImageSemver = semver.parse(currentImageTag);\n        const semverRange = `${versionComparator}${currentImageTag}`;\n\n        // Treat prereleases as builds. The + sign is not allowed as\n        // an ECR tag, so we convert it here.\n        const tagAsBuild = releaseVersion.replace(\"-\", \"+\");\n\n        if (isCurrentImageSemver && semver.satisfies(tagAsBuild, semverRange)) {\n          willBeReplaced = true;\n        } else if (/^latest/.test(currentImageTag)) {\n          willBeReplaced = true;\n        }\n\n        return {\n          env,\n          currentImageTag,\n          releaseVersion,\n          willBeReplaced,\n        };\n      } catch (err) {\n        console.log(\"Error fetching current image:\", err);\n      }\n    }),\n  );\n\n  return images;\n}\n\nasync function createComment(token, owner, repo, issueNumber, body) {\n  const octokit = github.getOctokit(token);\n\n  const comment = await octokit.rest.issues.createComment({\n    owner,\n    repo,\n    issueNumber,\n    body,\n  });\n\n  core.info(`Comment created: ${JSON.stringify(comment)}`);\n}\n\nasync function findPullRequest(token, owner, repo, sha) {\n  const octokit = github.getOctokit(token);\n\n  const relatedPullsReq =\n    await octokit.rest.repos.listPullRequestsAssociatedWithCommit({\n      owner,\n      repo,\n      commit_sha: sha,\n    });\n  const relatedPulls = relatedPullsReq.data;\n  const openPrs = relatedPulls.filter((pr) => pr.state === \"open\");\n  const mainPrs = openPrs.filter((pr) => pr.base.ref === \"main\");\n\n  if (mainPrs) {\n    core.info(`${mainPrs.length} PRs open to main: ${JSON.stringify(mainPrs)}`);\n    return mainPrs;\n  } else {\n    return [];\n  }\n}\n\nasync function run() {\n  try {\n    const event = core.getInput(\"event\");\n    core.info(`Event: ${event}`);\n\n    const releaseVersion = core.getInput(\"releaseVersion\");\n    const repository = core.getInput(\"repository\");\n    const [owner, repoName] = repository.split(\"/\");\n\n    const clusterName = core.getInput(\"clusterName\");\n    const serviceName = core.getInput(\"serviceName\");\n\n    const devEcsKey = core.getInput(\"devEcsKey\");\n    const devEcsSecret = core.getInput(\"devEcsSecret\");\n    const previewEcsKey = core.getInput(\"previewEcsKey\");\n    const previewEcsSecret = core.getInput(\"previewEcsSecret\");\n    const productionEcsKey = core.getInput(\"productionEcsKey\");\n    const productionEcsSecret = core.getInput(\"productionEcsSecret\");\n\n    const token = core.getInput(\"token\");\n    const sha = core.getInput(\"sha\");\n\n    const images = await deploymentFeedback({\n      releaseVersion,\n      repoName,\n      clusterName,\n      serviceName,\n      devEcsKey,\n      devEcsSecret,\n      previewEcsKey,\n      previewEcsSecret,\n      productionEcsKey,\n      productionEcsSecret,\n    });\n\n    const summary = images.map((i) => {\n      const icon = i.willBeReplaced ? \"✅\" : \"❌\";\n      return `- ${i.env}: ${icon}  (Current image is: ${i.currentImageTag})`;\n    });\n\n    const body = `Continuous Delivery Summary for **${releaseVersion}**:\n${summary.join(\"\\n\")}\n\n_Information valid as of ${new Date().toISOString()}_`;\n\n    core.info(`Comment body is: ${body}`);\n\n    const prs = await findPullRequest(token, owner, repoName, sha);\n    await Promise.all(\n      prs.map((pr) => createComment(token, owner, repoName, pr.number, body)),\n    );\n\n    core.setOutput(\"images\", JSON.stringify(images));\n  } catch (error) {\n    core.setFailed(error.message);\n  }\n}\n\nrun();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nclass Context {\n    /**\n     * Hydrate the context from the environment\n     */\n    constructor() {\n        var _a, _b, _c;\n        this.payload = {};\n        if (process.env.GITHUB_EVENT_PATH) {\n            if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {\n                this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));\n            }\n            else {\n                const path = process.env.GITHUB_EVENT_PATH;\n                process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);\n            }\n        }\n        this.eventName = process.env.GITHUB_EVENT_NAME;\n        this.sha = process.env.GITHUB_SHA;\n        this.ref = process.env.GITHUB_REF;\n        this.workflow = process.env.GITHUB_WORKFLOW;\n        this.action = process.env.GITHUB_ACTION;\n        this.actor = process.env.GITHUB_ACTOR;\n        this.job = process.env.GITHUB_JOB;\n        this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);\n        this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);\n        this.apiUrl = (_a = process.env.GITHUB_API_URL) !== null && _a !== void 0 ? _a : `https://api.github.com`;\n        this.serverUrl = (_b = process.env.GITHUB_SERVER_URL) !== null && _b !== void 0 ? _b : `https://github.com`;\n        this.graphqlUrl = (_c = process.env.GITHUB_GRAPHQL_URL) !== null && _c !== void 0 ? _c : `https://api.github.com/graphql`;\n    }\n    get issue() {\n        const payload = this.payload;\n        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });\n    }\n    get repo() {\n        if (process.env.GITHUB_REPOSITORY) {\n            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');\n            return { owner, repo };\n        }\n        if (this.payload.repository) {\n            return {\n                owner: this.payload.repository.owner.login,\n                repo: this.payload.repository.name\n            };\n        }\n        throw new Error(\"context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'\");\n    }\n}\nexports.Context = Context;\n//# sourceMappingURL=context.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokit = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst utils_1 = require(\"./utils\");\nexports.context = new Context.Context();\n/**\n * Returns a hydrated octokit ready to use for GitHub Actions\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokit(token, options) {\n    return new utils_1.GitHub(utils_1.getOctokitOptions(token, options));\n}\nexports.getOctokit = getOctokit;\n//# sourceMappingURL=github.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApiBaseUrl = exports.getProxyAgent = exports.getAuthString = void 0;\nconst httpClient = __importStar(require(\"@actions/http-client\"));\nfunction getAuthString(token, options) {\n    if (!token && !options.auth) {\n        throw new Error('Parameter token or opts.auth is required');\n    }\n    else if (token && options.auth) {\n        throw new Error('Parameters token and opts.auth may not both be specified');\n    }\n    return typeof options.auth === 'string' ? options.auth : `token ${token}`;\n}\nexports.getAuthString = getAuthString;\nfunction getProxyAgent(destinationUrl) {\n    const hc = new httpClient.HttpClient();\n    return hc.getAgent(destinationUrl);\n}\nexports.getProxyAgent = getProxyAgent;\nfunction getApiBaseUrl() {\n    return process.env['GITHUB_API_URL'] || 'https://api.github.com';\n}\nexports.getApiBaseUrl = getApiBaseUrl;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokitOptions = exports.GitHub = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst Utils = __importStar(require(\"./internal/utils\"));\n// octokit + plugins\nconst core_1 = require(\"@octokit/core\");\nconst plugin_rest_endpoint_methods_1 = require(\"@octokit/plugin-rest-endpoint-methods\");\nconst plugin_paginate_rest_1 = require(\"@octokit/plugin-paginate-rest\");\nexports.context = new Context.Context();\nconst baseUrl = Utils.getApiBaseUrl();\nconst defaults = {\n    baseUrl,\n    request: {\n        agent: Utils.getProxyAgent(baseUrl)\n    }\n};\nexports.GitHub = core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods, plugin_paginate_rest_1.paginateRest).defaults(defaults);\n/**\n * Convience function to correctly format Octokit Options to pass into the constructor.\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokitOptions(token, options) {\n    const opts = Object.assign({}, options || {}); // Shallow clone - don't mutate the object provided by the caller\n    // Auth\n    const auth = Utils.getAuthString(token, opts);\n    if (auth) {\n        opts.auth = auth;\n    }\n    return opts;\n}\nexports.getOctokitOptions = getOctokitOptions;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ECS = void 0;\nconst ECSClient_1 = require(\"./ECSClient\");\nconst CreateCapacityProviderCommand_1 = require(\"./commands/CreateCapacityProviderCommand\");\nconst CreateClusterCommand_1 = require(\"./commands/CreateClusterCommand\");\nconst CreateServiceCommand_1 = require(\"./commands/CreateServiceCommand\");\nconst CreateTaskSetCommand_1 = require(\"./commands/CreateTaskSetCommand\");\nconst DeleteAccountSettingCommand_1 = require(\"./commands/DeleteAccountSettingCommand\");\nconst DeleteAttributesCommand_1 = require(\"./commands/DeleteAttributesCommand\");\nconst DeleteCapacityProviderCommand_1 = require(\"./commands/DeleteCapacityProviderCommand\");\nconst DeleteClusterCommand_1 = require(\"./commands/DeleteClusterCommand\");\nconst DeleteServiceCommand_1 = require(\"./commands/DeleteServiceCommand\");\nconst DeleteTaskSetCommand_1 = require(\"./commands/DeleteTaskSetCommand\");\nconst DeregisterContainerInstanceCommand_1 = require(\"./commands/DeregisterContainerInstanceCommand\");\nconst DeregisterTaskDefinitionCommand_1 = require(\"./commands/DeregisterTaskDefinitionCommand\");\nconst DescribeCapacityProvidersCommand_1 = require(\"./commands/DescribeCapacityProvidersCommand\");\nconst DescribeClustersCommand_1 = require(\"./commands/DescribeClustersCommand\");\nconst DescribeContainerInstancesCommand_1 = require(\"./commands/DescribeContainerInstancesCommand\");\nconst DescribeServicesCommand_1 = require(\"./commands/DescribeServicesCommand\");\nconst DescribeTaskDefinitionCommand_1 = require(\"./commands/DescribeTaskDefinitionCommand\");\nconst DescribeTaskSetsCommand_1 = require(\"./commands/DescribeTaskSetsCommand\");\nconst DescribeTasksCommand_1 = require(\"./commands/DescribeTasksCommand\");\nconst DiscoverPollEndpointCommand_1 = require(\"./commands/DiscoverPollEndpointCommand\");\nconst ExecuteCommandCommand_1 = require(\"./commands/ExecuteCommandCommand\");\nconst ListAccountSettingsCommand_1 = require(\"./commands/ListAccountSettingsCommand\");\nconst ListAttributesCommand_1 = require(\"./commands/ListAttributesCommand\");\nconst ListClustersCommand_1 = require(\"./commands/ListClustersCommand\");\nconst ListContainerInstancesCommand_1 = require(\"./commands/ListContainerInstancesCommand\");\nconst ListServicesCommand_1 = require(\"./commands/ListServicesCommand\");\nconst ListTagsForResourceCommand_1 = require(\"./commands/ListTagsForResourceCommand\");\nconst ListTaskDefinitionFamiliesCommand_1 = require(\"./commands/ListTaskDefinitionFamiliesCommand\");\nconst ListTaskDefinitionsCommand_1 = require(\"./commands/ListTaskDefinitionsCommand\");\nconst ListTasksCommand_1 = require(\"./commands/ListTasksCommand\");\nconst PutAccountSettingCommand_1 = require(\"./commands/PutAccountSettingCommand\");\nconst PutAccountSettingDefaultCommand_1 = require(\"./commands/PutAccountSettingDefaultCommand\");\nconst PutAttributesCommand_1 = require(\"./commands/PutAttributesCommand\");\nconst PutClusterCapacityProvidersCommand_1 = require(\"./commands/PutClusterCapacityProvidersCommand\");\nconst RegisterContainerInstanceCommand_1 = require(\"./commands/RegisterContainerInstanceCommand\");\nconst RegisterTaskDefinitionCommand_1 = require(\"./commands/RegisterTaskDefinitionCommand\");\nconst RunTaskCommand_1 = require(\"./commands/RunTaskCommand\");\nconst StartTaskCommand_1 = require(\"./commands/StartTaskCommand\");\nconst StopTaskCommand_1 = require(\"./commands/StopTaskCommand\");\nconst SubmitAttachmentStateChangesCommand_1 = require(\"./commands/SubmitAttachmentStateChangesCommand\");\nconst SubmitContainerStateChangeCommand_1 = require(\"./commands/SubmitContainerStateChangeCommand\");\nconst SubmitTaskStateChangeCommand_1 = require(\"./commands/SubmitTaskStateChangeCommand\");\nconst TagResourceCommand_1 = require(\"./commands/TagResourceCommand\");\nconst UntagResourceCommand_1 = require(\"./commands/UntagResourceCommand\");\nconst UpdateCapacityProviderCommand_1 = require(\"./commands/UpdateCapacityProviderCommand\");\nconst UpdateClusterCommand_1 = require(\"./commands/UpdateClusterCommand\");\nconst UpdateClusterSettingsCommand_1 = require(\"./commands/UpdateClusterSettingsCommand\");\nconst UpdateContainerAgentCommand_1 = require(\"./commands/UpdateContainerAgentCommand\");\nconst UpdateContainerInstancesStateCommand_1 = require(\"./commands/UpdateContainerInstancesStateCommand\");\nconst UpdateServiceCommand_1 = require(\"./commands/UpdateServiceCommand\");\nconst UpdateServicePrimaryTaskSetCommand_1 = require(\"./commands/UpdateServicePrimaryTaskSetCommand\");\nconst UpdateTaskSetCommand_1 = require(\"./commands/UpdateTaskSetCommand\");\n/**\n * <fullname>Amazon Elastic Container Service</fullname>\n * \t\t       <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service that makes\n * \t\t\tit easy to run, stop, and manage Docker containers on a cluster. You can host your\n * \t\t\tcluster on a serverless infrastructure that is managed by Amazon ECS by launching your\n * \t\t\tservices or tasks on AWS Fargate. For more control, you can host your tasks on a cluster\n * \t\t\tof Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage.</p>\n * \t\t       <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API\n * \t\t\tcalls, allows you to get the state of your cluster from a centralized service, and gives\n * \t\t\tyou access to many familiar Amazon EC2 features.</p>\n * \t\t       <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on\n * \t\t\tyour resource needs, isolation policies, and availability requirements. Amazon ECS eliminates\n * \t\t\tthe need for you to operate your own cluster management and configuration management\n * \t\t\tsystems or worry about scaling your management infrastructure.</p>\n */\nclass ECS extends ECSClient_1.ECSClient {\n    createCapacityProvider(args, optionsOrCb, cb) {\n        const command = new CreateCapacityProviderCommand_1.CreateCapacityProviderCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createCluster(args, optionsOrCb, cb) {\n        const command = new CreateClusterCommand_1.CreateClusterCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createService(args, optionsOrCb, cb) {\n        const command = new CreateServiceCommand_1.CreateServiceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createTaskSet(args, optionsOrCb, cb) {\n        const command = new CreateTaskSetCommand_1.CreateTaskSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteAccountSetting(args, optionsOrCb, cb) {\n        const command = new DeleteAccountSettingCommand_1.DeleteAccountSettingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteAttributes(args, optionsOrCb, cb) {\n        const command = new DeleteAttributesCommand_1.DeleteAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteCapacityProvider(args, optionsOrCb, cb) {\n        const command = new DeleteCapacityProviderCommand_1.DeleteCapacityProviderCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteCluster(args, optionsOrCb, cb) {\n        const command = new DeleteClusterCommand_1.DeleteClusterCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteService(args, optionsOrCb, cb) {\n        const command = new DeleteServiceCommand_1.DeleteServiceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteTaskSet(args, optionsOrCb, cb) {\n        const command = new DeleteTaskSetCommand_1.DeleteTaskSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deregisterContainerInstance(args, optionsOrCb, cb) {\n        const command = new DeregisterContainerInstanceCommand_1.DeregisterContainerInstanceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deregisterTaskDefinition(args, optionsOrCb, cb) {\n        const command = new DeregisterTaskDefinitionCommand_1.DeregisterTaskDefinitionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeCapacityProviders(args, optionsOrCb, cb) {\n        const command = new DescribeCapacityProvidersCommand_1.DescribeCapacityProvidersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeClusters(args, optionsOrCb, cb) {\n        const command = new DescribeClustersCommand_1.DescribeClustersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeContainerInstances(args, optionsOrCb, cb) {\n        const command = new DescribeContainerInstancesCommand_1.DescribeContainerInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeServices(args, optionsOrCb, cb) {\n        const command = new DescribeServicesCommand_1.DescribeServicesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeTaskDefinition(args, optionsOrCb, cb) {\n        const command = new DescribeTaskDefinitionCommand_1.DescribeTaskDefinitionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeTasks(args, optionsOrCb, cb) {\n        const command = new DescribeTasksCommand_1.DescribeTasksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeTaskSets(args, optionsOrCb, cb) {\n        const command = new DescribeTaskSetsCommand_1.DescribeTaskSetsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    discoverPollEndpoint(args, optionsOrCb, cb) {\n        const command = new DiscoverPollEndpointCommand_1.DiscoverPollEndpointCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    executeCommand(args, optionsOrCb, cb) {\n        const command = new ExecuteCommandCommand_1.ExecuteCommandCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountSettings(args, optionsOrCb, cb) {\n        const command = new ListAccountSettingsCommand_1.ListAccountSettingsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAttributes(args, optionsOrCb, cb) {\n        const command = new ListAttributesCommand_1.ListAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listClusters(args, optionsOrCb, cb) {\n        const command = new ListClustersCommand_1.ListClustersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listContainerInstances(args, optionsOrCb, cb) {\n        const command = new ListContainerInstancesCommand_1.ListContainerInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listServices(args, optionsOrCb, cb) {\n        const command = new ListServicesCommand_1.ListServicesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTagsForResource(args, optionsOrCb, cb) {\n        const command = new ListTagsForResourceCommand_1.ListTagsForResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTaskDefinitionFamilies(args, optionsOrCb, cb) {\n        const command = new ListTaskDefinitionFamiliesCommand_1.ListTaskDefinitionFamiliesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTaskDefinitions(args, optionsOrCb, cb) {\n        const command = new ListTaskDefinitionsCommand_1.ListTaskDefinitionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTasks(args, optionsOrCb, cb) {\n        const command = new ListTasksCommand_1.ListTasksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putAccountSetting(args, optionsOrCb, cb) {\n        const command = new PutAccountSettingCommand_1.PutAccountSettingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putAccountSettingDefault(args, optionsOrCb, cb) {\n        const command = new PutAccountSettingDefaultCommand_1.PutAccountSettingDefaultCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putAttributes(args, optionsOrCb, cb) {\n        const command = new PutAttributesCommand_1.PutAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putClusterCapacityProviders(args, optionsOrCb, cb) {\n        const command = new PutClusterCapacityProvidersCommand_1.PutClusterCapacityProvidersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    registerContainerInstance(args, optionsOrCb, cb) {\n        const command = new RegisterContainerInstanceCommand_1.RegisterContainerInstanceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    registerTaskDefinition(args, optionsOrCb, cb) {\n        const command = new RegisterTaskDefinitionCommand_1.RegisterTaskDefinitionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    runTask(args, optionsOrCb, cb) {\n        const command = new RunTaskCommand_1.RunTaskCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    startTask(args, optionsOrCb, cb) {\n        const command = new StartTaskCommand_1.StartTaskCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    stopTask(args, optionsOrCb, cb) {\n        const command = new StopTaskCommand_1.StopTaskCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    submitAttachmentStateChanges(args, optionsOrCb, cb) {\n        const command = new SubmitAttachmentStateChangesCommand_1.SubmitAttachmentStateChangesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    submitContainerStateChange(args, optionsOrCb, cb) {\n        const command = new SubmitContainerStateChangeCommand_1.SubmitContainerStateChangeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    submitTaskStateChange(args, optionsOrCb, cb) {\n        const command = new SubmitTaskStateChangeCommand_1.SubmitTaskStateChangeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    tagResource(args, optionsOrCb, cb) {\n        const command = new TagResourceCommand_1.TagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    untagResource(args, optionsOrCb, cb) {\n        const command = new UntagResourceCommand_1.UntagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateCapacityProvider(args, optionsOrCb, cb) {\n        const command = new UpdateCapacityProviderCommand_1.UpdateCapacityProviderCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateCluster(args, optionsOrCb, cb) {\n        const command = new UpdateClusterCommand_1.UpdateClusterCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateClusterSettings(args, optionsOrCb, cb) {\n        const command = new UpdateClusterSettingsCommand_1.UpdateClusterSettingsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateContainerAgent(args, optionsOrCb, cb) {\n        const command = new UpdateContainerAgentCommand_1.UpdateContainerAgentCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateContainerInstancesState(args, optionsOrCb, cb) {\n        const command = new UpdateContainerInstancesStateCommand_1.UpdateContainerInstancesStateCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateService(args, optionsOrCb, cb) {\n        const command = new UpdateServiceCommand_1.UpdateServiceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateServicePrimaryTaskSet(args, optionsOrCb, cb) {\n        const command = new UpdateServicePrimaryTaskSetCommand_1.UpdateServicePrimaryTaskSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateTaskSet(args, optionsOrCb, cb) {\n        const command = new UpdateTaskSetCommand_1.UpdateTaskSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.ECS = ECS;\n//# sourceMappingURL=ECS.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ECSClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <fullname>Amazon Elastic Container Service</fullname>\n * \t\t       <p>Amazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service that makes\n * \t\t\tit easy to run, stop, and manage Docker containers on a cluster. You can host your\n * \t\t\tcluster on a serverless infrastructure that is managed by Amazon ECS by launching your\n * \t\t\tservices or tasks on AWS Fargate. For more control, you can host your tasks on a cluster\n * \t\t\tof Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage.</p>\n * \t\t       <p>Amazon ECS makes it easy to launch and stop container-based applications with simple API\n * \t\t\tcalls, allows you to get the state of your cluster from a centralized service, and gives\n * \t\t\tyou access to many familiar Amazon EC2 features.</p>\n * \t\t       <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on\n * \t\t\tyour resource needs, isolation policies, and availability requirements. Amazon ECS eliminates\n * \t\t\tthe need for you to operate your own cluster management and configuration management\n * \t\t\tsystems or worry about scaling your management infrastructure.</p>\n */\nclass ECSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = {\n            ...runtimeConfig_1.ClientDefaultValues,\n            ...configuration,\n        };\n        let _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        let _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        let _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        let _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        let _config_5 = middleware_signing_1.resolveAwsAuthConfig(_config_4);\n        let _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.ECSClient = ECSClient;\n//# sourceMappingURL=ECSClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCapacityProviderCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a new capacity provider. Capacity providers are associated with an Amazon ECS\n * \t\t\tcluster and are used in capacity provider strategies to facilitate cluster auto\n * \t\t\tscaling.</p>\n * \t\t       <p>Only capacity providers using an Auto Scaling group can be created. Amazon ECS tasks on\n * \t\t\tAWS Fargate use the <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers\n * \t\t\twhich are already created and available to all accounts in Regions supported by\n * \t\t\tAWS Fargate.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, CreateCapacityProviderCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, CreateCapacityProviderCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new CreateCapacityProviderCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateCapacityProviderCommandInput} for command's `input` shape.\n * @see {@link CreateCapacityProviderCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateCapacityProviderCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"CreateCapacityProviderCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateCapacityProviderRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateCapacityProviderResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1CreateCapacityProviderCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1CreateCapacityProviderCommand(output, context);\n    }\n}\nexports.CreateCapacityProviderCommand = CreateCapacityProviderCommand;\n//# sourceMappingURL=CreateCapacityProviderCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateClusterCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>\n * \t\t\tcluster when you launch your first container instance. However, you can create your own\n * \t\t\tcluster with a unique name with the <code>CreateCluster</code> action.</p>\n * \t\t       <note>\n * \t\t\t         <p>When you call the <a>CreateCluster</a> API operation, Amazon ECS attempts to\n * \t\t\t\tcreate the Amazon ECS service-linked role for your account so that required resources in\n * \t\t\t\tother AWS services can be managed on your behalf. However, if the IAM user that\n * \t\t\t\tmakes the call does not have permissions to create the service-linked role, it is\n * \t\t\t\tnot created. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html\">Using\n * \t\t\t\t\tService-Linked Roles for Amazon ECS</a> in the\n * \t\t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, CreateClusterCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, CreateClusterCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new CreateClusterCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateClusterCommandInput} for command's `input` shape.\n * @see {@link CreateClusterCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateClusterCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"CreateClusterCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateClusterRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateClusterResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1CreateClusterCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1CreateClusterCommand(output, context);\n    }\n}\nexports.CreateClusterCommand = CreateClusterCommand;\n//# sourceMappingURL=CreateClusterCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateServiceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Runs and maintains a desired number of tasks from a specified task definition. If the\n * \t\t\tnumber of tasks running in a service drops below the <code>desiredCount</code>, Amazon ECS\n * \t\t\truns another copy of the task in the specified cluster. To update an existing service,\n * \t\t\tsee the UpdateService action.</p>\n * \t\t       <p>In addition to maintaining the desired count of tasks in your service, you can\n * \t\t\toptionally run your service behind one or more load balancers. The load balancers\n * \t\t\tdistribute traffic across the tasks that are associated with the service. For more\n * \t\t\tinformation, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html\">Service Load Balancing</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>Tasks for services that <i>do not</i> use a load balancer are considered\n * \t\t\thealthy if they're in the <code>RUNNING</code> state. Tasks for services that\n * \t\t\t\t<i>do</i> use a load balancer are considered healthy if they're in the\n * \t\t\t\t<code>RUNNING</code> state and the container instance that they're hosted on is\n * \t\t\treported as healthy by the load balancer.</p>\n * \t\t       <p>There are two service scheduler strategies available:</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>\n *                   <code>REPLICA</code> - The replica scheduling strategy places and\n * \t\t\t\t\tmaintains the desired number of tasks across your cluster. By default, the\n * \t\t\t\t\tservice scheduler spreads tasks across Availability Zones. You can use task\n * \t\t\t\t\tplacement strategies and constraints to customize task placement decisions. For\n * \t\t\t\t\tmore information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\">Service Scheduler Concepts</a> in the\n * \t\t\t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>\n *                   <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one\n * \t\t\t\t\ttask on each active container instance that meets all of the task placement\n * \t\t\t\t\tconstraints that you specify in your cluster. The service scheduler also\n * \t\t\t\t\tevaluates the task placement constraints for running tasks and will stop tasks\n * \t\t\t\t\tthat do not meet the placement constraints. When using this strategy, you don't\n * \t\t\t\t\tneed to specify a desired number of tasks, a task placement strategy, or use\n * \t\t\t\t\tService Auto Scaling policies. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\">Service Scheduler Concepts</a> in the\n * \t\t\t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t\t         </li>\n *          </ul>\n * \t\t       <p>You can optionally specify a deployment configuration for your service. The deployment\n * \t\t\tis triggered by changing properties, such as the task definition or the desired count of\n * \t\t\ta service, with an <a>UpdateService</a> operation. The default value for a\n * \t\t\treplica service for <code>minimumHealthyPercent</code> is 100%. The default value for a\n * \t\t\tdaemon service for <code>minimumHealthyPercent</code> is 0%.</p>\n * \t\t       <p>If a service is using the <code>ECS</code> deployment controller, the minimum healthy\n * \t\t\tpercent represents a lower limit on the number of tasks in a service that must remain in\n * \t\t\tthe <code>RUNNING</code> state during a deployment, as a percentage of the desired\n * \t\t\tnumber of tasks (rounded up to the nearest integer), and while any container instances\n * \t\t\tare in the <code>DRAINING</code> state if the service contains tasks using the\n * \t\t\tEC2 launch type. This parameter enables you to deploy without using\n * \t\t\tadditional cluster capacity. For example, if your service has a desired number of four\n * \t\t\ttasks and a minimum healthy percent of 50%, the scheduler might stop two existing tasks\n * \t\t\tto free up cluster capacity before starting two new tasks. Tasks for services that\n * \t\t\t\t<i>do not</i> use a load balancer are considered healthy if they're in\n * \t\t\tthe <code>RUNNING</code> state. Tasks for services that <i>do</i> use a\n * \t\t\tload balancer are considered healthy if they're in the <code>RUNNING</code> state and\n * \t\t\tthey're reported as healthy by the load balancer. The default value for minimum healthy\n * \t\t\tpercent is 100%.</p>\n * \t\t       <p>If a service is using the <code>ECS</code> deployment controller, the <b>maximum percent</b> parameter represents an upper limit on the\n * \t\t\tnumber of tasks in a service that are allowed in the <code>RUNNING</code> or\n * \t\t\t\t<code>PENDING</code> state during a deployment, as a percentage of the desired\n * \t\t\tnumber of tasks (rounded down to the nearest integer), and while any container instances\n * \t\t\tare in the <code>DRAINING</code> state if the service contains tasks using the\n * \t\t\tEC2 launch type. This parameter enables you to define the deployment batch\n * \t\t\tsize. For example, if your service has a desired number of four tasks and a maximum\n * \t\t\tpercent value of 200%, the scheduler may start four new tasks before stopping the four\n * \t\t\tolder tasks (provided that the cluster resources required to do this are available). The\n * \t\t\tdefault value for maximum percent is 200%.</p>\n * \t\t       <p>If a service is using either the <code>CODE_DEPLOY</code> or <code>EXTERNAL</code>\n * \t\t\tdeployment controller types and tasks that use the EC2 launch type, the\n * \t\t\t\t<b>minimum healthy percent</b> and <b>maximum percent</b> values are used only to define the lower and upper limit\n * \t\t\ton the number of the tasks in the service that remain in the <code>RUNNING</code> state\n * \t\t\twhile the container instances are in the <code>DRAINING</code> state. If the tasks in\n * \t\t\tthe service use the Fargate launch type, the minimum healthy percent and\n * \t\t\tmaximum percent values aren't used, although they're currently visible when describing\n * \t\t\tyour service.</p>\n * \t\t       <p>When creating a service that uses the <code>EXTERNAL</code> deployment controller, you\n * \t\t\tcan specify only parameters that aren't controlled at the task set level. The only\n * \t\t\trequired parameter is the service name. You control your services using the <a>CreateTaskSet</a> operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>When the service scheduler launches new tasks, it determines task placement in your\n * \t\t\tcluster using the following logic:</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>Determine which of the container instances in your cluster can support your\n * \t\t\t\t\tservice's task definition (for example, they have the required CPU, memory,\n * \t\t\t\t\tports, and container instance attributes).</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>By default, the service scheduler attempts to balance tasks across\n * \t\t\t\t\tAvailability Zones in this manner (although you can choose a different placement\n * \t\t\t\t\tstrategy) with the <code>placementStrategy</code> parameter):</p>\n * \t\t\t\t           <ul>\n *                   <li>\n * \t\t\t\t\t\t               <p>Sort the valid container instances, giving priority to instances that\n * \t\t\t\t\t\t\thave the fewest number of running tasks for this service in their\n * \t\t\t\t\t\t\trespective Availability Zone. For example, if zone A has one running\n * \t\t\t\t\t\t\tservice task and zones B and C each have zero, valid container instances\n * \t\t\t\t\t\t\tin either zone B or C are considered optimal for placement.</p>\n * \t\t\t\t\t             </li>\n *                   <li>\n * \t\t\t\t\t\t               <p>Place the new service task on a valid container instance in an optimal\n * \t\t\t\t\t\t\tAvailability Zone (based on the previous steps), favoring container\n * \t\t\t\t\t\t\tinstances with the fewest number of running tasks for this\n * \t\t\t\t\t\t\tservice.</p>\n * \t\t\t\t\t             </li>\n *                </ul>\n * \t\t\t         </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, CreateServiceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, CreateServiceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new CreateServiceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateServiceCommandInput} for command's `input` shape.\n * @see {@link CreateServiceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateServiceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"CreateServiceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateServiceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateServiceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1CreateServiceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1CreateServiceCommand(output, context);\n    }\n}\nexports.CreateServiceCommand = CreateServiceCommand;\n//# sourceMappingURL=CreateServiceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateTaskSetCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Create a task set in the specified cluster and service. This is used when a service\n * \t\t\tuses the <code>EXTERNAL</code> deployment controller type. For more information, see\n * \t\t\t\t<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment\n * \t\t\t\tTypes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, CreateTaskSetCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, CreateTaskSetCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new CreateTaskSetCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateTaskSetCommandInput} for command's `input` shape.\n * @see {@link CreateTaskSetCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateTaskSetCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"CreateTaskSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateTaskSetRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateTaskSetResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1CreateTaskSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1CreateTaskSetCommand(output, context);\n    }\n}\nexports.CreateTaskSetCommand = CreateTaskSetCommand;\n//# sourceMappingURL=CreateTaskSetCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteAccountSettingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Disables an account setting for a specified IAM user, IAM role, or the root user for\n * \t\t\tan account.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteAccountSettingCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteAccountSettingCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteAccountSettingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteAccountSettingCommandInput} for command's `input` shape.\n * @see {@link DeleteAccountSettingCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteAccountSettingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteAccountSettingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteAccountSettingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteAccountSettingResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteAccountSettingCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteAccountSettingCommand(output, context);\n    }\n}\nexports.DeleteAccountSettingCommand = DeleteAccountSettingCommand;\n//# sourceMappingURL=DeleteAccountSettingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteAttributesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes one or more custom attributes from an Amazon ECS resource.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteAttributesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteAttributesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteAttributesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteAttributesCommandInput} for command's `input` shape.\n * @see {@link DeleteAttributesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteAttributesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteAttributesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteAttributesCommand(output, context);\n    }\n}\nexports.DeleteAttributesCommand = DeleteAttributesCommand;\n//# sourceMappingURL=DeleteAttributesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCapacityProviderCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes the specified capacity provider.</p>\n * \t\t       <note>\n * \t\t\t         <p>The <code>FARGATE</code> and <code>FARGATE_SPOT</code> capacity providers are\n * \t\t\t\treserved and cannot be deleted. You can disassociate them from a cluster using\n * \t\t\t\teither the <a>PutClusterCapacityProviders</a> API or by deleting the\n * \t\t\t\tcluster.</p>\n * \t\t       </note>\n * \t\t       <p>Prior to a capacity provider being deleted, the capacity provider must be removed from\n * \t\t\tthe capacity provider strategy from all services. The <a>UpdateService</a>\n * \t\t\tAPI can be used to remove a capacity provider from a service's capacity provider\n * \t\t\tstrategy. When updating a service, the <code>forceNewDeployment</code> option can be\n * \t\t\tused to ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity\n * \t\t\tprovider are transitioned to use the capacity from the remaining capacity providers.\n * \t\t\tOnly capacity providers that are not associated with a cluster can be deleted. To remove\n * \t\t\ta capacity provider from a cluster, you can either use <a>PutClusterCapacityProviders</a> or delete the cluster.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteCapacityProviderCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteCapacityProviderCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteCapacityProviderCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteCapacityProviderCommandInput} for command's `input` shape.\n * @see {@link DeleteCapacityProviderCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteCapacityProviderCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteCapacityProviderCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteCapacityProviderRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteCapacityProviderResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteCapacityProviderCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteCapacityProviderCommand(output, context);\n    }\n}\nexports.DeleteCapacityProviderCommand = DeleteCapacityProviderCommand;\n//# sourceMappingURL=DeleteCapacityProviderCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteClusterCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes the specified cluster. The cluster will transition to the\n * \t\t\t\t<code>INACTIVE</code> state. Clusters with an <code>INACTIVE</code> status may\n * \t\t\tremain discoverable in your account for a period of time. However, this behavior is\n * \t\t\tsubject to change in the future, so you should not rely on <code>INACTIVE</code>\n * \t\t\tclusters persisting.</p>\n * \t\t       <p>You must deregister all container instances from this cluster before you may delete\n * \t\t\tit. You can list the container instances in a cluster with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteClusterCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteClusterCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteClusterCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteClusterCommandInput} for command's `input` shape.\n * @see {@link DeleteClusterCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteClusterCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteClusterCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteClusterRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteClusterResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteClusterCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteClusterCommand(output, context);\n    }\n}\nexports.DeleteClusterCommand = DeleteClusterCommand;\n//# sourceMappingURL=DeleteClusterCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteServiceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes a specified service within a cluster. You can delete a service if you have no\n * \t\t\trunning tasks in it and the desired task count is zero. If the service is actively\n * \t\t\tmaintaining tasks, you cannot delete it, and you must update the service to a desired\n * \t\t\ttask count of zero. For more information, see <a>UpdateService</a>.</p>\n * \t\t       <note>\n * \t\t\t         <p>When you delete a service, if there are still running tasks that require cleanup,\n * \t\t\t\tthe service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the\n * \t\t\t\tservice is no longer visible in the console or in the <a>ListServices</a>\n * \t\t\t\tAPI operation. After all tasks have transitioned to either <code>STOPPING</code> or\n * \t\t\t\t\t<code>STOPPED</code> status, the service status moves from <code>DRAINING</code>\n * \t\t\t\tto <code>INACTIVE</code>. Services in the <code>DRAINING</code> or\n * \t\t\t\t\t<code>INACTIVE</code> status can still be viewed with the <a>DescribeServices</a> API operation. However, in the future,\n * \t\t\t\t\t<code>INACTIVE</code> services may be cleaned up and purged from Amazon ECS record\n * \t\t\t\tkeeping, and <a>DescribeServices</a> calls on those services return a\n * \t\t\t\t\t<code>ServiceNotFoundException</code> error.</p>\n * \t\t       </note>\n * \t\t       <important>\n * \t\t\t         <p>If you attempt to create a new service with the same name as an existing service\n * \t\t\t\tin either <code>ACTIVE</code> or <code>DRAINING</code> status, you receive an\n * \t\t\t\terror.</p>\n * \t\t       </important>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteServiceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteServiceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteServiceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteServiceCommandInput} for command's `input` shape.\n * @see {@link DeleteServiceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteServiceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteServiceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteServiceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteServiceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteServiceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteServiceCommand(output, context);\n    }\n}\nexports.DeleteServiceCommand = DeleteServiceCommand;\n//# sourceMappingURL=DeleteServiceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteTaskSetCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes a specified task set within a service. This is used when a service uses the\n * \t\t\t\t<code>EXTERNAL</code> deployment controller type. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeleteTaskSetCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeleteTaskSetCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeleteTaskSetCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteTaskSetCommandInput} for command's `input` shape.\n * @see {@link DeleteTaskSetCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteTaskSetCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeleteTaskSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteTaskSetRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteTaskSetResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeleteTaskSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeleteTaskSetCommand(output, context);\n    }\n}\nexports.DeleteTaskSetCommand = DeleteTaskSetCommand;\n//# sourceMappingURL=DeleteTaskSetCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeregisterContainerInstanceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deregisters an Amazon ECS container instance from the specified cluster. This instance is\n * \t\t\tno longer available to run tasks.</p>\n * \t\t       <p>If you intend to use the container instance for some other purpose after\n * \t\t\tderegistration, you should stop all of the tasks running on the container instance\n * \t\t\tbefore deregistration. That prevents any orphaned tasks from consuming resources.</p>\n * \t\t       <p>Deregistering a container instance removes the instance from a cluster, but it does\n * \t\t\tnot terminate the EC2 instance. If you are finished using the instance, be sure to\n * \t\t\tterminate it in the Amazon EC2 console to stop billing.</p>\n * \t\t       <note>\n * \t\t\t         <p>If you terminate a running container instance, Amazon ECS automatically deregisters the\n * \t\t\t\tinstance from your cluster (stopped container instances or instances with\n * \t\t\t\tdisconnected agents are not automatically deregistered when terminated).</p>\n * \t\t       </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeregisterContainerInstanceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeregisterContainerInstanceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeregisterContainerInstanceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeregisterContainerInstanceCommandInput} for command's `input` shape.\n * @see {@link DeregisterContainerInstanceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeregisterContainerInstanceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeregisterContainerInstanceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeregisterContainerInstanceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeregisterContainerInstanceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeregisterContainerInstanceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeregisterContainerInstanceCommand(output, context);\n    }\n}\nexports.DeregisterContainerInstanceCommand = DeregisterContainerInstanceCommand;\n//# sourceMappingURL=DeregisterContainerInstanceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeregisterTaskDefinitionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deregisters the specified task definition by family and revision. Upon deregistration,\n * \t\t\tthe task definition is marked as <code>INACTIVE</code>. Existing tasks and services that\n * \t\t\treference an <code>INACTIVE</code> task definition continue to run without disruption.\n * \t\t\tExisting services that reference an <code>INACTIVE</code> task definition can still\n * \t\t\tscale up or down by modifying the service's desired count.</p>\n * \t\t       <p>You cannot use an <code>INACTIVE</code> task definition to run new tasks or create new\n * \t\t\tservices, and you cannot update an existing service to reference an\n * \t\t\t\t<code>INACTIVE</code> task definition. However, there may be up to a 10-minute\n * \t\t\twindow following deregistration where these restrictions have not yet taken\n * \t\t\teffect.</p>\n * \t\t       <note>\n * \t\t\t         <p>At this time, <code>INACTIVE</code> task definitions remain discoverable in your\n * \t\t\t\taccount indefinitely. However, this behavior is subject to change in the future, so\n * \t\t\t\tyou should not rely on <code>INACTIVE</code> task definitions persisting beyond the\n * \t\t\t\tlifecycle of any associated tasks and services.</p>\n * \t\t       </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DeregisterTaskDefinitionCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DeregisterTaskDefinitionCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DeregisterTaskDefinitionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeregisterTaskDefinitionCommandInput} for command's `input` shape.\n * @see {@link DeregisterTaskDefinitionCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeregisterTaskDefinitionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DeregisterTaskDefinitionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeregisterTaskDefinitionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeregisterTaskDefinitionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DeregisterTaskDefinitionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DeregisterTaskDefinitionCommand(output, context);\n    }\n}\nexports.DeregisterTaskDefinitionCommand = DeregisterTaskDefinitionCommand;\n//# sourceMappingURL=DeregisterTaskDefinitionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeCapacityProvidersCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes one or more of your capacity providers.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeCapacityProvidersCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeCapacityProvidersCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeCapacityProvidersCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeCapacityProvidersCommandInput} for command's `input` shape.\n * @see {@link DescribeCapacityProvidersCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeCapacityProvidersCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeCapacityProvidersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeCapacityProvidersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeCapacityProvidersResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeCapacityProvidersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeCapacityProvidersCommand(output, context);\n    }\n}\nexports.DescribeCapacityProvidersCommand = DescribeCapacityProvidersCommand;\n//# sourceMappingURL=DescribeCapacityProvidersCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeClustersCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes one or more of your clusters.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeClustersCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeClustersCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeClustersCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeClustersCommandInput} for command's `input` shape.\n * @see {@link DescribeClustersCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeClustersCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeClustersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeClustersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeClustersResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeClustersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeClustersCommand(output, context);\n    }\n}\nexports.DescribeClustersCommand = DescribeClustersCommand;\n//# sourceMappingURL=DescribeClustersCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeContainerInstancesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes one or more container instances. Returns metadata about each container\n * \t\t\tinstance requested.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeContainerInstancesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeContainerInstancesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeContainerInstancesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeContainerInstancesCommandInput} for command's `input` shape.\n * @see {@link DescribeContainerInstancesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeContainerInstancesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeContainerInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeContainerInstancesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeContainerInstancesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeContainerInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeContainerInstancesCommand(output, context);\n    }\n}\nexports.DescribeContainerInstancesCommand = DescribeContainerInstancesCommand;\n//# sourceMappingURL=DescribeContainerInstancesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeServicesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes the specified services running in your cluster.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeServicesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeServicesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeServicesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeServicesCommandInput} for command's `input` shape.\n * @see {@link DescribeServicesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeServicesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeServicesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeServicesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeServicesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeServicesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeServicesCommand(output, context);\n    }\n}\nexports.DescribeServicesCommand = DescribeServicesCommand;\n//# sourceMappingURL=DescribeServicesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeTaskDefinitionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes a task definition. You can specify a <code>family</code> and\n * \t\t\t\t<code>revision</code> to find information about a specific task definition, or you\n * \t\t\tcan simply specify the family to find the latest <code>ACTIVE</code> revision in that\n * \t\t\tfamily.</p>\n * \t\t       <note>\n * \t\t\t         <p>You can only describe <code>INACTIVE</code> task definitions while an active task\n * \t\t\t\tor service references them.</p>\n * \t\t       </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeTaskDefinitionCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeTaskDefinitionCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeTaskDefinitionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeTaskDefinitionCommandInput} for command's `input` shape.\n * @see {@link DescribeTaskDefinitionCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeTaskDefinitionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeTaskDefinitionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeTaskDefinitionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeTaskDefinitionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeTaskDefinitionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeTaskDefinitionCommand(output, context);\n    }\n}\nexports.DescribeTaskDefinitionCommand = DescribeTaskDefinitionCommand;\n//# sourceMappingURL=DescribeTaskDefinitionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeTaskSetsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes the task sets in the specified cluster and service. This is used when a\n * \t\t\tservice uses the <code>EXTERNAL</code> deployment controller type. For more information,\n * \t\t\tsee <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment\n * \t\t\t\tTypes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeTaskSetsCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeTaskSetsCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeTaskSetsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeTaskSetsCommandInput} for command's `input` shape.\n * @see {@link DescribeTaskSetsCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeTaskSetsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeTaskSetsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeTaskSetsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeTaskSetsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeTaskSetsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeTaskSetsCommand(output, context);\n    }\n}\nexports.DescribeTaskSetsCommand = DescribeTaskSetsCommand;\n//# sourceMappingURL=DescribeTaskSetsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeTasksCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Describes a specified task or tasks.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DescribeTasksCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DescribeTasksCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DescribeTasksCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DescribeTasksCommandInput} for command's `input` shape.\n * @see {@link DescribeTasksCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DescribeTasksCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DescribeTasksCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeTasksRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeTasksResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DescribeTasksCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DescribeTasksCommand(output, context);\n    }\n}\nexports.DescribeTasksCommand = DescribeTasksCommand;\n//# sourceMappingURL=DescribeTasksCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscoverPollEndpointCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <note>\n *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>\n *          </note>\n *          <p>Returns an endpoint for\n * \t\t\tthe Amazon ECS agent to poll for updates.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, DiscoverPollEndpointCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, DiscoverPollEndpointCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new DiscoverPollEndpointCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DiscoverPollEndpointCommandInput} for command's `input` shape.\n * @see {@link DiscoverPollEndpointCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DiscoverPollEndpointCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"DiscoverPollEndpointCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DiscoverPollEndpointRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DiscoverPollEndpointResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1DiscoverPollEndpointCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1DiscoverPollEndpointCommand(output, context);\n    }\n}\nexports.DiscoverPollEndpointCommand = DiscoverPollEndpointCommand;\n//# sourceMappingURL=DiscoverPollEndpointCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExecuteCommandCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Runs a command remotely on a container within a task.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ExecuteCommandCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ExecuteCommandCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ExecuteCommandCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ExecuteCommandCommandInput} for command's `input` shape.\n * @see {@link ExecuteCommandCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ExecuteCommandCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ExecuteCommandCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ExecuteCommandRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ExecuteCommandResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ExecuteCommandCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ExecuteCommandCommand(output, context);\n    }\n}\nexports.ExecuteCommandCommand = ExecuteCommandCommand;\n//# sourceMappingURL=ExecuteCommandCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountSettingsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists the account settings for a specified principal.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListAccountSettingsCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListAccountSettingsCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListAccountSettingsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAccountSettingsCommandInput} for command's `input` shape.\n * @see {@link ListAccountSettingsCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAccountSettingsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListAccountSettingsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountSettingsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountSettingsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListAccountSettingsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListAccountSettingsCommand(output, context);\n    }\n}\nexports.ListAccountSettingsCommand = ListAccountSettingsCommand;\n//# sourceMappingURL=ListAccountSettingsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAttributesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists the attributes for Amazon ECS resources within a specified target type and cluster.\n * \t\t\tWhen you specify a target type and cluster, <code>ListAttributes</code> returns a list\n * \t\t\tof attribute objects, one for each attribute on each resource. You can filter the list\n * \t\t\tof results to a single attribute name to only return results that have that name. You\n * \t\t\tcan also filter the results by attribute name and value, for example, to see which\n * \t\t\tcontainer instances in a cluster are running a Linux AMI\n * \t\t\t(<code>ecs.os-type=linux</code>). </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListAttributesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListAttributesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListAttributesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAttributesCommandInput} for command's `input` shape.\n * @see {@link ListAttributesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAttributesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAttributesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListAttributesCommand(output, context);\n    }\n}\nexports.ListAttributesCommand = ListAttributesCommand;\n//# sourceMappingURL=ListAttributesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListClustersCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of existing clusters.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListClustersCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListClustersCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListClustersCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListClustersCommandInput} for command's `input` shape.\n * @see {@link ListClustersCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListClustersCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListClustersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListClustersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListClustersResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListClustersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListClustersCommand(output, context);\n    }\n}\nexports.ListClustersCommand = ListClustersCommand;\n//# sourceMappingURL=ListClustersCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListContainerInstancesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of container instances in a specified cluster. You can filter the\n * \t\t\tresults of a <code>ListContainerInstances</code> operation with cluster query language\n * \t\t\tstatements inside the <code>filter</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\">Cluster Query Language</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListContainerInstancesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListContainerInstancesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListContainerInstancesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListContainerInstancesCommandInput} for command's `input` shape.\n * @see {@link ListContainerInstancesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListContainerInstancesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListContainerInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListContainerInstancesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListContainerInstancesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListContainerInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListContainerInstancesCommand(output, context);\n    }\n}\nexports.ListContainerInstancesCommand = ListContainerInstancesCommand;\n//# sourceMappingURL=ListContainerInstancesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListServicesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of services. You can filter the results by cluster, launch type, and\n * \t\t\tscheduling strategy.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListServicesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListServicesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListServicesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListServicesCommandInput} for command's `input` shape.\n * @see {@link ListServicesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListServicesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListServicesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListServicesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListServicesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListServicesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListServicesCommand(output, context);\n    }\n}\nexports.ListServicesCommand = ListServicesCommand;\n//# sourceMappingURL=ListServicesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTagsForResourceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>List the tags for an Amazon ECS resource.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListTagsForResourceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListTagsForResourceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListTagsForResourceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListTagsForResourceCommandInput} for command's `input` shape.\n * @see {@link ListTagsForResourceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListTagsForResourceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListTagsForResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTagsForResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTagsForResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListTagsForResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListTagsForResourceCommand(output, context);\n    }\n}\nexports.ListTagsForResourceCommand = ListTagsForResourceCommand;\n//# sourceMappingURL=ListTagsForResourceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTaskDefinitionFamiliesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of task definition families that are registered to your account (which\n * \t\t\tmay include task definition families that no longer have any <code>ACTIVE</code> task\n * \t\t\tdefinition revisions).</p>\n * \t\t       <p>You can filter out task definition families that do not contain any\n * \t\t\t\t<code>ACTIVE</code> task definition revisions by setting the <code>status</code>\n * \t\t\tparameter to <code>ACTIVE</code>. You can also filter the results with the\n * \t\t\t\t<code>familyPrefix</code> parameter.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListTaskDefinitionFamiliesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListTaskDefinitionFamiliesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListTaskDefinitionFamiliesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListTaskDefinitionFamiliesCommandInput} for command's `input` shape.\n * @see {@link ListTaskDefinitionFamiliesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListTaskDefinitionFamiliesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListTaskDefinitionFamiliesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTaskDefinitionFamiliesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTaskDefinitionFamiliesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListTaskDefinitionFamiliesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListTaskDefinitionFamiliesCommand(output, context);\n    }\n}\nexports.ListTaskDefinitionFamiliesCommand = ListTaskDefinitionFamiliesCommand;\n//# sourceMappingURL=ListTaskDefinitionFamiliesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTaskDefinitionsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of task definitions that are registered to your account. You can filter\n * \t\t\tthe results by family name with the <code>familyPrefix</code> parameter or by status\n * \t\t\twith the <code>status</code> parameter.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListTaskDefinitionsCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListTaskDefinitionsCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListTaskDefinitionsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListTaskDefinitionsCommandInput} for command's `input` shape.\n * @see {@link ListTaskDefinitionsCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListTaskDefinitionsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListTaskDefinitionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTaskDefinitionsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTaskDefinitionsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListTaskDefinitionsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListTaskDefinitionsCommand(output, context);\n    }\n}\nexports.ListTaskDefinitionsCommand = ListTaskDefinitionsCommand;\n//# sourceMappingURL=ListTaskDefinitionsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTasksCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of tasks. You can filter the results by cluster, task definition\n * \t\t\tfamily, container instance, launch type, what IAM principal started the task, or by the\n * \t\t\tdesired status of the task.</p>\n * \t\t       <p>Recently stopped tasks might appear in the returned results. Currently, stopped tasks\n * \t\t\tappear in the returned results for at least one hour.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, ListTasksCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, ListTasksCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new ListTasksCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListTasksCommandInput} for command's `input` shape.\n * @see {@link ListTasksCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListTasksCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"ListTasksCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTasksRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTasksResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1ListTasksCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1ListTasksCommand(output, context);\n    }\n}\nexports.ListTasksCommand = ListTasksCommand;\n//# sourceMappingURL=ListTasksCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutAccountSettingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies an account setting. Account settings are set on a per-Region basis.</p>\n * \t\t       <p>If you change the account setting for the root user, the default settings for all of\n * \t\t\tthe IAM users and roles for which no individual account setting has been specified are\n * \t\t\treset. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html\">Account\n * \t\t\t\tSettings</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>When <code>serviceLongArnFormat</code>, <code>taskLongArnFormat</code>, or\n * \t\t\t\t<code>containerInstanceLongArnFormat</code> are specified, the Amazon Resource Name\n * \t\t\t(ARN) and resource ID format of the resource type for a specified IAM user, IAM role, or\n * \t\t\tthe root user for an account is affected. The opt-in and opt-out account setting must be\n * \t\t\tset for each Amazon ECS resource separately. The ARN and resource ID format of a resource\n * \t\t\twill be defined by the opt-in status of the IAM user or role that created the resource.\n * \t\t\tYou must enable this setting to use Amazon ECS features such as resource tagging.</p>\n * \t\t       <p>When <code>awsvpcTrunking</code> is specified, the elastic network interface (ENI)\n * \t\t\tlimit for any new container instances that support the feature is changed. If\n * \t\t\t\t<code>awsvpcTrunking</code> is enabled, any new container instances that support the\n * \t\t\tfeature are launched have the increased ENI limits available to them. For more\n * \t\t\tinformation, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html\">Elastic Network\n * \t\t\t\tInterface Trunking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>When <code>containerInsights</code> is specified, the default setting indicating\n * \t\t\twhether CloudWatch Container Insights is enabled for your clusters is changed. If\n * \t\t\t\t<code>containerInsights</code> is enabled, any new clusters that are created will\n * \t\t\thave Container Insights enabled unless you disable it during cluster creation. For more\n * \t\t\tinformation, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html\">CloudWatch\n * \t\t\t\tContainer Insights</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, PutAccountSettingCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, PutAccountSettingCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new PutAccountSettingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutAccountSettingCommandInput} for command's `input` shape.\n * @see {@link PutAccountSettingCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutAccountSettingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"PutAccountSettingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutAccountSettingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutAccountSettingResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1PutAccountSettingCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1PutAccountSettingCommand(output, context);\n    }\n}\nexports.PutAccountSettingCommand = PutAccountSettingCommand;\n//# sourceMappingURL=PutAccountSettingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutAccountSettingDefaultCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies an account setting for all IAM users on an account for whom no individual\n * \t\t\taccount setting has been specified. Account settings are set on a per-Region\n * \t\t\tbasis.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, PutAccountSettingDefaultCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, PutAccountSettingDefaultCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new PutAccountSettingDefaultCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutAccountSettingDefaultCommandInput} for command's `input` shape.\n * @see {@link PutAccountSettingDefaultCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutAccountSettingDefaultCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"PutAccountSettingDefaultCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutAccountSettingDefaultRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutAccountSettingDefaultResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1PutAccountSettingDefaultCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1PutAccountSettingDefaultCommand(output, context);\n    }\n}\nexports.PutAccountSettingDefaultCommand = PutAccountSettingDefaultCommand;\n//# sourceMappingURL=PutAccountSettingDefaultCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutAttributesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Create or update an attribute on an Amazon ECS resource. If the attribute does not exist,\n * \t\t\tit is created. If the attribute exists, its value is replaced with the specified value.\n * \t\t\tTo delete an attribute, use <a>DeleteAttributes</a>. For more information,\n * \t\t\tsee <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes\">Attributes</a> in the\n * \t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, PutAttributesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, PutAttributesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new PutAttributesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutAttributesCommandInput} for command's `input` shape.\n * @see {@link PutAttributesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutAttributesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"PutAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutAttributesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1PutAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1PutAttributesCommand(output, context);\n    }\n}\nexports.PutAttributesCommand = PutAttributesCommand;\n//# sourceMappingURL=PutAttributesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutClusterCapacityProvidersCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies the available capacity providers and the default capacity provider strategy\n * \t\t\tfor a cluster.</p>\n * \t\t       <p>You must specify both the available capacity providers and a default capacity provider\n * \t\t\tstrategy for the cluster. If the specified cluster has existing capacity providers\n * \t\t\tassociated with it, you must specify all existing capacity providers in addition to any\n * \t\t\tnew ones you want to add. Any existing capacity providers associated with a cluster that\n * \t\t\tare omitted from a <a>PutClusterCapacityProviders</a> API call will be\n * \t\t\tdisassociated with the cluster. You can only disassociate an existing capacity provider\n * \t\t\tfrom a cluster if it's not being used by any existing tasks.</p>\n * \t\t       <p>When creating a service or running a task on a cluster, if no capacity provider or\n * \t\t\tlaunch type is specified, then the cluster's default capacity provider strategy is used.\n * \t\t\tIt is recommended to define a default capacity provider strategy for your cluster,\n * \t\t\thowever you may specify an empty array (<code>[]</code>) to bypass defining a default\n * \t\t\tstrategy.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, PutClusterCapacityProvidersCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, PutClusterCapacityProvidersCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new PutClusterCapacityProvidersCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutClusterCapacityProvidersCommandInput} for command's `input` shape.\n * @see {@link PutClusterCapacityProvidersCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutClusterCapacityProvidersCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"PutClusterCapacityProvidersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutClusterCapacityProvidersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutClusterCapacityProvidersResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1PutClusterCapacityProvidersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1PutClusterCapacityProvidersCommand(output, context);\n    }\n}\nexports.PutClusterCapacityProvidersCommand = PutClusterCapacityProvidersCommand;\n//# sourceMappingURL=PutClusterCapacityProvidersCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterContainerInstanceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <note>\n *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>\n *          </note>\n *          <p>Registers an EC2\n * \t\t\tinstance into the specified cluster. This instance becomes available to place containers\n * \t\t\ton.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, RegisterContainerInstanceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, RegisterContainerInstanceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new RegisterContainerInstanceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link RegisterContainerInstanceCommandInput} for command's `input` shape.\n * @see {@link RegisterContainerInstanceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass RegisterContainerInstanceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"RegisterContainerInstanceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RegisterContainerInstanceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RegisterContainerInstanceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1RegisterContainerInstanceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1RegisterContainerInstanceCommand(output, context);\n    }\n}\nexports.RegisterContainerInstanceCommand = RegisterContainerInstanceCommand;\n//# sourceMappingURL=RegisterContainerInstanceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterTaskDefinitionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Registers a new task definition from the supplied <code>family</code> and\n * \t\t\t\t<code>containerDefinitions</code>. Optionally, you can add data volumes to your\n * \t\t\tcontainers with the <code>volumes</code> parameter. For more information about task\n * \t\t\tdefinition parameters and defaults, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task\n * \t\t\t\tDefinitions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.\n * \t\t\tWhen you specify an IAM role for a task, its containers can then use the latest versions\n * \t\t\tof the AWS CLI or SDKs to make API requests to the AWS services that are specified in\n * \t\t\tthe IAM policy associated with the role. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\">IAM\n * \t\t\t\tRoles for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>You can specify a Docker networking mode for the containers in your task definition\n * \t\t\twith the <code>networkMode</code> parameter. The available network modes correspond to\n * \t\t\tthose described in <a href=\"https://docs.docker.com/engine/reference/run/#/network-settings\">Network\n * \t\t\t\tsettings</a> in the Docker run reference. If you specify the <code>awsvpc</code>\n * \t\t\tnetwork mode, the task is allocated an elastic network interface, and you must specify a\n * \t\t\t\t<a>NetworkConfiguration</a> when you create a service or run a task with\n * \t\t\tthe task definition. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\">Task Networking</a>\n * \t\t\tin the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, RegisterTaskDefinitionCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, RegisterTaskDefinitionCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new RegisterTaskDefinitionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link RegisterTaskDefinitionCommandInput} for command's `input` shape.\n * @see {@link RegisterTaskDefinitionCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass RegisterTaskDefinitionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"RegisterTaskDefinitionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RegisterTaskDefinitionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RegisterTaskDefinitionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1RegisterTaskDefinitionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1RegisterTaskDefinitionCommand(output, context);\n    }\n}\nexports.RegisterTaskDefinitionCommand = RegisterTaskDefinitionCommand;\n//# sourceMappingURL=RegisterTaskDefinitionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunTaskCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Starts a new task using the specified task definition.</p>\n * \t\t       <p>You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS places\n * \t\t\ttasks using placement constraints and placement strategies. For more information, see\n * \t\t\t\t<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\">Scheduling Tasks</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       <p>Alternatively, you can use <a>StartTask</a> to use your own scheduler or\n * \t\t\tplace tasks manually on specific container instances.</p>\n * \t\t       <p>The Amazon ECS API follows an eventual consistency model, due to the distributed nature of\n * \t\t\tthe system supporting the API. This means that the result of an API command you run that\n * \t\t\taffects your Amazon ECS resources might not be immediately visible to all subsequent commands\n * \t\t\tyou run. Keep this in mind when you carry out an API command that immediately follows a\n * \t\t\tprevious API command.</p>\n * \t\t       <p>To manage eventual consistency, you can do the following:</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>Confirm the state of the resource before you run a command to modify it. Run\n * \t\t\t\t\tthe DescribeTasks command using an exponential backoff algorithm to ensure that\n * \t\t\t\t\tyou allow enough time for the previous command to propagate through the system.\n * \t\t\t\t\tTo do this, run the DescribeTasks command repeatedly, starting with a couple of\n * \t\t\t\t\tseconds of wait time and increasing gradually up to five minutes of wait\n * \t\t\t\t\ttime.</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>Add wait time between subsequent commands, even if the DescribeTasks command\n * \t\t\t\t\treturns an accurate response. Apply an exponential backoff algorithm starting\n * \t\t\t\t\twith a couple of seconds of wait time, and increase gradually up to about five\n * \t\t\t\t\tminutes of wait time.</p>\n * \t\t\t         </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, RunTaskCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, RunTaskCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new RunTaskCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link RunTaskCommandInput} for command's `input` shape.\n * @see {@link RunTaskCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass RunTaskCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"RunTaskCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RunTaskRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RunTaskResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1RunTaskCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1RunTaskCommand(output, context);\n    }\n}\nexports.RunTaskCommand = RunTaskCommand;\n//# sourceMappingURL=RunTaskCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StartTaskCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Starts a new task from the specified task definition on the specified container\n * \t\t\tinstance or instances.</p>\n * \t\t       <p>Alternatively, you can use <a>RunTask</a> to place tasks for you. For more\n * \t\t\tinformation, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\">Scheduling Tasks</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, StartTaskCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, StartTaskCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new StartTaskCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link StartTaskCommandInput} for command's `input` shape.\n * @see {@link StartTaskCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass StartTaskCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"StartTaskCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.StartTaskRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.StartTaskResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1StartTaskCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1StartTaskCommand(output, context);\n    }\n}\nexports.StartTaskCommand = StartTaskCommand;\n//# sourceMappingURL=StartTaskCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StopTaskCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Stops a running task. Any tags associated with the task will be deleted.</p>\n * \t\t       <p>When <a>StopTask</a> is called on a task, the equivalent of <code>docker\n * \t\t\t\tstop</code> is issued to the containers running in the task. This results in a\n * \t\t\t\t<code>SIGTERM</code> value and a default 30-second timeout, after which the\n * \t\t\t\t<code>SIGKILL</code> value is sent and the containers are forcibly stopped. If the\n * \t\t\tcontainer handles the <code>SIGTERM</code> value gracefully and exits within 30 seconds\n * \t\t\tfrom receiving it, no <code>SIGKILL</code> value is sent.</p>\n * \t\t       <note>\n * \t\t\t         <p>The default 30-second timeout can be configured on the Amazon ECS container agent with\n * \t\t\t\tthe <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see\n * \t\t\t\t\t<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\">Amazon ECS Container Agent Configuration</a> in the\n * \t\t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, StopTaskCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, StopTaskCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new StopTaskCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link StopTaskCommandInput} for command's `input` shape.\n * @see {@link StopTaskCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass StopTaskCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"StopTaskCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.StopTaskRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.StopTaskResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1StopTaskCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1StopTaskCommand(output, context);\n    }\n}\nexports.StopTaskCommand = StopTaskCommand;\n//# sourceMappingURL=StopTaskCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubmitAttachmentStateChangesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <note>\n *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>\n *          </note>\n *          <p>Sent to\n * \t\t\tacknowledge that an attachment changed states.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, SubmitAttachmentStateChangesCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, SubmitAttachmentStateChangesCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new SubmitAttachmentStateChangesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link SubmitAttachmentStateChangesCommandInput} for command's `input` shape.\n * @see {@link SubmitAttachmentStateChangesCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass SubmitAttachmentStateChangesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"SubmitAttachmentStateChangesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SubmitAttachmentStateChangesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SubmitAttachmentStateChangesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1SubmitAttachmentStateChangesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1SubmitAttachmentStateChangesCommand(output, context);\n    }\n}\nexports.SubmitAttachmentStateChangesCommand = SubmitAttachmentStateChangesCommand;\n//# sourceMappingURL=SubmitAttachmentStateChangesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubmitContainerStateChangeCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <note>\n *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>\n *          </note>\n *          <p>Sent to\n * \t\t\tacknowledge that a container changed states.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, SubmitContainerStateChangeCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, SubmitContainerStateChangeCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new SubmitContainerStateChangeCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link SubmitContainerStateChangeCommandInput} for command's `input` shape.\n * @see {@link SubmitContainerStateChangeCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass SubmitContainerStateChangeCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"SubmitContainerStateChangeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SubmitContainerStateChangeRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SubmitContainerStateChangeResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1SubmitContainerStateChangeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1SubmitContainerStateChangeCommand(output, context);\n    }\n}\nexports.SubmitContainerStateChangeCommand = SubmitContainerStateChangeCommand;\n//# sourceMappingURL=SubmitContainerStateChangeCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubmitTaskStateChangeCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <note>\n *             <p>This action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.</p>\n *          </note>\n *          <p>Sent to acknowledge\n * \t\t\tthat a task changed states.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, SubmitTaskStateChangeCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, SubmitTaskStateChangeCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new SubmitTaskStateChangeCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link SubmitTaskStateChangeCommandInput} for command's `input` shape.\n * @see {@link SubmitTaskStateChangeCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass SubmitTaskStateChangeCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"SubmitTaskStateChangeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SubmitTaskStateChangeRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SubmitTaskStateChangeResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1SubmitTaskStateChangeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1SubmitTaskStateChangeCommand(output, context);\n    }\n}\nexports.SubmitTaskStateChangeCommand = SubmitTaskStateChangeCommand;\n//# sourceMappingURL=SubmitTaskStateChangeCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagResourceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Associates the specified tags to a resource with the specified\n * \t\t\t\t<code>resourceArn</code>. If existing tags on a resource are not specified in the\n * \t\t\trequest parameters, they are not changed. When a resource is deleted, the tags\n * \t\t\tassociated with that resource are deleted as well.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, TagResourceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, TagResourceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new TagResourceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link TagResourceCommandInput} for command's `input` shape.\n * @see {@link TagResourceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass TagResourceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.TagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.TagResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1TagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1TagResourceCommand(output, context);\n    }\n}\nexports.TagResourceCommand = TagResourceCommand;\n//# sourceMappingURL=TagResourceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UntagResourceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes specified tags from a resource.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UntagResourceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UntagResourceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UntagResourceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UntagResourceCommandInput} for command's `input` shape.\n * @see {@link UntagResourceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UntagResourceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UntagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UntagResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UntagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UntagResourceCommand(output, context);\n    }\n}\nexports.UntagResourceCommand = UntagResourceCommand;\n//# sourceMappingURL=UntagResourceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCapacityProviderCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies the parameters for a capacity provider.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateCapacityProviderCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateCapacityProviderCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateCapacityProviderCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateCapacityProviderCommandInput} for command's `input` shape.\n * @see {@link UpdateCapacityProviderCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateCapacityProviderCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateCapacityProviderCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateCapacityProviderRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateCapacityProviderResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateCapacityProviderCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateCapacityProviderCommand(output, context);\n    }\n}\nexports.UpdateCapacityProviderCommand = UpdateCapacityProviderCommand;\n//# sourceMappingURL=UpdateCapacityProviderCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateClusterCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates the cluster.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateClusterCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateClusterCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateClusterCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateClusterCommandInput} for command's `input` shape.\n * @see {@link UpdateClusterCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateClusterCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateClusterCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateClusterRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateClusterResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateClusterCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateClusterCommand(output, context);\n    }\n}\nexports.UpdateClusterCommand = UpdateClusterCommand;\n//# sourceMappingURL=UpdateClusterCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateClusterSettingsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies the settings to use for a cluster.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateClusterSettingsCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateClusterSettingsCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateClusterSettingsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateClusterSettingsCommandInput} for command's `input` shape.\n * @see {@link UpdateClusterSettingsCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateClusterSettingsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateClusterSettingsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateClusterSettingsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateClusterSettingsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateClusterSettingsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateClusterSettingsCommand(output, context);\n    }\n}\nexports.UpdateClusterSettingsCommand = UpdateClusterSettingsCommand;\n//# sourceMappingURL=UpdateClusterSettingsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateContainerAgentCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates the Amazon ECS container agent on a specified container instance. Updating the\n * \t\t\tAmazon ECS container agent does not interrupt running tasks or services on the container\n * \t\t\tinstance. The process for updating the agent differs depending on whether your container\n * \t\t\tinstance was launched with the Amazon ECS-optimized AMI or another operating system.</p>\n * \t\t       <note>\n * \t\t\t         <p>The <code>UpdateContainerAgent</code> API isn't supported for container instances\n * \t\t\t\tusing the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container agent,\n * \t\t\t\tyou can update the <code>ecs-init</code> package which will update the agent. For\n * \t\t\t\tmore information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html\">Updating the\n * \t\t\t\t\tAmazon ECS container agent</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * \t\t       </note>\n * \t\t       <p>The <code>UpdateContainerAgent</code> API requires an Amazon ECS-optimized AMI or Amazon\n * \t\t\tLinux AMI with the <code>ecs-init</code> service installed and running. For help\n * \t\t\tupdating the Amazon ECS container agent on other operating systems, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent\">Manually updating the Amazon ECS container agent</a> in the\n * \t\t\t\t<i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateContainerAgentCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateContainerAgentCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateContainerAgentCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateContainerAgentCommandInput} for command's `input` shape.\n * @see {@link UpdateContainerAgentCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateContainerAgentCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateContainerAgentCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateContainerAgentRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateContainerAgentResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateContainerAgentCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateContainerAgentCommand(output, context);\n    }\n}\nexports.UpdateContainerAgentCommand = UpdateContainerAgentCommand;\n//# sourceMappingURL=UpdateContainerAgentCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateContainerInstancesStateCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies the status of an Amazon ECS container instance.</p>\n * \t\t       <p>Once a container instance has reached an <code>ACTIVE</code> state, you can change the\n * \t\t\tstatus of a container instance to <code>DRAINING</code> to manually remove an instance\n * \t\t\tfrom a cluster, for example to perform system updates, update the Docker daemon, or\n * \t\t\tscale down the cluster size.</p>\n * \t\t       <important>\n * \t\t\t         <p>A container instance cannot be changed to <code>DRAINING</code> until it has\n * \t\t\t\treached an <code>ACTIVE</code> status. If the instance is in any other status, an\n * \t\t\t\terror will be received.</p>\n * \t\t       </important>\n * \t\t       <p>When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new tasks\n * \t\t\tfrom being scheduled for placement on the container instance and replacement service\n * \t\t\ttasks are started on other container instances in the cluster if the resources are\n * \t\t\tavailable. Service tasks on the container instance that are in the <code>PENDING</code>\n * \t\t\tstate are stopped immediately.</p>\n * \t\t       <p>Service tasks on the container instance that are in the <code>RUNNING</code> state are\n * \t\t\tstopped and replaced according to the service's deployment configuration parameters,\n * \t\t\t\t<code>minimumHealthyPercent</code> and <code>maximumPercent</code>. You can change\n * \t\t\tthe deployment configuration of your service using <a>UpdateService</a>.</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore\n * \t\t\t\t\t\t<code>desiredCount</code> temporarily during task replacement. For example,\n * \t\t\t\t\t\t<code>desiredCount</code> is four tasks, a minimum of 50% allows the\n * \t\t\t\t\tscheduler to stop two existing tasks before starting two new tasks. If the\n * \t\t\t\t\tminimum is 100%, the service scheduler can't remove existing tasks until the\n * \t\t\t\t\treplacement tasks are considered healthy. Tasks for services that do not use a\n * \t\t\t\t\tload balancer are considered healthy if they are in the <code>RUNNING</code>\n * \t\t\t\t\tstate. Tasks for services that use a load balancer are considered healthy if\n * \t\t\t\t\tthey are in the <code>RUNNING</code> state and the container instance they are\n * \t\t\t\t\thosted on is reported as healthy by the load balancer.</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>The <code>maximumPercent</code> parameter represents an upper limit on the\n * \t\t\t\t\tnumber of running tasks during task replacement, which enables you to define the\n * \t\t\t\t\treplacement batch size. For example, if <code>desiredCount</code> is four tasks,\n * \t\t\t\t\ta maximum of 200% starts four new tasks before stopping the four tasks to be\n * \t\t\t\t\tdrained, provided that the cluster resources required to do this are available.\n * \t\t\t\t\tIf the maximum is 100%, then replacement tasks can't start until the draining\n * \t\t\t\t\ttasks have stopped.</p>\n * \t\t\t         </li>\n *          </ul>\n * \t\t       <p>Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service\n * \t\t\tare not affected. You must wait for them to finish or stop them manually.</p>\n * \t\t       <p>A container instance has completed draining when it has no more <code>RUNNING</code>\n * \t\t\ttasks. You can verify this using <a>ListTasks</a>.</p>\n * \t\t       <p>When a container instance has been drained, you can set a container instance to\n * \t\t\t\t<code>ACTIVE</code> status and once it has reached that status the Amazon ECS scheduler\n * \t\t\tcan begin scheduling tasks on the instance again.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateContainerInstancesStateCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateContainerInstancesStateCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateContainerInstancesStateCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateContainerInstancesStateCommandInput} for command's `input` shape.\n * @see {@link UpdateContainerInstancesStateCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateContainerInstancesStateCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateContainerInstancesStateCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateContainerInstancesStateRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateContainerInstancesStateResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateContainerInstancesStateCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateContainerInstancesStateCommand(output, context);\n    }\n}\nexports.UpdateContainerInstancesStateCommand = UpdateContainerInstancesStateCommand;\n//# sourceMappingURL=UpdateContainerInstancesStateCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateServiceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <important>\n * \t\t\t         <p>Updating the task placement strategies and constraints on an Amazon ECS service remains\n * \t\t\t\tin preview and is a Beta Service as defined by and subject to the Beta Service\n * \t\t\t\tParticipation Service Terms located at <a href=\"https://aws.amazon.com/service-terms\">https://aws.amazon.com/service-terms</a> (\"Beta Terms\"). These Beta Terms\n * \t\t\t\tapply to your participation in this preview.</p>\n * \t\t       </important>\n * \t\t       <p>Modifies the parameters of a service.</p>\n * \t\t       <p>For services using the rolling update (<code>ECS</code>) deployment controller, the\n * \t\t\tdesired count, deployment configuration, network configuration, task placement\n * \t\t\tconstraints and strategies, or task definition used can be updated.</p>\n * \t\t       <p>For services using the blue/green (<code>CODE_DEPLOY</code>) deployment controller,\n * \t\t\tonly the desired count, deployment configuration, task placement constraints and\n * \t\t\tstrategies, and health check grace period can be updated using this API. If the network\n * \t\t\tconfiguration, platform version, or task definition need to be updated, a new AWS CodeDeploy\n * \t\t\tdeployment should be created. For more information, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html\">CreateDeployment</a> in the <i>AWS CodeDeploy API Reference</i>.</p>\n * \t\t       <p>For services using an external deployment controller, you can update only the desired\n * \t\t\tcount, task placement constraints and strategies, and health check grace period using\n * \t\t\tthis API. If the launch type, load balancer, network configuration, platform version, or\n * \t\t\ttask definition need to be updated, you should create a new task set. For more\n * \t\t\tinformation, see <a>CreateTaskSet</a>.</p>\n * \t\t       <p>You can add to or subtract from the number of instantiations of a task definition in a\n * \t\t\tservice by specifying the cluster that the service is running in and a new\n * \t\t\t\t<code>desiredCount</code> parameter.</p>\n * \t\t       <p>If you have updated the Docker image of your application, you can create a new task\n * \t\t\tdefinition with that image and deploy it to your service. The service scheduler uses the\n * \t\t\tminimum healthy percent and maximum percent parameters (in the service's deployment\n * \t\t\tconfiguration) to determine the deployment strategy.</p>\n * \t\t       <note>\n * \t\t\t         <p>If your updated Docker image uses the same tag as what is in the existing task\n * \t\t\t\tdefinition for your service (for example, <code>my_image:latest</code>), you do not\n * \t\t\t\tneed to create a new revision of your task definition. You can update the service\n * \t\t\t\tusing the <code>forceNewDeployment</code> option. The new tasks launched by the\n * \t\t\t\tdeployment pull the current image/tag combination from your repository when they\n * \t\t\t\tstart.</p>\n * \t\t       </note>\n * \t\t       <p>You can also update the deployment configuration of a service. When a deployment is\n * \t\t\ttriggered by updating the task definition of a service, the service scheduler uses the\n * \t\t\tdeployment configuration parameters, <code>minimumHealthyPercent</code> and\n * \t\t\t\t<code>maximumPercent</code>, to determine the deployment strategy.</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore\n * \t\t\t\t\t\t<code>desiredCount</code> temporarily during a deployment. For example, if\n * \t\t\t\t\t\t<code>desiredCount</code> is four tasks, a minimum of 50% allows the\n * \t\t\t\t\tscheduler to stop two existing tasks before starting two new tasks. Tasks for\n * \t\t\t\t\tservices that do not use a load balancer are considered healthy if they are in\n * \t\t\t\t\tthe <code>RUNNING</code> state. Tasks for services that use a load balancer are\n * \t\t\t\t\tconsidered healthy if they are in the <code>RUNNING</code> state and the\n * \t\t\t\t\tcontainer instance they are hosted on is reported as healthy by the load\n * \t\t\t\t\tbalancer.</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>The <code>maximumPercent</code> parameter represents an upper limit on the\n * \t\t\t\t\tnumber of running tasks during a deployment, which enables you to define the\n * \t\t\t\t\tdeployment batch size. For example, if <code>desiredCount</code> is four tasks,\n * \t\t\t\t\ta maximum of 200% starts four new tasks before stopping the four older tasks\n * \t\t\t\t\t(provided that the cluster resources required to do this are available).</p>\n * \t\t\t         </li>\n *          </ul>\n * \t\t       <p>When <a>UpdateService</a> stops a task during a deployment, the equivalent\n * \t\t\tof <code>docker stop</code> is issued to the containers running in the task. This\n * \t\t\tresults in a <code>SIGTERM</code> and a 30-second timeout, after which\n * \t\t\t\t<code>SIGKILL</code> is sent and the containers are forcibly stopped. If the\n * \t\t\tcontainer handles the <code>SIGTERM</code> gracefully and exits within 30 seconds from\n * \t\t\treceiving it, no <code>SIGKILL</code> is sent.</p>\n * \t\t       <p>When the service scheduler launches new tasks, it determines task placement in your\n * \t\t\tcluster with the following logic:</p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>Determine which of the container instances in your cluster can support your\n * \t\t\t\t\tservice's task definition (for example, they have the required CPU, memory,\n * \t\t\t\t\tports, and container instance attributes).</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>By default, the service scheduler attempts to balance tasks across\n * \t\t\t\t\tAvailability Zones in this manner (although you can choose a different placement\n * \t\t\t\t\tstrategy):</p>\n * \t\t\t\t           <ul>\n *                   <li>\n * \t\t\t\t\t\t               <p>Sort the valid container instances by the fewest number of running\n * \t\t\t\t\t\t\ttasks for this service in the same Availability Zone as the instance.\n * \t\t\t\t\t\t\tFor example, if zone A has one running service task and zones B and C\n * \t\t\t\t\t\t\teach have zero, valid container instances in either zone B or C are\n * \t\t\t\t\t\t\tconsidered optimal for placement.</p>\n * \t\t\t\t\t             </li>\n *                   <li>\n * \t\t\t\t\t\t               <p>Place the new service task on a valid container instance in an optimal\n * \t\t\t\t\t\t\tAvailability Zone (based on the previous steps), favoring container\n * \t\t\t\t\t\t\tinstances with the fewest number of running tasks for this\n * \t\t\t\t\t\t\tservice.</p>\n * \t\t\t\t\t             </li>\n *                </ul>\n * \t\t\t         </li>\n *          </ul>\n * \t\t       <p>When the service scheduler stops running tasks, it attempts to maintain balance across\n * \t\t\tthe Availability Zones in your cluster using the following logic: </p>\n * \t\t       <ul>\n *             <li>\n * \t\t\t\t           <p>Sort the container instances by the largest number of running tasks for this\n * \t\t\t\t\tservice in the same Availability Zone as the instance. For example, if zone A\n * \t\t\t\t\thas one running service task and zones B and C each have two, container\n * \t\t\t\t\tinstances in either zone B or C are considered optimal for termination.</p>\n * \t\t\t         </li>\n *             <li>\n * \t\t\t\t           <p>Stop the task on a container instance in an optimal Availability Zone (based\n * \t\t\t\t\ton the previous steps), favoring container instances with the largest number of\n * \t\t\t\t\trunning tasks for this service.</p>\n * \t\t\t         </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateServiceCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateServiceCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateServiceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateServiceCommandInput} for command's `input` shape.\n * @see {@link UpdateServiceCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateServiceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateServiceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateServiceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateServiceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateServiceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateServiceCommand(output, context);\n    }\n}\nexports.UpdateServiceCommand = UpdateServiceCommand;\n//# sourceMappingURL=UpdateServiceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateServicePrimaryTaskSetCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies which task set in a service is the primary task set. Any parameters that are\n * \t\t\tupdated on the primary task set in a service will transition to the service. This is\n * \t\t\tused when a service uses the <code>EXTERNAL</code> deployment controller type. For more\n * \t\t\tinformation, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment\n * \t\t\t\tTypes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateServicePrimaryTaskSetCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateServicePrimaryTaskSetCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateServicePrimaryTaskSetCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateServicePrimaryTaskSetCommandInput} for command's `input` shape.\n * @see {@link UpdateServicePrimaryTaskSetCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateServicePrimaryTaskSetCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateServicePrimaryTaskSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateServicePrimaryTaskSetRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateServicePrimaryTaskSetResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateServicePrimaryTaskSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateServicePrimaryTaskSetCommand(output, context);\n    }\n}\nexports.UpdateServicePrimaryTaskSetCommand = UpdateServicePrimaryTaskSetCommand;\n//# sourceMappingURL=UpdateServicePrimaryTaskSetCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateTaskSetCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_json1_1_1 = require(\"../protocols/Aws_json1_1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modifies a task set. This is used when a service uses the <code>EXTERNAL</code>\n * \t\t\tdeployment controller type. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS Deployment\n * \t\t\t\tTypes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { ECSClient, UpdateTaskSetCommand } from \"@aws-sdk/client-ecs\"; // ES Modules import\n * // const { ECSClient, UpdateTaskSetCommand } = require(\"@aws-sdk/client-ecs\"); // CommonJS import\n * const client = new ECSClient(config);\n * const command = new UpdateTaskSetCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateTaskSetCommandInput} for command's `input` shape.\n * @see {@link UpdateTaskSetCommandOutput} for command's `response` shape.\n * @see {@link ECSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateTaskSetCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ECSClient\";\n        const commandName = \"UpdateTaskSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateTaskSetRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateTaskSetResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_json1_1_1.serializeAws_json1_1UpdateTaskSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_json1_1_1.deserializeAws_json1_1UpdateTaskSetCommand(output, context);\n    }\n}\nexports.UpdateTaskSetCommand = UpdateTaskSetCommand;\n//# sourceMappingURL=UpdateTaskSetCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\n// Partition default templates\nconst AWS_TEMPLATE = \"ecs.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"ecs.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"ecs.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"ecs.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"ecs.{region}.amazonaws.com\";\n// Partition regions\nconst AWS_REGIONS = new Set([\n    \"af-south-1\",\n    \"ap-east-1\",\n    \"ap-northeast-1\",\n    \"ap-northeast-2\",\n    \"ap-northeast-3\",\n    \"ap-south-1\",\n    \"ap-southeast-1\",\n    \"ap-southeast-2\",\n    \"ca-central-1\",\n    \"eu-central-1\",\n    \"eu-north-1\",\n    \"eu-south-1\",\n    \"eu-west-1\",\n    \"eu-west-2\",\n    \"eu-west-3\",\n    \"me-south-1\",\n    \"sa-east-1\",\n    \"us-east-1\",\n    \"us-east-2\",\n    \"us-west-1\",\n    \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nconst defaultRegionInfoProvider = (region, options) => {\n    let regionInfo = undefined;\n    switch (region) {\n        // First, try to match exact region names.\n        case \"af-south-1\":\n            regionInfo = {\n                hostname: \"ecs.af-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-east-1\":\n            regionInfo = {\n                hostname: \"ecs.ap-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-1\":\n            regionInfo = {\n                hostname: \"ecs.ap-northeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-2\":\n            regionInfo = {\n                hostname: \"ecs.ap-northeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-3\":\n            regionInfo = {\n                hostname: \"ecs.ap-northeast-3.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-south-1\":\n            regionInfo = {\n                hostname: \"ecs.ap-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-1\":\n            regionInfo = {\n                hostname: \"ecs.ap-southeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-2\":\n            regionInfo = {\n                hostname: \"ecs.ap-southeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ca-central-1\":\n            regionInfo = {\n                hostname: \"ecs.ca-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"cn-north-1\":\n            regionInfo = {\n                hostname: \"ecs.cn-north-1.amazonaws.com.cn\",\n                partition: \"aws-cn\",\n            };\n            break;\n        case \"cn-northwest-1\":\n            regionInfo = {\n                hostname: \"ecs.cn-northwest-1.amazonaws.com.cn\",\n                partition: \"aws-cn\",\n            };\n            break;\n        case \"eu-central-1\":\n            regionInfo = {\n                hostname: \"ecs.eu-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-north-1\":\n            regionInfo = {\n                hostname: \"ecs.eu-north-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-south-1\":\n            regionInfo = {\n                hostname: \"ecs.eu-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-1\":\n            regionInfo = {\n                hostname: \"ecs.eu-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-2\":\n            regionInfo = {\n                hostname: \"ecs.eu-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-3\":\n            regionInfo = {\n                hostname: \"ecs.eu-west-3.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"fips-us-east-1\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-1\",\n            };\n            break;\n        case \"fips-us-east-2\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-2\",\n            };\n            break;\n        case \"fips-us-gov-east-1\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-gov-east-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n                signingRegion: \"us-gov-east-1\",\n            };\n            break;\n        case \"fips-us-gov-west-1\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n                signingRegion: \"us-gov-west-1\",\n            };\n            break;\n        case \"fips-us-west-1\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-west-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-1\",\n            };\n            break;\n        case \"fips-us-west-2\":\n            regionInfo = {\n                hostname: \"ecs-fips.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-2\",\n            };\n            break;\n        case \"me-south-1\":\n            regionInfo = {\n                hostname: \"ecs.me-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"sa-east-1\":\n            regionInfo = {\n                hostname: \"ecs.sa-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-1\":\n            regionInfo = {\n                hostname: \"ecs.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-2\":\n            regionInfo = {\n                hostname: \"ecs.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-gov-east-1\":\n            regionInfo = {\n                hostname: \"ecs.us-gov-east-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n            };\n            break;\n        case \"us-gov-west-1\":\n            regionInfo = {\n                hostname: \"ecs.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n            };\n            break;\n        case \"us-iso-east-1\":\n            regionInfo = {\n                hostname: \"ecs.us-iso-east-1.c2s.ic.gov\",\n                partition: \"aws-iso\",\n            };\n            break;\n        case \"us-isob-east-1\":\n            regionInfo = {\n                hostname: \"ecs.us-isob-east-1.sc2s.sgov.gov\",\n                partition: \"aws-iso-b\",\n            };\n            break;\n        case \"us-west-1\":\n            regionInfo = {\n                hostname: \"ecs.us-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-west-2\":\n            regionInfo = {\n                hostname: \"ecs.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        // Next, try to match partition endpoints.\n        default:\n            if (AWS_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n            if (AWS_CN_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-cn\",\n                };\n            }\n            if (AWS_ISO_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso\",\n                };\n            }\n            if (AWS_ISO_B_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso-b\",\n                };\n            }\n            if (AWS_US_GOV_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-us-gov\",\n                };\n            }\n            // Finally, assume it's an AWS partition endpoint.\n            if (regionInfo === undefined) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n    }\n    return Promise.resolve({ signingService: \"ecs\", ...regionInfo });\n};\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./ECSClient\"), exports);\ntslib_1.__exportStar(require(\"./ECS\"), exports);\ntslib_1.__exportStar(require(\"./commands/CreateCapacityProviderCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/CreateClusterCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/CreateServiceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/CreateTaskSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteAccountSettingCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteCapacityProviderCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteClusterCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteServiceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeleteTaskSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeregisterContainerInstanceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DeregisterTaskDefinitionCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeCapacityProvidersCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeClustersCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeContainerInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeServicesCommand\"), exports);\ntslib_1.__exportStar(require(\"./waiters/waitForServicesInactive\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeTaskDefinitionCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeTasksCommand\"), exports);\ntslib_1.__exportStar(require(\"./waiters/waitForTasksRunning\"), exports);\ntslib_1.__exportStar(require(\"./waiters/waitForTasksStopped\"), exports);\ntslib_1.__exportStar(require(\"./commands/DescribeTaskSetsCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DiscoverPollEndpointCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/ExecuteCommandCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListAccountSettingsCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListAccountSettingsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListAttributesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListClustersCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListClustersPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListContainerInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListContainerInstancesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListServicesCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListServicesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListTagsForResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListTaskDefinitionFamiliesCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListTaskDefinitionFamiliesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListTaskDefinitionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListTaskDefinitionsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListTasksCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListTasksPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/PutAccountSettingCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/PutAccountSettingDefaultCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/PutAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/PutClusterCapacityProvidersCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/RegisterContainerInstanceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/RegisterTaskDefinitionCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/RunTaskCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/StartTaskCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/StopTaskCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/SubmitAttachmentStateChangesCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/SubmitContainerStateChangeCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/SubmitTaskStateChangeCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/TagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UntagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateCapacityProviderCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateClusterCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateClusterSettingsCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateContainerAgentCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateContainerInstancesStateCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateServiceCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateServicePrimaryTaskSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/UpdateTaskSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceEvent = exports.Deployment = exports.DeploymentRolloutState = exports.CreateServiceRequest = exports.ServiceRegistry = exports.SchedulingStrategy = exports.PropagateTags = exports.PlacementStrategy = exports.PlacementStrategyType = exports.PlacementConstraint = exports.PlacementConstraintType = exports.NetworkConfiguration = exports.AwsVpcConfiguration = exports.AssignPublicIp = exports.LoadBalancer = exports.LaunchType = exports.DeploymentController = exports.DeploymentControllerType = exports.DeploymentConfiguration = exports.DeploymentCircuitBreaker = exports.ClusterNotFoundException = exports.CreateClusterResponse = exports.Cluster = exports.Attachment = exports.KeyValuePair = exports.CreateClusterRequest = exports.ClusterSetting = exports.ClusterSettingName = exports.CapacityProviderStrategyItem = exports.ClusterConfiguration = exports.ExecuteCommandConfiguration = exports.ExecuteCommandLogging = exports.ExecuteCommandLogConfiguration = exports.UpdateInProgressException = exports.ServerException = exports.LimitExceededException = exports.InvalidParameterException = exports.CreateCapacityProviderResponse = exports.CapacityProvider = exports.CapacityProviderUpdateStatus = exports.CapacityProviderStatus = exports.CreateCapacityProviderRequest = exports.Tag = exports.AutoScalingGroupProvider = exports.ManagedTerminationProtection = exports.ManagedScaling = exports.ManagedScalingStatus = exports.ClientException = exports.AgentUpdateStatus = exports.AccessDeniedException = void 0;\nexports.KernelCapabilities = exports.HealthCheck = exports.FirelensConfiguration = exports.FirelensConfigurationType = exports.HostEntry = exports.EnvironmentFile = exports.EnvironmentFileType = exports.ContainerDependency = exports.ContainerCondition = exports.Compatibility = exports.DeregisterTaskDefinitionRequest = exports.DeregisterContainerInstanceResponse = exports.ContainerInstance = exports.VersionInfo = exports.Resource = exports.DeregisterContainerInstanceRequest = exports.TaskSetNotFoundException = exports.DeleteTaskSetResponse = exports.DeleteTaskSetRequest = exports.DeleteServiceResponse = exports.DeleteServiceRequest = exports.DeleteClusterResponse = exports.DeleteClusterRequest = exports.ClusterContainsTasksException = exports.ClusterContainsServicesException = exports.ClusterContainsContainerInstancesException = exports.DeleteCapacityProviderResponse = exports.DeleteCapacityProviderRequest = exports.TargetNotFoundException = exports.DeleteAttributesResponse = exports.DeleteAttributesRequest = exports.Attribute = exports.TargetType = exports.DeleteAccountSettingResponse = exports.Setting = exports.DeleteAccountSettingRequest = exports.SettingName = exports.ServiceNotFoundException = exports.ServiceNotActiveException = exports.CreateTaskSetResponse = exports.CreateTaskSetRequest = exports.UnsupportedFeatureException = exports.PlatformUnknownException = exports.PlatformTaskDefinitionIncompatibilityException = exports.CreateServiceResponse = exports.Service = exports.TaskSet = exports.StabilityStatus = exports.Scale = exports.ScaleUnit = void 0;\nexports.DescribeContainerInstancesResponse = exports.DescribeContainerInstancesRequest = exports.ContainerInstanceField = exports.DescribeClustersResponse = exports.DescribeClustersRequest = exports.ClusterField = exports.DescribeCapacityProvidersResponse = exports.Failure = exports.DescribeCapacityProvidersRequest = exports.CapacityProviderField = exports.DeregisterTaskDefinitionResponse = exports.TaskDefinition = exports.Volume = exports.HostVolumeProperties = exports.FSxWindowsFileServerVolumeConfiguration = exports.FSxWindowsFileServerAuthorizationConfig = exports.EFSVolumeConfiguration = exports.EFSTransitEncryption = exports.EFSAuthorizationConfig = exports.EFSAuthorizationConfigIAM = exports.DockerVolumeConfiguration = exports.Scope = exports.TaskDefinitionStatus = exports.ProxyConfiguration = exports.ProxyConfigurationType = exports.TaskDefinitionPlacementConstraint = exports.TaskDefinitionPlacementConstraintType = exports.PidMode = exports.NetworkMode = exports.IpcMode = exports.InferenceAccelerator = exports.EphemeralStorage = exports.ContainerDefinition = exports.VolumeFrom = exports.Ulimit = exports.UlimitName = exports.SystemControl = exports.ResourceRequirement = exports.ResourceType = exports.RepositoryCredentials = exports.PortMapping = exports.TransportProtocol = exports.MountPoint = exports.LogConfiguration = exports.Secret = exports.LogDriver = exports.LinuxParameters = exports.Tmpfs = exports.Device = exports.DeviceCgroupPermission = void 0;\nexports.DesiredStatus = exports.ListTaskDefinitionsResponse = exports.ListTaskDefinitionsRequest = exports.SortOrder = exports.ListTaskDefinitionFamiliesResponse = exports.ListTaskDefinitionFamiliesRequest = exports.TaskDefinitionFamilyStatus = exports.ListTagsForResourceResponse = exports.ListTagsForResourceRequest = exports.ListServicesResponse = exports.ListServicesRequest = exports.ListContainerInstancesResponse = exports.ListContainerInstancesRequest = exports.ContainerInstanceStatus = exports.ListClustersResponse = exports.ListClustersRequest = exports.ListAttributesResponse = exports.ListAttributesRequest = exports.ListAccountSettingsResponse = exports.ListAccountSettingsRequest = exports.TargetNotConnectedException = exports.ExecuteCommandResponse = exports.Session = exports.ExecuteCommandRequest = exports.DiscoverPollEndpointResponse = exports.DiscoverPollEndpointRequest = exports.DescribeTaskSetsResponse = exports.DescribeTaskSetsRequest = exports.TaskSetField = exports.DescribeTasksResponse = exports.Task = exports.TaskStopCode = exports.TaskOverride = exports.InferenceAcceleratorOverride = exports.ContainerOverride = exports.Container = exports.NetworkInterface = exports.NetworkBinding = exports.ManagedAgent = exports.ManagedAgentName = exports.HealthStatus = exports.Connectivity = exports.DescribeTasksRequest = exports.TaskField = exports.DescribeTaskDefinitionResponse = exports.DescribeTaskDefinitionRequest = exports.TaskDefinitionField = exports.DescribeServicesResponse = exports.DescribeServicesRequest = exports.ServiceField = void 0;\nexports.UpdateContainerAgentResponse = exports.UpdateContainerAgentRequest = exports.NoUpdateAvailableException = exports.MissingVersionException = exports.UpdateClusterSettingsResponse = exports.UpdateClusterSettingsRequest = exports.UpdateClusterResponse = exports.UpdateClusterRequest = exports.UpdateCapacityProviderResponse = exports.UpdateCapacityProviderRequest = exports.AutoScalingGroupProviderUpdate = exports.UntagResourceResponse = exports.UntagResourceRequest = exports.TagResourceResponse = exports.TagResourceRequest = exports.ResourceNotFoundException = exports.SubmitTaskStateChangeResponse = exports.SubmitTaskStateChangeRequest = exports.ManagedAgentStateChange = exports.ContainerStateChange = exports.SubmitContainerStateChangeResponse = exports.SubmitContainerStateChangeRequest = exports.SubmitAttachmentStateChangesResponse = exports.SubmitAttachmentStateChangesRequest = exports.AttachmentStateChange = exports.StopTaskResponse = exports.StopTaskRequest = exports.StartTaskResponse = exports.StartTaskRequest = exports.RunTaskResponse = exports.RunTaskRequest = exports.BlockedException = exports.RegisterTaskDefinitionResponse = exports.RegisterTaskDefinitionRequest = exports.RegisterContainerInstanceResponse = exports.RegisterContainerInstanceRequest = exports.PlatformDevice = exports.PlatformDeviceType = exports.ResourceInUseException = exports.PutClusterCapacityProvidersResponse = exports.PutClusterCapacityProvidersRequest = exports.PutAttributesResponse = exports.PutAttributesRequest = exports.AttributeLimitExceededException = exports.PutAccountSettingDefaultResponse = exports.PutAccountSettingDefaultRequest = exports.PutAccountSettingResponse = exports.PutAccountSettingRequest = exports.ListTasksResponse = exports.ListTasksRequest = void 0;\nexports.UpdateTaskSetResponse = exports.UpdateTaskSetRequest = exports.UpdateServicePrimaryTaskSetResponse = exports.UpdateServicePrimaryTaskSetRequest = exports.UpdateServiceResponse = exports.UpdateServiceRequest = exports.UpdateContainerInstancesStateResponse = exports.UpdateContainerInstancesStateRequest = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nvar AccessDeniedException;\n(function (AccessDeniedException) {\n    /**\n     * @internal\n     */\n    AccessDeniedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccessDeniedException = exports.AccessDeniedException || (exports.AccessDeniedException = {}));\nvar AgentUpdateStatus;\n(function (AgentUpdateStatus) {\n    AgentUpdateStatus[\"FAILED\"] = \"FAILED\";\n    AgentUpdateStatus[\"PENDING\"] = \"PENDING\";\n    AgentUpdateStatus[\"STAGED\"] = \"STAGED\";\n    AgentUpdateStatus[\"STAGING\"] = \"STAGING\";\n    AgentUpdateStatus[\"UPDATED\"] = \"UPDATED\";\n    AgentUpdateStatus[\"UPDATING\"] = \"UPDATING\";\n})(AgentUpdateStatus = exports.AgentUpdateStatus || (exports.AgentUpdateStatus = {}));\nvar ClientException;\n(function (ClientException) {\n    /**\n     * @internal\n     */\n    ClientException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClientException = exports.ClientException || (exports.ClientException = {}));\nvar ManagedScalingStatus;\n(function (ManagedScalingStatus) {\n    ManagedScalingStatus[\"DISABLED\"] = \"DISABLED\";\n    ManagedScalingStatus[\"ENABLED\"] = \"ENABLED\";\n})(ManagedScalingStatus = exports.ManagedScalingStatus || (exports.ManagedScalingStatus = {}));\nvar ManagedScaling;\n(function (ManagedScaling) {\n    /**\n     * @internal\n     */\n    ManagedScaling.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ManagedScaling = exports.ManagedScaling || (exports.ManagedScaling = {}));\nvar ManagedTerminationProtection;\n(function (ManagedTerminationProtection) {\n    ManagedTerminationProtection[\"DISABLED\"] = \"DISABLED\";\n    ManagedTerminationProtection[\"ENABLED\"] = \"ENABLED\";\n})(ManagedTerminationProtection = exports.ManagedTerminationProtection || (exports.ManagedTerminationProtection = {}));\nvar AutoScalingGroupProvider;\n(function (AutoScalingGroupProvider) {\n    /**\n     * @internal\n     */\n    AutoScalingGroupProvider.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AutoScalingGroupProvider = exports.AutoScalingGroupProvider || (exports.AutoScalingGroupProvider = {}));\nvar Tag;\n(function (Tag) {\n    /**\n     * @internal\n     */\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar CreateCapacityProviderRequest;\n(function (CreateCapacityProviderRequest) {\n    /**\n     * @internal\n     */\n    CreateCapacityProviderRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateCapacityProviderRequest = exports.CreateCapacityProviderRequest || (exports.CreateCapacityProviderRequest = {}));\nvar CapacityProviderStatus;\n(function (CapacityProviderStatus) {\n    CapacityProviderStatus[\"ACTIVE\"] = \"ACTIVE\";\n    CapacityProviderStatus[\"INACTIVE\"] = \"INACTIVE\";\n})(CapacityProviderStatus = exports.CapacityProviderStatus || (exports.CapacityProviderStatus = {}));\nvar CapacityProviderUpdateStatus;\n(function (CapacityProviderUpdateStatus) {\n    CapacityProviderUpdateStatus[\"DELETE_COMPLETE\"] = \"DELETE_COMPLETE\";\n    CapacityProviderUpdateStatus[\"DELETE_FAILED\"] = \"DELETE_FAILED\";\n    CapacityProviderUpdateStatus[\"DELETE_IN_PROGRESS\"] = \"DELETE_IN_PROGRESS\";\n    CapacityProviderUpdateStatus[\"UPDATE_COMPLETE\"] = \"UPDATE_COMPLETE\";\n    CapacityProviderUpdateStatus[\"UPDATE_FAILED\"] = \"UPDATE_FAILED\";\n    CapacityProviderUpdateStatus[\"UPDATE_IN_PROGRESS\"] = \"UPDATE_IN_PROGRESS\";\n})(CapacityProviderUpdateStatus = exports.CapacityProviderUpdateStatus || (exports.CapacityProviderUpdateStatus = {}));\nvar CapacityProvider;\n(function (CapacityProvider) {\n    /**\n     * @internal\n     */\n    CapacityProvider.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CapacityProvider = exports.CapacityProvider || (exports.CapacityProvider = {}));\nvar CreateCapacityProviderResponse;\n(function (CreateCapacityProviderResponse) {\n    /**\n     * @internal\n     */\n    CreateCapacityProviderResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateCapacityProviderResponse = exports.CreateCapacityProviderResponse || (exports.CreateCapacityProviderResponse = {}));\nvar InvalidParameterException;\n(function (InvalidParameterException) {\n    /**\n     * @internal\n     */\n    InvalidParameterException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidParameterException = exports.InvalidParameterException || (exports.InvalidParameterException = {}));\nvar LimitExceededException;\n(function (LimitExceededException) {\n    /**\n     * @internal\n     */\n    LimitExceededException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LimitExceededException = exports.LimitExceededException || (exports.LimitExceededException = {}));\nvar ServerException;\n(function (ServerException) {\n    /**\n     * @internal\n     */\n    ServerException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServerException = exports.ServerException || (exports.ServerException = {}));\nvar UpdateInProgressException;\n(function (UpdateInProgressException) {\n    /**\n     * @internal\n     */\n    UpdateInProgressException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateInProgressException = exports.UpdateInProgressException || (exports.UpdateInProgressException = {}));\nvar ExecuteCommandLogConfiguration;\n(function (ExecuteCommandLogConfiguration) {\n    /**\n     * @internal\n     */\n    ExecuteCommandLogConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExecuteCommandLogConfiguration = exports.ExecuteCommandLogConfiguration || (exports.ExecuteCommandLogConfiguration = {}));\nvar ExecuteCommandLogging;\n(function (ExecuteCommandLogging) {\n    ExecuteCommandLogging[\"DEFAULT\"] = \"DEFAULT\";\n    ExecuteCommandLogging[\"NONE\"] = \"NONE\";\n    ExecuteCommandLogging[\"OVERRIDE\"] = \"OVERRIDE\";\n})(ExecuteCommandLogging = exports.ExecuteCommandLogging || (exports.ExecuteCommandLogging = {}));\nvar ExecuteCommandConfiguration;\n(function (ExecuteCommandConfiguration) {\n    /**\n     * @internal\n     */\n    ExecuteCommandConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExecuteCommandConfiguration = exports.ExecuteCommandConfiguration || (exports.ExecuteCommandConfiguration = {}));\nvar ClusterConfiguration;\n(function (ClusterConfiguration) {\n    /**\n     * @internal\n     */\n    ClusterConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterConfiguration = exports.ClusterConfiguration || (exports.ClusterConfiguration = {}));\nvar CapacityProviderStrategyItem;\n(function (CapacityProviderStrategyItem) {\n    /**\n     * @internal\n     */\n    CapacityProviderStrategyItem.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CapacityProviderStrategyItem = exports.CapacityProviderStrategyItem || (exports.CapacityProviderStrategyItem = {}));\nvar ClusterSettingName;\n(function (ClusterSettingName) {\n    ClusterSettingName[\"CONTAINER_INSIGHTS\"] = \"containerInsights\";\n})(ClusterSettingName = exports.ClusterSettingName || (exports.ClusterSettingName = {}));\nvar ClusterSetting;\n(function (ClusterSetting) {\n    /**\n     * @internal\n     */\n    ClusterSetting.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterSetting = exports.ClusterSetting || (exports.ClusterSetting = {}));\nvar CreateClusterRequest;\n(function (CreateClusterRequest) {\n    /**\n     * @internal\n     */\n    CreateClusterRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateClusterRequest = exports.CreateClusterRequest || (exports.CreateClusterRequest = {}));\nvar KeyValuePair;\n(function (KeyValuePair) {\n    /**\n     * @internal\n     */\n    KeyValuePair.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KeyValuePair = exports.KeyValuePair || (exports.KeyValuePair = {}));\nvar Attachment;\n(function (Attachment) {\n    /**\n     * @internal\n     */\n    Attachment.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Attachment = exports.Attachment || (exports.Attachment = {}));\nvar Cluster;\n(function (Cluster) {\n    /**\n     * @internal\n     */\n    Cluster.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Cluster = exports.Cluster || (exports.Cluster = {}));\nvar CreateClusterResponse;\n(function (CreateClusterResponse) {\n    /**\n     * @internal\n     */\n    CreateClusterResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateClusterResponse = exports.CreateClusterResponse || (exports.CreateClusterResponse = {}));\nvar ClusterNotFoundException;\n(function (ClusterNotFoundException) {\n    /**\n     * @internal\n     */\n    ClusterNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterNotFoundException = exports.ClusterNotFoundException || (exports.ClusterNotFoundException = {}));\nvar DeploymentCircuitBreaker;\n(function (DeploymentCircuitBreaker) {\n    /**\n     * @internal\n     */\n    DeploymentCircuitBreaker.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeploymentCircuitBreaker = exports.DeploymentCircuitBreaker || (exports.DeploymentCircuitBreaker = {}));\nvar DeploymentConfiguration;\n(function (DeploymentConfiguration) {\n    /**\n     * @internal\n     */\n    DeploymentConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeploymentConfiguration = exports.DeploymentConfiguration || (exports.DeploymentConfiguration = {}));\nvar DeploymentControllerType;\n(function (DeploymentControllerType) {\n    DeploymentControllerType[\"CODE_DEPLOY\"] = \"CODE_DEPLOY\";\n    DeploymentControllerType[\"ECS\"] = \"ECS\";\n    DeploymentControllerType[\"EXTERNAL\"] = \"EXTERNAL\";\n})(DeploymentControllerType = exports.DeploymentControllerType || (exports.DeploymentControllerType = {}));\nvar DeploymentController;\n(function (DeploymentController) {\n    /**\n     * @internal\n     */\n    DeploymentController.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeploymentController = exports.DeploymentController || (exports.DeploymentController = {}));\nvar LaunchType;\n(function (LaunchType) {\n    LaunchType[\"EC2\"] = \"EC2\";\n    LaunchType[\"EXTERNAL\"] = \"EXTERNAL\";\n    LaunchType[\"FARGATE\"] = \"FARGATE\";\n})(LaunchType = exports.LaunchType || (exports.LaunchType = {}));\nvar LoadBalancer;\n(function (LoadBalancer) {\n    /**\n     * @internal\n     */\n    LoadBalancer.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LoadBalancer = exports.LoadBalancer || (exports.LoadBalancer = {}));\nvar AssignPublicIp;\n(function (AssignPublicIp) {\n    AssignPublicIp[\"DISABLED\"] = \"DISABLED\";\n    AssignPublicIp[\"ENABLED\"] = \"ENABLED\";\n})(AssignPublicIp = exports.AssignPublicIp || (exports.AssignPublicIp = {}));\nvar AwsVpcConfiguration;\n(function (AwsVpcConfiguration) {\n    /**\n     * @internal\n     */\n    AwsVpcConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AwsVpcConfiguration = exports.AwsVpcConfiguration || (exports.AwsVpcConfiguration = {}));\nvar NetworkConfiguration;\n(function (NetworkConfiguration) {\n    /**\n     * @internal\n     */\n    NetworkConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(NetworkConfiguration = exports.NetworkConfiguration || (exports.NetworkConfiguration = {}));\nvar PlacementConstraintType;\n(function (PlacementConstraintType) {\n    PlacementConstraintType[\"DISTINCT_INSTANCE\"] = \"distinctInstance\";\n    PlacementConstraintType[\"MEMBER_OF\"] = \"memberOf\";\n})(PlacementConstraintType = exports.PlacementConstraintType || (exports.PlacementConstraintType = {}));\nvar PlacementConstraint;\n(function (PlacementConstraint) {\n    /**\n     * @internal\n     */\n    PlacementConstraint.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlacementConstraint = exports.PlacementConstraint || (exports.PlacementConstraint = {}));\nvar PlacementStrategyType;\n(function (PlacementStrategyType) {\n    PlacementStrategyType[\"BINPACK\"] = \"binpack\";\n    PlacementStrategyType[\"RANDOM\"] = \"random\";\n    PlacementStrategyType[\"SPREAD\"] = \"spread\";\n})(PlacementStrategyType = exports.PlacementStrategyType || (exports.PlacementStrategyType = {}));\nvar PlacementStrategy;\n(function (PlacementStrategy) {\n    /**\n     * @internal\n     */\n    PlacementStrategy.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlacementStrategy = exports.PlacementStrategy || (exports.PlacementStrategy = {}));\nvar PropagateTags;\n(function (PropagateTags) {\n    PropagateTags[\"SERVICE\"] = \"SERVICE\";\n    PropagateTags[\"TASK_DEFINITION\"] = \"TASK_DEFINITION\";\n})(PropagateTags = exports.PropagateTags || (exports.PropagateTags = {}));\nvar SchedulingStrategy;\n(function (SchedulingStrategy) {\n    SchedulingStrategy[\"DAEMON\"] = \"DAEMON\";\n    SchedulingStrategy[\"REPLICA\"] = \"REPLICA\";\n})(SchedulingStrategy = exports.SchedulingStrategy || (exports.SchedulingStrategy = {}));\nvar ServiceRegistry;\n(function (ServiceRegistry) {\n    /**\n     * @internal\n     */\n    ServiceRegistry.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServiceRegistry = exports.ServiceRegistry || (exports.ServiceRegistry = {}));\nvar CreateServiceRequest;\n(function (CreateServiceRequest) {\n    /**\n     * @internal\n     */\n    CreateServiceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateServiceRequest = exports.CreateServiceRequest || (exports.CreateServiceRequest = {}));\nvar DeploymentRolloutState;\n(function (DeploymentRolloutState) {\n    DeploymentRolloutState[\"COMPLETED\"] = \"COMPLETED\";\n    DeploymentRolloutState[\"FAILED\"] = \"FAILED\";\n    DeploymentRolloutState[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n})(DeploymentRolloutState = exports.DeploymentRolloutState || (exports.DeploymentRolloutState = {}));\nvar Deployment;\n(function (Deployment) {\n    /**\n     * @internal\n     */\n    Deployment.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Deployment = exports.Deployment || (exports.Deployment = {}));\nvar ServiceEvent;\n(function (ServiceEvent) {\n    /**\n     * @internal\n     */\n    ServiceEvent.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServiceEvent = exports.ServiceEvent || (exports.ServiceEvent = {}));\nvar ScaleUnit;\n(function (ScaleUnit) {\n    ScaleUnit[\"PERCENT\"] = \"PERCENT\";\n})(ScaleUnit = exports.ScaleUnit || (exports.ScaleUnit = {}));\nvar Scale;\n(function (Scale) {\n    /**\n     * @internal\n     */\n    Scale.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Scale = exports.Scale || (exports.Scale = {}));\nvar StabilityStatus;\n(function (StabilityStatus) {\n    StabilityStatus[\"STABILIZING\"] = \"STABILIZING\";\n    StabilityStatus[\"STEADY_STATE\"] = \"STEADY_STATE\";\n})(StabilityStatus = exports.StabilityStatus || (exports.StabilityStatus = {}));\nvar TaskSet;\n(function (TaskSet) {\n    /**\n     * @internal\n     */\n    TaskSet.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TaskSet = exports.TaskSet || (exports.TaskSet = {}));\nvar Service;\n(function (Service) {\n    /**\n     * @internal\n     */\n    Service.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Service = exports.Service || (exports.Service = {}));\nvar CreateServiceResponse;\n(function (CreateServiceResponse) {\n    /**\n     * @internal\n     */\n    CreateServiceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateServiceResponse = exports.CreateServiceResponse || (exports.CreateServiceResponse = {}));\nvar PlatformTaskDefinitionIncompatibilityException;\n(function (PlatformTaskDefinitionIncompatibilityException) {\n    /**\n     * @internal\n     */\n    PlatformTaskDefinitionIncompatibilityException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlatformTaskDefinitionIncompatibilityException = exports.PlatformTaskDefinitionIncompatibilityException || (exports.PlatformTaskDefinitionIncompatibilityException = {}));\nvar PlatformUnknownException;\n(function (PlatformUnknownException) {\n    /**\n     * @internal\n     */\n    PlatformUnknownException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlatformUnknownException = exports.PlatformUnknownException || (exports.PlatformUnknownException = {}));\nvar UnsupportedFeatureException;\n(function (UnsupportedFeatureException) {\n    /**\n     * @internal\n     */\n    UnsupportedFeatureException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UnsupportedFeatureException = exports.UnsupportedFeatureException || (exports.UnsupportedFeatureException = {}));\nvar CreateTaskSetRequest;\n(function (CreateTaskSetRequest) {\n    /**\n     * @internal\n     */\n    CreateTaskSetRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateTaskSetRequest = exports.CreateTaskSetRequest || (exports.CreateTaskSetRequest = {}));\nvar CreateTaskSetResponse;\n(function (CreateTaskSetResponse) {\n    /**\n     * @internal\n     */\n    CreateTaskSetResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateTaskSetResponse = exports.CreateTaskSetResponse || (exports.CreateTaskSetResponse = {}));\nvar ServiceNotActiveException;\n(function (ServiceNotActiveException) {\n    /**\n     * @internal\n     */\n    ServiceNotActiveException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServiceNotActiveException = exports.ServiceNotActiveException || (exports.ServiceNotActiveException = {}));\nvar ServiceNotFoundException;\n(function (ServiceNotFoundException) {\n    /**\n     * @internal\n     */\n    ServiceNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServiceNotFoundException = exports.ServiceNotFoundException || (exports.ServiceNotFoundException = {}));\nvar SettingName;\n(function (SettingName) {\n    SettingName[\"AWSVPC_TRUNKING\"] = \"awsvpcTrunking\";\n    SettingName[\"CONTAINER_INSIGHTS\"] = \"containerInsights\";\n    SettingName[\"CONTAINER_INSTANCE_LONG_ARN_FORMAT\"] = \"containerInstanceLongArnFormat\";\n    SettingName[\"SERVICE_LONG_ARN_FORMAT\"] = \"serviceLongArnFormat\";\n    SettingName[\"TASK_LONG_ARN_FORMAT\"] = \"taskLongArnFormat\";\n})(SettingName = exports.SettingName || (exports.SettingName = {}));\nvar DeleteAccountSettingRequest;\n(function (DeleteAccountSettingRequest) {\n    /**\n     * @internal\n     */\n    DeleteAccountSettingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteAccountSettingRequest = exports.DeleteAccountSettingRequest || (exports.DeleteAccountSettingRequest = {}));\nvar Setting;\n(function (Setting) {\n    /**\n     * @internal\n     */\n    Setting.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Setting = exports.Setting || (exports.Setting = {}));\nvar DeleteAccountSettingResponse;\n(function (DeleteAccountSettingResponse) {\n    /**\n     * @internal\n     */\n    DeleteAccountSettingResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteAccountSettingResponse = exports.DeleteAccountSettingResponse || (exports.DeleteAccountSettingResponse = {}));\nvar TargetType;\n(function (TargetType) {\n    TargetType[\"CONTAINER_INSTANCE\"] = \"container-instance\";\n})(TargetType = exports.TargetType || (exports.TargetType = {}));\nvar Attribute;\n(function (Attribute) {\n    /**\n     * @internal\n     */\n    Attribute.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Attribute = exports.Attribute || (exports.Attribute = {}));\nvar DeleteAttributesRequest;\n(function (DeleteAttributesRequest) {\n    /**\n     * @internal\n     */\n    DeleteAttributesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteAttributesRequest = exports.DeleteAttributesRequest || (exports.DeleteAttributesRequest = {}));\nvar DeleteAttributesResponse;\n(function (DeleteAttributesResponse) {\n    /**\n     * @internal\n     */\n    DeleteAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteAttributesResponse = exports.DeleteAttributesResponse || (exports.DeleteAttributesResponse = {}));\nvar TargetNotFoundException;\n(function (TargetNotFoundException) {\n    /**\n     * @internal\n     */\n    TargetNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TargetNotFoundException = exports.TargetNotFoundException || (exports.TargetNotFoundException = {}));\nvar DeleteCapacityProviderRequest;\n(function (DeleteCapacityProviderRequest) {\n    /**\n     * @internal\n     */\n    DeleteCapacityProviderRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteCapacityProviderRequest = exports.DeleteCapacityProviderRequest || (exports.DeleteCapacityProviderRequest = {}));\nvar DeleteCapacityProviderResponse;\n(function (DeleteCapacityProviderResponse) {\n    /**\n     * @internal\n     */\n    DeleteCapacityProviderResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteCapacityProviderResponse = exports.DeleteCapacityProviderResponse || (exports.DeleteCapacityProviderResponse = {}));\nvar ClusterContainsContainerInstancesException;\n(function (ClusterContainsContainerInstancesException) {\n    /**\n     * @internal\n     */\n    ClusterContainsContainerInstancesException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterContainsContainerInstancesException = exports.ClusterContainsContainerInstancesException || (exports.ClusterContainsContainerInstancesException = {}));\nvar ClusterContainsServicesException;\n(function (ClusterContainsServicesException) {\n    /**\n     * @internal\n     */\n    ClusterContainsServicesException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterContainsServicesException = exports.ClusterContainsServicesException || (exports.ClusterContainsServicesException = {}));\nvar ClusterContainsTasksException;\n(function (ClusterContainsTasksException) {\n    /**\n     * @internal\n     */\n    ClusterContainsTasksException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ClusterContainsTasksException = exports.ClusterContainsTasksException || (exports.ClusterContainsTasksException = {}));\nvar DeleteClusterRequest;\n(function (DeleteClusterRequest) {\n    /**\n     * @internal\n     */\n    DeleteClusterRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteClusterRequest = exports.DeleteClusterRequest || (exports.DeleteClusterRequest = {}));\nvar DeleteClusterResponse;\n(function (DeleteClusterResponse) {\n    /**\n     * @internal\n     */\n    DeleteClusterResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteClusterResponse = exports.DeleteClusterResponse || (exports.DeleteClusterResponse = {}));\nvar DeleteServiceRequest;\n(function (DeleteServiceRequest) {\n    /**\n     * @internal\n     */\n    DeleteServiceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteServiceRequest = exports.DeleteServiceRequest || (exports.DeleteServiceRequest = {}));\nvar DeleteServiceResponse;\n(function (DeleteServiceResponse) {\n    /**\n     * @internal\n     */\n    DeleteServiceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteServiceResponse = exports.DeleteServiceResponse || (exports.DeleteServiceResponse = {}));\nvar DeleteTaskSetRequest;\n(function (DeleteTaskSetRequest) {\n    /**\n     * @internal\n     */\n    DeleteTaskSetRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteTaskSetRequest = exports.DeleteTaskSetRequest || (exports.DeleteTaskSetRequest = {}));\nvar DeleteTaskSetResponse;\n(function (DeleteTaskSetResponse) {\n    /**\n     * @internal\n     */\n    DeleteTaskSetResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteTaskSetResponse = exports.DeleteTaskSetResponse || (exports.DeleteTaskSetResponse = {}));\nvar TaskSetNotFoundException;\n(function (TaskSetNotFoundException) {\n    /**\n     * @internal\n     */\n    TaskSetNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TaskSetNotFoundException = exports.TaskSetNotFoundException || (exports.TaskSetNotFoundException = {}));\nvar DeregisterContainerInstanceRequest;\n(function (DeregisterContainerInstanceRequest) {\n    /**\n     * @internal\n     */\n    DeregisterContainerInstanceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterContainerInstanceRequest = exports.DeregisterContainerInstanceRequest || (exports.DeregisterContainerInstanceRequest = {}));\nvar Resource;\n(function (Resource) {\n    /**\n     * @internal\n     */\n    Resource.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Resource = exports.Resource || (exports.Resource = {}));\nvar VersionInfo;\n(function (VersionInfo) {\n    /**\n     * @internal\n     */\n    VersionInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VersionInfo = exports.VersionInfo || (exports.VersionInfo = {}));\nvar ContainerInstance;\n(function (ContainerInstance) {\n    /**\n     * @internal\n     */\n    ContainerInstance.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContainerInstance = exports.ContainerInstance || (exports.ContainerInstance = {}));\nvar DeregisterContainerInstanceResponse;\n(function (DeregisterContainerInstanceResponse) {\n    /**\n     * @internal\n     */\n    DeregisterContainerInstanceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterContainerInstanceResponse = exports.DeregisterContainerInstanceResponse || (exports.DeregisterContainerInstanceResponse = {}));\nvar DeregisterTaskDefinitionRequest;\n(function (DeregisterTaskDefinitionRequest) {\n    /**\n     * @internal\n     */\n    DeregisterTaskDefinitionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterTaskDefinitionRequest = exports.DeregisterTaskDefinitionRequest || (exports.DeregisterTaskDefinitionRequest = {}));\nvar Compatibility;\n(function (Compatibility) {\n    Compatibility[\"EC2\"] = \"EC2\";\n    Compatibility[\"EXTERNAL\"] = \"EXTERNAL\";\n    Compatibility[\"FARGATE\"] = \"FARGATE\";\n})(Compatibility = exports.Compatibility || (exports.Compatibility = {}));\nvar ContainerCondition;\n(function (ContainerCondition) {\n    ContainerCondition[\"COMPLETE\"] = \"COMPLETE\";\n    ContainerCondition[\"HEALTHY\"] = \"HEALTHY\";\n    ContainerCondition[\"START\"] = \"START\";\n    ContainerCondition[\"SUCCESS\"] = \"SUCCESS\";\n})(ContainerCondition = exports.ContainerCondition || (exports.ContainerCondition = {}));\nvar ContainerDependency;\n(function (ContainerDependency) {\n    /**\n     * @internal\n     */\n    ContainerDependency.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContainerDependency = exports.ContainerDependency || (exports.ContainerDependency = {}));\nvar EnvironmentFileType;\n(function (EnvironmentFileType) {\n    EnvironmentFileType[\"S3\"] = \"s3\";\n})(EnvironmentFileType = exports.EnvironmentFileType || (exports.EnvironmentFileType = {}));\nvar EnvironmentFile;\n(function (EnvironmentFile) {\n    /**\n     * @internal\n     */\n    EnvironmentFile.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EnvironmentFile = exports.EnvironmentFile || (exports.EnvironmentFile = {}));\nvar HostEntry;\n(function (HostEntry) {\n    /**\n     * @internal\n     */\n    HostEntry.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(HostEntry = exports.HostEntry || (exports.HostEntry = {}));\nvar FirelensConfigurationType;\n(function (FirelensConfigurationType) {\n    FirelensConfigurationType[\"FLUENTBIT\"] = \"fluentbit\";\n    FirelensConfigurationType[\"FLUENTD\"] = \"fluentd\";\n})(FirelensConfigurationType = exports.FirelensConfigurationType || (exports.FirelensConfigurationType = {}));\nvar FirelensConfiguration;\n(function (FirelensConfiguration) {\n    /**\n     * @internal\n     */\n    FirelensConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FirelensConfiguration = exports.FirelensConfiguration || (exports.FirelensConfiguration = {}));\nvar HealthCheck;\n(function (HealthCheck) {\n    /**\n     * @internal\n     */\n    HealthCheck.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(HealthCheck = exports.HealthCheck || (exports.HealthCheck = {}));\nvar KernelCapabilities;\n(function (KernelCapabilities) {\n    /**\n     * @internal\n     */\n    KernelCapabilities.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KernelCapabilities = exports.KernelCapabilities || (exports.KernelCapabilities = {}));\nvar DeviceCgroupPermission;\n(function (DeviceCgroupPermission) {\n    DeviceCgroupPermission[\"MKNOD\"] = \"mknod\";\n    DeviceCgroupPermission[\"READ\"] = \"read\";\n    DeviceCgroupPermission[\"WRITE\"] = \"write\";\n})(DeviceCgroupPermission = exports.DeviceCgroupPermission || (exports.DeviceCgroupPermission = {}));\nvar Device;\n(function (Device) {\n    /**\n     * @internal\n     */\n    Device.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Device = exports.Device || (exports.Device = {}));\nvar Tmpfs;\n(function (Tmpfs) {\n    /**\n     * @internal\n     */\n    Tmpfs.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tmpfs = exports.Tmpfs || (exports.Tmpfs = {}));\nvar LinuxParameters;\n(function (LinuxParameters) {\n    /**\n     * @internal\n     */\n    LinuxParameters.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LinuxParameters = exports.LinuxParameters || (exports.LinuxParameters = {}));\nvar LogDriver;\n(function (LogDriver) {\n    LogDriver[\"AWSFIRELENS\"] = \"awsfirelens\";\n    LogDriver[\"AWSLOGS\"] = \"awslogs\";\n    LogDriver[\"FLUENTD\"] = \"fluentd\";\n    LogDriver[\"GELF\"] = \"gelf\";\n    LogDriver[\"JOURNALD\"] = \"journald\";\n    LogDriver[\"JSON_FILE\"] = \"json-file\";\n    LogDriver[\"SPLUNK\"] = \"splunk\";\n    LogDriver[\"SYSLOG\"] = \"syslog\";\n})(LogDriver = exports.LogDriver || (exports.LogDriver = {}));\nvar Secret;\n(function (Secret) {\n    /**\n     * @internal\n     */\n    Secret.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Secret = exports.Secret || (exports.Secret = {}));\nvar LogConfiguration;\n(function (LogConfiguration) {\n    /**\n     * @internal\n     */\n    LogConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LogConfiguration = exports.LogConfiguration || (exports.LogConfiguration = {}));\nvar MountPoint;\n(function (MountPoint) {\n    /**\n     * @internal\n     */\n    MountPoint.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(MountPoint = exports.MountPoint || (exports.MountPoint = {}));\nvar TransportProtocol;\n(function (TransportProtocol) {\n    TransportProtocol[\"TCP\"] = \"tcp\";\n    TransportProtocol[\"UDP\"] = \"udp\";\n})(TransportProtocol = exports.TransportProtocol || (exports.TransportProtocol = {}));\nvar PortMapping;\n(function (PortMapping) {\n    /**\n     * @internal\n     */\n    PortMapping.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PortMapping = exports.PortMapping || (exports.PortMapping = {}));\nvar RepositoryCredentials;\n(function (RepositoryCredentials) {\n    /**\n     * @internal\n     */\n    RepositoryCredentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RepositoryCredentials = exports.RepositoryCredentials || (exports.RepositoryCredentials = {}));\nvar ResourceType;\n(function (ResourceType) {\n    ResourceType[\"GPU\"] = \"GPU\";\n    ResourceType[\"INFERENCE_ACCELERATOR\"] = \"InferenceAccelerator\";\n})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));\nvar ResourceRequirement;\n(function (ResourceRequirement) {\n    /**\n     * @internal\n     */\n    ResourceRequirement.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceRequirement = exports.ResourceRequirement || (exports.ResourceRequirement = {}));\nvar SystemControl;\n(function (SystemControl) {\n    /**\n     * @internal\n     */\n    SystemControl.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SystemControl = exports.SystemControl || (exports.SystemControl = {}));\nvar UlimitName;\n(function (UlimitName) {\n    UlimitName[\"CORE\"] = \"core\";\n    UlimitName[\"CPU\"] = \"cpu\";\n    UlimitName[\"DATA\"] = \"data\";\n    UlimitName[\"FSIZE\"] = \"fsize\";\n    UlimitName[\"LOCKS\"] = \"locks\";\n    UlimitName[\"MEMLOCK\"] = \"memlock\";\n    UlimitName[\"MSGQUEUE\"] = \"msgqueue\";\n    UlimitName[\"NICE\"] = \"nice\";\n    UlimitName[\"NOFILE\"] = \"nofile\";\n    UlimitName[\"NPROC\"] = \"nproc\";\n    UlimitName[\"RSS\"] = \"rss\";\n    UlimitName[\"RTPRIO\"] = \"rtprio\";\n    UlimitName[\"RTTIME\"] = \"rttime\";\n    UlimitName[\"SIGPENDING\"] = \"sigpending\";\n    UlimitName[\"STACK\"] = \"stack\";\n})(UlimitName = exports.UlimitName || (exports.UlimitName = {}));\nvar Ulimit;\n(function (Ulimit) {\n    /**\n     * @internal\n     */\n    Ulimit.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Ulimit = exports.Ulimit || (exports.Ulimit = {}));\nvar VolumeFrom;\n(function (VolumeFrom) {\n    /**\n     * @internal\n     */\n    VolumeFrom.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VolumeFrom = exports.VolumeFrom || (exports.VolumeFrom = {}));\nvar ContainerDefinition;\n(function (ContainerDefinition) {\n    /**\n     * @internal\n     */\n    ContainerDefinition.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContainerDefinition = exports.ContainerDefinition || (exports.ContainerDefinition = {}));\nvar EphemeralStorage;\n(function (EphemeralStorage) {\n    /**\n     * @internal\n     */\n    EphemeralStorage.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EphemeralStorage = exports.EphemeralStorage || (exports.EphemeralStorage = {}));\nvar InferenceAccelerator;\n(function (InferenceAccelerator) {\n    /**\n     * @internal\n     */\n    InferenceAccelerator.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InferenceAccelerator = exports.InferenceAccelerator || (exports.InferenceAccelerator = {}));\nvar IpcMode;\n(function (IpcMode) {\n    IpcMode[\"HOST\"] = \"host\";\n    IpcMode[\"NONE\"] = \"none\";\n    IpcMode[\"TASK\"] = \"task\";\n})(IpcMode = exports.IpcMode || (exports.IpcMode = {}));\nvar NetworkMode;\n(function (NetworkMode) {\n    NetworkMode[\"AWSVPC\"] = \"awsvpc\";\n    NetworkMode[\"BRIDGE\"] = \"bridge\";\n    NetworkMode[\"HOST\"] = \"host\";\n    NetworkMode[\"NONE\"] = \"none\";\n})(NetworkMode = exports.NetworkMode || (exports.NetworkMode = {}));\nvar PidMode;\n(function (PidMode) {\n    PidMode[\"HOST\"] = \"host\";\n    PidMode[\"TASK\"] = \"task\";\n})(PidMode = exports.PidMode || (exports.PidMode = {}));\nvar TaskDefinitionPlacementConstraintType;\n(function (TaskDefinitionPlacementConstraintType) {\n    TaskDefinitionPlacementConstraintType[\"MEMBER_OF\"] = \"memberOf\";\n})(TaskDefinitionPlacementConstraintType = exports.TaskDefinitionPlacementConstraintType || (exports.TaskDefinitionPlacementConstraintType = {}));\nvar TaskDefinitionPlacementConstraint;\n(function (TaskDefinitionPlacementConstraint) {\n    /**\n     * @internal\n     */\n    TaskDefinitionPlacementConstraint.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TaskDefinitionPlacementConstraint = exports.TaskDefinitionPlacementConstraint || (exports.TaskDefinitionPlacementConstraint = {}));\nvar ProxyConfigurationType;\n(function (ProxyConfigurationType) {\n    ProxyConfigurationType[\"APPMESH\"] = \"APPMESH\";\n})(ProxyConfigurationType = exports.ProxyConfigurationType || (exports.ProxyConfigurationType = {}));\nvar ProxyConfiguration;\n(function (ProxyConfiguration) {\n    /**\n     * @internal\n     */\n    ProxyConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ProxyConfiguration = exports.ProxyConfiguration || (exports.ProxyConfiguration = {}));\nvar TaskDefinitionStatus;\n(function (TaskDefinitionStatus) {\n    TaskDefinitionStatus[\"ACTIVE\"] = \"ACTIVE\";\n    TaskDefinitionStatus[\"INACTIVE\"] = \"INACTIVE\";\n})(TaskDefinitionStatus = exports.TaskDefinitionStatus || (exports.TaskDefinitionStatus = {}));\nvar Scope;\n(function (Scope) {\n    Scope[\"SHARED\"] = \"shared\";\n    Scope[\"TASK\"] = \"task\";\n})(Scope = exports.Scope || (exports.Scope = {}));\nvar DockerVolumeConfiguration;\n(function (DockerVolumeConfiguration) {\n    /**\n     * @internal\n     */\n    DockerVolumeConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DockerVolumeConfiguration = exports.DockerVolumeConfiguration || (exports.DockerVolumeConfiguration = {}));\nvar EFSAuthorizationConfigIAM;\n(function (EFSAuthorizationConfigIAM) {\n    EFSAuthorizationConfigIAM[\"DISABLED\"] = \"DISABLED\";\n    EFSAuthorizationConfigIAM[\"ENABLED\"] = \"ENABLED\";\n})(EFSAuthorizationConfigIAM = exports.EFSAuthorizationConfigIAM || (exports.EFSAuthorizationConfigIAM = {}));\nvar EFSAuthorizationConfig;\n(function (EFSAuthorizationConfig) {\n    /**\n     * @internal\n     */\n    EFSAuthorizationConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSAuthorizationConfig = exports.EFSAuthorizationConfig || (exports.EFSAuthorizationConfig = {}));\nvar EFSTransitEncryption;\n(function (EFSTransitEncryption) {\n    EFSTransitEncryption[\"DISABLED\"] = \"DISABLED\";\n    EFSTransitEncryption[\"ENABLED\"] = \"ENABLED\";\n})(EFSTransitEncryption = exports.EFSTransitEncryption || (exports.EFSTransitEncryption = {}));\nvar EFSVolumeConfiguration;\n(function (EFSVolumeConfiguration) {\n    /**\n     * @internal\n     */\n    EFSVolumeConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSVolumeConfiguration = exports.EFSVolumeConfiguration || (exports.EFSVolumeConfiguration = {}));\nvar FSxWindowsFileServerAuthorizationConfig;\n(function (FSxWindowsFileServerAuthorizationConfig) {\n    /**\n     * @internal\n     */\n    FSxWindowsFileServerAuthorizationConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FSxWindowsFileServerAuthorizationConfig = exports.FSxWindowsFileServerAuthorizationConfig || (exports.FSxWindowsFileServerAuthorizationConfig = {}));\nvar FSxWindowsFileServerVolumeConfiguration;\n(function (FSxWindowsFileServerVolumeConfiguration) {\n    /**\n     * @internal\n     */\n    FSxWindowsFileServerVolumeConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FSxWindowsFileServerVolumeConfiguration = exports.FSxWindowsFileServerVolumeConfiguration || (exports.FSxWindowsFileServerVolumeConfiguration = {}));\nvar HostVolumeProperties;\n(function (HostVolumeProperties) {\n    /**\n     * @internal\n     */\n    HostVolumeProperties.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(HostVolumeProperties = exports.HostVolumeProperties || (exports.HostVolumeProperties = {}));\nvar Volume;\n(function (Volume) {\n    /**\n     * @internal\n     */\n    Volume.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Volume = exports.Volume || (exports.Volume = {}));\nvar TaskDefinition;\n(function (TaskDefinition) {\n    /**\n     * @internal\n     */\n    TaskDefinition.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TaskDefinition = exports.TaskDefinition || (exports.TaskDefinition = {}));\nvar DeregisterTaskDefinitionResponse;\n(function (DeregisterTaskDefinitionResponse) {\n    /**\n     * @internal\n     */\n    DeregisterTaskDefinitionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterTaskDefinitionResponse = exports.DeregisterTaskDefinitionResponse || (exports.DeregisterTaskDefinitionResponse = {}));\nvar CapacityProviderField;\n(function (CapacityProviderField) {\n    CapacityProviderField[\"TAGS\"] = \"TAGS\";\n})(CapacityProviderField = exports.CapacityProviderField || (exports.CapacityProviderField = {}));\nvar DescribeCapacityProvidersRequest;\n(function (DescribeCapacityProvidersRequest) {\n    /**\n     * @internal\n     */\n    DescribeCapacityProvidersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeCapacityProvidersRequest = exports.DescribeCapacityProvidersRequest || (exports.DescribeCapacityProvidersRequest = {}));\nvar Failure;\n(function (Failure) {\n    /**\n     * @internal\n     */\n    Failure.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Failure = exports.Failure || (exports.Failure = {}));\nvar DescribeCapacityProvidersResponse;\n(function (DescribeCapacityProvidersResponse) {\n    /**\n     * @internal\n     */\n    DescribeCapacityProvidersResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeCapacityProvidersResponse = exports.DescribeCapacityProvidersResponse || (exports.DescribeCapacityProvidersResponse = {}));\nvar ClusterField;\n(function (ClusterField) {\n    ClusterField[\"ATTACHMENTS\"] = \"ATTACHMENTS\";\n    ClusterField[\"CONFIGURATIONS\"] = \"CONFIGURATIONS\";\n    ClusterField[\"SETTINGS\"] = \"SETTINGS\";\n    ClusterField[\"STATISTICS\"] = \"STATISTICS\";\n    ClusterField[\"TAGS\"] = \"TAGS\";\n})(ClusterField = exports.ClusterField || (exports.ClusterField = {}));\nvar DescribeClustersRequest;\n(function (DescribeClustersRequest) {\n    /**\n     * @internal\n     */\n    DescribeClustersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeClustersRequest = exports.DescribeClustersRequest || (exports.DescribeClustersRequest = {}));\nvar DescribeClustersResponse;\n(function (DescribeClustersResponse) {\n    /**\n     * @internal\n     */\n    DescribeClustersResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeClustersResponse = exports.DescribeClustersResponse || (exports.DescribeClustersResponse = {}));\nvar ContainerInstanceField;\n(function (ContainerInstanceField) {\n    ContainerInstanceField[\"TAGS\"] = \"TAGS\";\n})(ContainerInstanceField = exports.ContainerInstanceField || (exports.ContainerInstanceField = {}));\nvar DescribeContainerInstancesRequest;\n(function (DescribeContainerInstancesRequest) {\n    /**\n     * @internal\n     */\n    DescribeContainerInstancesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeContainerInstancesRequest = exports.DescribeContainerInstancesRequest || (exports.DescribeContainerInstancesRequest = {}));\nvar DescribeContainerInstancesResponse;\n(function (DescribeContainerInstancesResponse) {\n    /**\n     * @internal\n     */\n    DescribeContainerInstancesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeContainerInstancesResponse = exports.DescribeContainerInstancesResponse || (exports.DescribeContainerInstancesResponse = {}));\nvar ServiceField;\n(function (ServiceField) {\n    ServiceField[\"TAGS\"] = \"TAGS\";\n})(ServiceField = exports.ServiceField || (exports.ServiceField = {}));\nvar DescribeServicesRequest;\n(function (DescribeServicesRequest) {\n    /**\n     * @internal\n     */\n    DescribeServicesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeServicesRequest = exports.DescribeServicesRequest || (exports.DescribeServicesRequest = {}));\nvar DescribeServicesResponse;\n(function (DescribeServicesResponse) {\n    /**\n     * @internal\n     */\n    DescribeServicesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeServicesResponse = exports.DescribeServicesResponse || (exports.DescribeServicesResponse = {}));\nvar TaskDefinitionField;\n(function (TaskDefinitionField) {\n    TaskDefinitionField[\"TAGS\"] = \"TAGS\";\n})(TaskDefinitionField = exports.TaskDefinitionField || (exports.TaskDefinitionField = {}));\nvar DescribeTaskDefinitionRequest;\n(function (DescribeTaskDefinitionRequest) {\n    /**\n     * @internal\n     */\n    DescribeTaskDefinitionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTaskDefinitionRequest = exports.DescribeTaskDefinitionRequest || (exports.DescribeTaskDefinitionRequest = {}));\nvar DescribeTaskDefinitionResponse;\n(function (DescribeTaskDefinitionResponse) {\n    /**\n     * @internal\n     */\n    DescribeTaskDefinitionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTaskDefinitionResponse = exports.DescribeTaskDefinitionResponse || (exports.DescribeTaskDefinitionResponse = {}));\nvar TaskField;\n(function (TaskField) {\n    TaskField[\"TAGS\"] = \"TAGS\";\n})(TaskField = exports.TaskField || (exports.TaskField = {}));\nvar DescribeTasksRequest;\n(function (DescribeTasksRequest) {\n    /**\n     * @internal\n     */\n    DescribeTasksRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTasksRequest = exports.DescribeTasksRequest || (exports.DescribeTasksRequest = {}));\nvar Connectivity;\n(function (Connectivity) {\n    Connectivity[\"CONNECTED\"] = \"CONNECTED\";\n    Connectivity[\"DISCONNECTED\"] = \"DISCONNECTED\";\n})(Connectivity = exports.Connectivity || (exports.Connectivity = {}));\nvar HealthStatus;\n(function (HealthStatus) {\n    HealthStatus[\"HEALTHY\"] = \"HEALTHY\";\n    HealthStatus[\"UNHEALTHY\"] = \"UNHEALTHY\";\n    HealthStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n})(HealthStatus = exports.HealthStatus || (exports.HealthStatus = {}));\nvar ManagedAgentName;\n(function (ManagedAgentName) {\n    ManagedAgentName[\"ExecuteCommandAgent\"] = \"ExecuteCommandAgent\";\n})(ManagedAgentName = exports.ManagedAgentName || (exports.ManagedAgentName = {}));\nvar ManagedAgent;\n(function (ManagedAgent) {\n    /**\n     * @internal\n     */\n    ManagedAgent.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ManagedAgent = exports.ManagedAgent || (exports.ManagedAgent = {}));\nvar NetworkBinding;\n(function (NetworkBinding) {\n    /**\n     * @internal\n     */\n    NetworkBinding.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(NetworkBinding = exports.NetworkBinding || (exports.NetworkBinding = {}));\nvar NetworkInterface;\n(function (NetworkInterface) {\n    /**\n     * @internal\n     */\n    NetworkInterface.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(NetworkInterface = exports.NetworkInterface || (exports.NetworkInterface = {}));\nvar Container;\n(function (Container) {\n    /**\n     * @internal\n     */\n    Container.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Container = exports.Container || (exports.Container = {}));\nvar ContainerOverride;\n(function (ContainerOverride) {\n    /**\n     * @internal\n     */\n    ContainerOverride.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContainerOverride = exports.ContainerOverride || (exports.ContainerOverride = {}));\nvar InferenceAcceleratorOverride;\n(function (InferenceAcceleratorOverride) {\n    /**\n     * @internal\n     */\n    InferenceAcceleratorOverride.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InferenceAcceleratorOverride = exports.InferenceAcceleratorOverride || (exports.InferenceAcceleratorOverride = {}));\nvar TaskOverride;\n(function (TaskOverride) {\n    /**\n     * @internal\n     */\n    TaskOverride.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TaskOverride = exports.TaskOverride || (exports.TaskOverride = {}));\nvar TaskStopCode;\n(function (TaskStopCode) {\n    TaskStopCode[\"ESSENTIAL_CONTAINER_EXITED\"] = \"EssentialContainerExited\";\n    TaskStopCode[\"TASK_FAILED_TO_START\"] = \"TaskFailedToStart\";\n    TaskStopCode[\"USER_INITIATED\"] = \"UserInitiated\";\n})(TaskStopCode = exports.TaskStopCode || (exports.TaskStopCode = {}));\nvar Task;\n(function (Task) {\n    /**\n     * @internal\n     */\n    Task.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Task = exports.Task || (exports.Task = {}));\nvar DescribeTasksResponse;\n(function (DescribeTasksResponse) {\n    /**\n     * @internal\n     */\n    DescribeTasksResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTasksResponse = exports.DescribeTasksResponse || (exports.DescribeTasksResponse = {}));\nvar TaskSetField;\n(function (TaskSetField) {\n    TaskSetField[\"TAGS\"] = \"TAGS\";\n})(TaskSetField = exports.TaskSetField || (exports.TaskSetField = {}));\nvar DescribeTaskSetsRequest;\n(function (DescribeTaskSetsRequest) {\n    /**\n     * @internal\n     */\n    DescribeTaskSetsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTaskSetsRequest = exports.DescribeTaskSetsRequest || (exports.DescribeTaskSetsRequest = {}));\nvar DescribeTaskSetsResponse;\n(function (DescribeTaskSetsResponse) {\n    /**\n     * @internal\n     */\n    DescribeTaskSetsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTaskSetsResponse = exports.DescribeTaskSetsResponse || (exports.DescribeTaskSetsResponse = {}));\nvar DiscoverPollEndpointRequest;\n(function (DiscoverPollEndpointRequest) {\n    /**\n     * @internal\n     */\n    DiscoverPollEndpointRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DiscoverPollEndpointRequest = exports.DiscoverPollEndpointRequest || (exports.DiscoverPollEndpointRequest = {}));\nvar DiscoverPollEndpointResponse;\n(function (DiscoverPollEndpointResponse) {\n    /**\n     * @internal\n     */\n    DiscoverPollEndpointResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DiscoverPollEndpointResponse = exports.DiscoverPollEndpointResponse || (exports.DiscoverPollEndpointResponse = {}));\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    /**\n     * @internal\n     */\n    ExecuteCommandRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\nvar Session;\n(function (Session) {\n    /**\n     * @internal\n     */\n    Session.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.tokenValue && { tokenValue: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(Session = exports.Session || (exports.Session = {}));\nvar ExecuteCommandResponse;\n(function (ExecuteCommandResponse) {\n    /**\n     * @internal\n     */\n    ExecuteCommandResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.session && { session: Session.filterSensitiveLog(obj.session) }),\n    });\n})(ExecuteCommandResponse = exports.ExecuteCommandResponse || (exports.ExecuteCommandResponse = {}));\nvar TargetNotConnectedException;\n(function (TargetNotConnectedException) {\n    /**\n     * @internal\n     */\n    TargetNotConnectedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TargetNotConnectedException = exports.TargetNotConnectedException || (exports.TargetNotConnectedException = {}));\nvar ListAccountSettingsRequest;\n(function (ListAccountSettingsRequest) {\n    /**\n     * @internal\n     */\n    ListAccountSettingsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountSettingsRequest = exports.ListAccountSettingsRequest || (exports.ListAccountSettingsRequest = {}));\nvar ListAccountSettingsResponse;\n(function (ListAccountSettingsResponse) {\n    /**\n     * @internal\n     */\n    ListAccountSettingsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountSettingsResponse = exports.ListAccountSettingsResponse || (exports.ListAccountSettingsResponse = {}));\nvar ListAttributesRequest;\n(function (ListAttributesRequest) {\n    /**\n     * @internal\n     */\n    ListAttributesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAttributesRequest = exports.ListAttributesRequest || (exports.ListAttributesRequest = {}));\nvar ListAttributesResponse;\n(function (ListAttributesResponse) {\n    /**\n     * @internal\n     */\n    ListAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAttributesResponse = exports.ListAttributesResponse || (exports.ListAttributesResponse = {}));\nvar ListClustersRequest;\n(function (ListClustersRequest) {\n    /**\n     * @internal\n     */\n    ListClustersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListClustersRequest = exports.ListClustersRequest || (exports.ListClustersRequest = {}));\nvar ListClustersResponse;\n(function (ListClustersResponse) {\n    /**\n     * @internal\n     */\n    ListClustersResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListClustersResponse = exports.ListClustersResponse || (exports.ListClustersResponse = {}));\nvar ContainerInstanceStatus;\n(function (ContainerInstanceStatus) {\n    ContainerInstanceStatus[\"ACTIVE\"] = \"ACTIVE\";\n    ContainerInstanceStatus[\"DEREGISTERING\"] = \"DEREGISTERING\";\n    ContainerInstanceStatus[\"DRAINING\"] = \"DRAINING\";\n    ContainerInstanceStatus[\"REGISTERING\"] = \"REGISTERING\";\n    ContainerInstanceStatus[\"REGISTRATION_FAILED\"] = \"REGISTRATION_FAILED\";\n})(ContainerInstanceStatus = exports.ContainerInstanceStatus || (exports.ContainerInstanceStatus = {}));\nvar ListContainerInstancesRequest;\n(function (ListContainerInstancesRequest) {\n    /**\n     * @internal\n     */\n    ListContainerInstancesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListContainerInstancesRequest = exports.ListContainerInstancesRequest || (exports.ListContainerInstancesRequest = {}));\nvar ListContainerInstancesResponse;\n(function (ListContainerInstancesResponse) {\n    /**\n     * @internal\n     */\n    ListContainerInstancesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListContainerInstancesResponse = exports.ListContainerInstancesResponse || (exports.ListContainerInstancesResponse = {}));\nvar ListServicesRequest;\n(function (ListServicesRequest) {\n    /**\n     * @internal\n     */\n    ListServicesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListServicesRequest = exports.ListServicesRequest || (exports.ListServicesRequest = {}));\nvar ListServicesResponse;\n(function (ListServicesResponse) {\n    /**\n     * @internal\n     */\n    ListServicesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListServicesResponse = exports.ListServicesResponse || (exports.ListServicesResponse = {}));\nvar ListTagsForResourceRequest;\n(function (ListTagsForResourceRequest) {\n    /**\n     * @internal\n     */\n    ListTagsForResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsForResourceRequest = exports.ListTagsForResourceRequest || (exports.ListTagsForResourceRequest = {}));\nvar ListTagsForResourceResponse;\n(function (ListTagsForResourceResponse) {\n    /**\n     * @internal\n     */\n    ListTagsForResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsForResourceResponse = exports.ListTagsForResourceResponse || (exports.ListTagsForResourceResponse = {}));\nvar TaskDefinitionFamilyStatus;\n(function (TaskDefinitionFamilyStatus) {\n    TaskDefinitionFamilyStatus[\"ACTIVE\"] = \"ACTIVE\";\n    TaskDefinitionFamilyStatus[\"ALL\"] = \"ALL\";\n    TaskDefinitionFamilyStatus[\"INACTIVE\"] = \"INACTIVE\";\n})(TaskDefinitionFamilyStatus = exports.TaskDefinitionFamilyStatus || (exports.TaskDefinitionFamilyStatus = {}));\nvar ListTaskDefinitionFamiliesRequest;\n(function (ListTaskDefinitionFamiliesRequest) {\n    /**\n     * @internal\n     */\n    ListTaskDefinitionFamiliesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTaskDefinitionFamiliesRequest = exports.ListTaskDefinitionFamiliesRequest || (exports.ListTaskDefinitionFamiliesRequest = {}));\nvar ListTaskDefinitionFamiliesResponse;\n(function (ListTaskDefinitionFamiliesResponse) {\n    /**\n     * @internal\n     */\n    ListTaskDefinitionFamiliesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTaskDefinitionFamiliesResponse = exports.ListTaskDefinitionFamiliesResponse || (exports.ListTaskDefinitionFamiliesResponse = {}));\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\nvar ListTaskDefinitionsRequest;\n(function (ListTaskDefinitionsRequest) {\n    /**\n     * @internal\n     */\n    ListTaskDefinitionsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTaskDefinitionsRequest = exports.ListTaskDefinitionsRequest || (exports.ListTaskDefinitionsRequest = {}));\nvar ListTaskDefinitionsResponse;\n(function (ListTaskDefinitionsResponse) {\n    /**\n     * @internal\n     */\n    ListTaskDefinitionsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTaskDefinitionsResponse = exports.ListTaskDefinitionsResponse || (exports.ListTaskDefinitionsResponse = {}));\nvar DesiredStatus;\n(function (DesiredStatus) {\n    DesiredStatus[\"PENDING\"] = \"PENDING\";\n    DesiredStatus[\"RUNNING\"] = \"RUNNING\";\n    DesiredStatus[\"STOPPED\"] = \"STOPPED\";\n})(DesiredStatus = exports.DesiredStatus || (exports.DesiredStatus = {}));\nvar ListTasksRequest;\n(function (ListTasksRequest) {\n    /**\n     * @internal\n     */\n    ListTasksRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTasksRequest = exports.ListTasksRequest || (exports.ListTasksRequest = {}));\nvar ListTasksResponse;\n(function (ListTasksResponse) {\n    /**\n     * @internal\n     */\n    ListTasksResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTasksResponse = exports.ListTasksResponse || (exports.ListTasksResponse = {}));\nvar PutAccountSettingRequest;\n(function (PutAccountSettingRequest) {\n    /**\n     * @internal\n     */\n    PutAccountSettingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAccountSettingRequest = exports.PutAccountSettingRequest || (exports.PutAccountSettingRequest = {}));\nvar PutAccountSettingResponse;\n(function (PutAccountSettingResponse) {\n    /**\n     * @internal\n     */\n    PutAccountSettingResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAccountSettingResponse = exports.PutAccountSettingResponse || (exports.PutAccountSettingResponse = {}));\nvar PutAccountSettingDefaultRequest;\n(function (PutAccountSettingDefaultRequest) {\n    /**\n     * @internal\n     */\n    PutAccountSettingDefaultRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAccountSettingDefaultRequest = exports.PutAccountSettingDefaultRequest || (exports.PutAccountSettingDefaultRequest = {}));\nvar PutAccountSettingDefaultResponse;\n(function (PutAccountSettingDefaultResponse) {\n    /**\n     * @internal\n     */\n    PutAccountSettingDefaultResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAccountSettingDefaultResponse = exports.PutAccountSettingDefaultResponse || (exports.PutAccountSettingDefaultResponse = {}));\nvar AttributeLimitExceededException;\n(function (AttributeLimitExceededException) {\n    /**\n     * @internal\n     */\n    AttributeLimitExceededException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AttributeLimitExceededException = exports.AttributeLimitExceededException || (exports.AttributeLimitExceededException = {}));\nvar PutAttributesRequest;\n(function (PutAttributesRequest) {\n    /**\n     * @internal\n     */\n    PutAttributesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAttributesRequest = exports.PutAttributesRequest || (exports.PutAttributesRequest = {}));\nvar PutAttributesResponse;\n(function (PutAttributesResponse) {\n    /**\n     * @internal\n     */\n    PutAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutAttributesResponse = exports.PutAttributesResponse || (exports.PutAttributesResponse = {}));\nvar PutClusterCapacityProvidersRequest;\n(function (PutClusterCapacityProvidersRequest) {\n    /**\n     * @internal\n     */\n    PutClusterCapacityProvidersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutClusterCapacityProvidersRequest = exports.PutClusterCapacityProvidersRequest || (exports.PutClusterCapacityProvidersRequest = {}));\nvar PutClusterCapacityProvidersResponse;\n(function (PutClusterCapacityProvidersResponse) {\n    /**\n     * @internal\n     */\n    PutClusterCapacityProvidersResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutClusterCapacityProvidersResponse = exports.PutClusterCapacityProvidersResponse || (exports.PutClusterCapacityProvidersResponse = {}));\nvar ResourceInUseException;\n(function (ResourceInUseException) {\n    /**\n     * @internal\n     */\n    ResourceInUseException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceInUseException = exports.ResourceInUseException || (exports.ResourceInUseException = {}));\nvar PlatformDeviceType;\n(function (PlatformDeviceType) {\n    PlatformDeviceType[\"GPU\"] = \"GPU\";\n})(PlatformDeviceType = exports.PlatformDeviceType || (exports.PlatformDeviceType = {}));\nvar PlatformDevice;\n(function (PlatformDevice) {\n    /**\n     * @internal\n     */\n    PlatformDevice.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlatformDevice = exports.PlatformDevice || (exports.PlatformDevice = {}));\nvar RegisterContainerInstanceRequest;\n(function (RegisterContainerInstanceRequest) {\n    /**\n     * @internal\n     */\n    RegisterContainerInstanceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterContainerInstanceRequest = exports.RegisterContainerInstanceRequest || (exports.RegisterContainerInstanceRequest = {}));\nvar RegisterContainerInstanceResponse;\n(function (RegisterContainerInstanceResponse) {\n    /**\n     * @internal\n     */\n    RegisterContainerInstanceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterContainerInstanceResponse = exports.RegisterContainerInstanceResponse || (exports.RegisterContainerInstanceResponse = {}));\nvar RegisterTaskDefinitionRequest;\n(function (RegisterTaskDefinitionRequest) {\n    /**\n     * @internal\n     */\n    RegisterTaskDefinitionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterTaskDefinitionRequest = exports.RegisterTaskDefinitionRequest || (exports.RegisterTaskDefinitionRequest = {}));\nvar RegisterTaskDefinitionResponse;\n(function (RegisterTaskDefinitionResponse) {\n    /**\n     * @internal\n     */\n    RegisterTaskDefinitionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterTaskDefinitionResponse = exports.RegisterTaskDefinitionResponse || (exports.RegisterTaskDefinitionResponse = {}));\nvar BlockedException;\n(function (BlockedException) {\n    /**\n     * @internal\n     */\n    BlockedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(BlockedException = exports.BlockedException || (exports.BlockedException = {}));\nvar RunTaskRequest;\n(function (RunTaskRequest) {\n    /**\n     * @internal\n     */\n    RunTaskRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RunTaskRequest = exports.RunTaskRequest || (exports.RunTaskRequest = {}));\nvar RunTaskResponse;\n(function (RunTaskResponse) {\n    /**\n     * @internal\n     */\n    RunTaskResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RunTaskResponse = exports.RunTaskResponse || (exports.RunTaskResponse = {}));\nvar StartTaskRequest;\n(function (StartTaskRequest) {\n    /**\n     * @internal\n     */\n    StartTaskRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StartTaskRequest = exports.StartTaskRequest || (exports.StartTaskRequest = {}));\nvar StartTaskResponse;\n(function (StartTaskResponse) {\n    /**\n     * @internal\n     */\n    StartTaskResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StartTaskResponse = exports.StartTaskResponse || (exports.StartTaskResponse = {}));\nvar StopTaskRequest;\n(function (StopTaskRequest) {\n    /**\n     * @internal\n     */\n    StopTaskRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StopTaskRequest = exports.StopTaskRequest || (exports.StopTaskRequest = {}));\nvar StopTaskResponse;\n(function (StopTaskResponse) {\n    /**\n     * @internal\n     */\n    StopTaskResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StopTaskResponse = exports.StopTaskResponse || (exports.StopTaskResponse = {}));\nvar AttachmentStateChange;\n(function (AttachmentStateChange) {\n    /**\n     * @internal\n     */\n    AttachmentStateChange.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AttachmentStateChange = exports.AttachmentStateChange || (exports.AttachmentStateChange = {}));\nvar SubmitAttachmentStateChangesRequest;\n(function (SubmitAttachmentStateChangesRequest) {\n    /**\n     * @internal\n     */\n    SubmitAttachmentStateChangesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitAttachmentStateChangesRequest = exports.SubmitAttachmentStateChangesRequest || (exports.SubmitAttachmentStateChangesRequest = {}));\nvar SubmitAttachmentStateChangesResponse;\n(function (SubmitAttachmentStateChangesResponse) {\n    /**\n     * @internal\n     */\n    SubmitAttachmentStateChangesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitAttachmentStateChangesResponse = exports.SubmitAttachmentStateChangesResponse || (exports.SubmitAttachmentStateChangesResponse = {}));\nvar SubmitContainerStateChangeRequest;\n(function (SubmitContainerStateChangeRequest) {\n    /**\n     * @internal\n     */\n    SubmitContainerStateChangeRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitContainerStateChangeRequest = exports.SubmitContainerStateChangeRequest || (exports.SubmitContainerStateChangeRequest = {}));\nvar SubmitContainerStateChangeResponse;\n(function (SubmitContainerStateChangeResponse) {\n    /**\n     * @internal\n     */\n    SubmitContainerStateChangeResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitContainerStateChangeResponse = exports.SubmitContainerStateChangeResponse || (exports.SubmitContainerStateChangeResponse = {}));\nvar ContainerStateChange;\n(function (ContainerStateChange) {\n    /**\n     * @internal\n     */\n    ContainerStateChange.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContainerStateChange = exports.ContainerStateChange || (exports.ContainerStateChange = {}));\nvar ManagedAgentStateChange;\n(function (ManagedAgentStateChange) {\n    /**\n     * @internal\n     */\n    ManagedAgentStateChange.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ManagedAgentStateChange = exports.ManagedAgentStateChange || (exports.ManagedAgentStateChange = {}));\nvar SubmitTaskStateChangeRequest;\n(function (SubmitTaskStateChangeRequest) {\n    /**\n     * @internal\n     */\n    SubmitTaskStateChangeRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitTaskStateChangeRequest = exports.SubmitTaskStateChangeRequest || (exports.SubmitTaskStateChangeRequest = {}));\nvar SubmitTaskStateChangeResponse;\n(function (SubmitTaskStateChangeResponse) {\n    /**\n     * @internal\n     */\n    SubmitTaskStateChangeResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubmitTaskStateChangeResponse = exports.SubmitTaskStateChangeResponse || (exports.SubmitTaskStateChangeResponse = {}));\nvar ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n    /**\n     * @internal\n     */\n    ResourceNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceNotFoundException = exports.ResourceNotFoundException || (exports.ResourceNotFoundException = {}));\nvar TagResourceRequest;\n(function (TagResourceRequest) {\n    /**\n     * @internal\n     */\n    TagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TagResourceRequest = exports.TagResourceRequest || (exports.TagResourceRequest = {}));\nvar TagResourceResponse;\n(function (TagResourceResponse) {\n    /**\n     * @internal\n     */\n    TagResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TagResourceResponse = exports.TagResourceResponse || (exports.TagResourceResponse = {}));\nvar UntagResourceRequest;\n(function (UntagResourceRequest) {\n    /**\n     * @internal\n     */\n    UntagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UntagResourceRequest = exports.UntagResourceRequest || (exports.UntagResourceRequest = {}));\nvar UntagResourceResponse;\n(function (UntagResourceResponse) {\n    /**\n     * @internal\n     */\n    UntagResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UntagResourceResponse = exports.UntagResourceResponse || (exports.UntagResourceResponse = {}));\nvar AutoScalingGroupProviderUpdate;\n(function (AutoScalingGroupProviderUpdate) {\n    /**\n     * @internal\n     */\n    AutoScalingGroupProviderUpdate.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AutoScalingGroupProviderUpdate = exports.AutoScalingGroupProviderUpdate || (exports.AutoScalingGroupProviderUpdate = {}));\nvar UpdateCapacityProviderRequest;\n(function (UpdateCapacityProviderRequest) {\n    /**\n     * @internal\n     */\n    UpdateCapacityProviderRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateCapacityProviderRequest = exports.UpdateCapacityProviderRequest || (exports.UpdateCapacityProviderRequest = {}));\nvar UpdateCapacityProviderResponse;\n(function (UpdateCapacityProviderResponse) {\n    /**\n     * @internal\n     */\n    UpdateCapacityProviderResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateCapacityProviderResponse = exports.UpdateCapacityProviderResponse || (exports.UpdateCapacityProviderResponse = {}));\nvar UpdateClusterRequest;\n(function (UpdateClusterRequest) {\n    /**\n     * @internal\n     */\n    UpdateClusterRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateClusterRequest = exports.UpdateClusterRequest || (exports.UpdateClusterRequest = {}));\nvar UpdateClusterResponse;\n(function (UpdateClusterResponse) {\n    /**\n     * @internal\n     */\n    UpdateClusterResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateClusterResponse = exports.UpdateClusterResponse || (exports.UpdateClusterResponse = {}));\nvar UpdateClusterSettingsRequest;\n(function (UpdateClusterSettingsRequest) {\n    /**\n     * @internal\n     */\n    UpdateClusterSettingsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateClusterSettingsRequest = exports.UpdateClusterSettingsRequest || (exports.UpdateClusterSettingsRequest = {}));\nvar UpdateClusterSettingsResponse;\n(function (UpdateClusterSettingsResponse) {\n    /**\n     * @internal\n     */\n    UpdateClusterSettingsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateClusterSettingsResponse = exports.UpdateClusterSettingsResponse || (exports.UpdateClusterSettingsResponse = {}));\nvar MissingVersionException;\n(function (MissingVersionException) {\n    /**\n     * @internal\n     */\n    MissingVersionException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(MissingVersionException = exports.MissingVersionException || (exports.MissingVersionException = {}));\nvar NoUpdateAvailableException;\n(function (NoUpdateAvailableException) {\n    /**\n     * @internal\n     */\n    NoUpdateAvailableException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(NoUpdateAvailableException = exports.NoUpdateAvailableException || (exports.NoUpdateAvailableException = {}));\nvar UpdateContainerAgentRequest;\n(function (UpdateContainerAgentRequest) {\n    /**\n     * @internal\n     */\n    UpdateContainerAgentRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateContainerAgentRequest = exports.UpdateContainerAgentRequest || (exports.UpdateContainerAgentRequest = {}));\nvar UpdateContainerAgentResponse;\n(function (UpdateContainerAgentResponse) {\n    /**\n     * @internal\n     */\n    UpdateContainerAgentResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateContainerAgentResponse = exports.UpdateContainerAgentResponse || (exports.UpdateContainerAgentResponse = {}));\nvar UpdateContainerInstancesStateRequest;\n(function (UpdateContainerInstancesStateRequest) {\n    /**\n     * @internal\n     */\n    UpdateContainerInstancesStateRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateContainerInstancesStateRequest = exports.UpdateContainerInstancesStateRequest || (exports.UpdateContainerInstancesStateRequest = {}));\nvar UpdateContainerInstancesStateResponse;\n(function (UpdateContainerInstancesStateResponse) {\n    /**\n     * @internal\n     */\n    UpdateContainerInstancesStateResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateContainerInstancesStateResponse = exports.UpdateContainerInstancesStateResponse || (exports.UpdateContainerInstancesStateResponse = {}));\nvar UpdateServiceRequest;\n(function (UpdateServiceRequest) {\n    /**\n     * @internal\n     */\n    UpdateServiceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateServiceRequest = exports.UpdateServiceRequest || (exports.UpdateServiceRequest = {}));\nvar UpdateServiceResponse;\n(function (UpdateServiceResponse) {\n    /**\n     * @internal\n     */\n    UpdateServiceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateServiceResponse = exports.UpdateServiceResponse || (exports.UpdateServiceResponse = {}));\nvar UpdateServicePrimaryTaskSetRequest;\n(function (UpdateServicePrimaryTaskSetRequest) {\n    /**\n     * @internal\n     */\n    UpdateServicePrimaryTaskSetRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateServicePrimaryTaskSetRequest = exports.UpdateServicePrimaryTaskSetRequest || (exports.UpdateServicePrimaryTaskSetRequest = {}));\nvar UpdateServicePrimaryTaskSetResponse;\n(function (UpdateServicePrimaryTaskSetResponse) {\n    /**\n     * @internal\n     */\n    UpdateServicePrimaryTaskSetResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateServicePrimaryTaskSetResponse = exports.UpdateServicePrimaryTaskSetResponse || (exports.UpdateServicePrimaryTaskSetResponse = {}));\nvar UpdateTaskSetRequest;\n(function (UpdateTaskSetRequest) {\n    /**\n     * @internal\n     */\n    UpdateTaskSetRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateTaskSetRequest = exports.UpdateTaskSetRequest || (exports.UpdateTaskSetRequest = {}));\nvar UpdateTaskSetResponse;\n(function (UpdateTaskSetResponse) {\n    /**\n     * @internal\n     */\n    UpdateTaskSetResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateTaskSetResponse = exports.UpdateTaskSetResponse || (exports.UpdateTaskSetResponse = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountSettings = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListAccountSettingsCommand_1 = require(\"../commands/ListAccountSettingsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAccountSettingsCommand_1.ListAccountSettingsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAccountSettings(input, ...args);\n};\nasync function* paginateListAccountSettings(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAccountSettings = paginateListAccountSettings;\n//# sourceMappingURL=ListAccountSettingsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAttributes = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListAttributesCommand_1 = require(\"../commands/ListAttributesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAttributesCommand_1.ListAttributesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAttributes(input, ...args);\n};\nasync function* paginateListAttributes(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAttributes = paginateListAttributes;\n//# sourceMappingURL=ListAttributesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListClusters = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListClustersCommand_1 = require(\"../commands/ListClustersCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListClustersCommand_1.ListClustersCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listClusters(input, ...args);\n};\nasync function* paginateListClusters(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListClusters = paginateListClusters;\n//# sourceMappingURL=ListClustersPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListContainerInstances = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListContainerInstancesCommand_1 = require(\"../commands/ListContainerInstancesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListContainerInstancesCommand_1.ListContainerInstancesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listContainerInstances(input, ...args);\n};\nasync function* paginateListContainerInstances(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListContainerInstances = paginateListContainerInstances;\n//# sourceMappingURL=ListContainerInstancesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListServices = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListServicesCommand_1 = require(\"../commands/ListServicesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListServicesCommand_1.ListServicesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listServices(input, ...args);\n};\nasync function* paginateListServices(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListServices = paginateListServices;\n//# sourceMappingURL=ListServicesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTaskDefinitionFamilies = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListTaskDefinitionFamiliesCommand_1 = require(\"../commands/ListTaskDefinitionFamiliesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListTaskDefinitionFamiliesCommand_1.ListTaskDefinitionFamiliesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listTaskDefinitionFamilies(input, ...args);\n};\nasync function* paginateListTaskDefinitionFamilies(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListTaskDefinitionFamilies = paginateListTaskDefinitionFamilies;\n//# sourceMappingURL=ListTaskDefinitionFamiliesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTaskDefinitions = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListTaskDefinitionsCommand_1 = require(\"../commands/ListTaskDefinitionsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListTaskDefinitionsCommand_1.ListTaskDefinitionsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listTaskDefinitions(input, ...args);\n};\nasync function* paginateListTaskDefinitions(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListTaskDefinitions = paginateListTaskDefinitions;\n//# sourceMappingURL=ListTaskDefinitionsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTasks = void 0;\nconst ECS_1 = require(\"../ECS\");\nconst ECSClient_1 = require(\"../ECSClient\");\nconst ListTasksCommand_1 = require(\"../commands/ListTasksCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListTasksCommand_1.ListTasksCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listTasks(input, ...args);\n};\nasync function* paginateListTasks(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof ECS_1.ECS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ECSClient_1.ECSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ECS | ECSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListTasks = paginateListTasks;\n//# sourceMappingURL=ListTasksPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeAws_json1_1UpdateServiceCommand = exports.serializeAws_json1_1UpdateContainerInstancesStateCommand = exports.serializeAws_json1_1UpdateContainerAgentCommand = exports.serializeAws_json1_1UpdateClusterSettingsCommand = exports.serializeAws_json1_1UpdateClusterCommand = exports.serializeAws_json1_1UpdateCapacityProviderCommand = exports.serializeAws_json1_1UntagResourceCommand = exports.serializeAws_json1_1TagResourceCommand = exports.serializeAws_json1_1SubmitTaskStateChangeCommand = exports.serializeAws_json1_1SubmitContainerStateChangeCommand = exports.serializeAws_json1_1SubmitAttachmentStateChangesCommand = exports.serializeAws_json1_1StopTaskCommand = exports.serializeAws_json1_1StartTaskCommand = exports.serializeAws_json1_1RunTaskCommand = exports.serializeAws_json1_1RegisterTaskDefinitionCommand = exports.serializeAws_json1_1RegisterContainerInstanceCommand = exports.serializeAws_json1_1PutClusterCapacityProvidersCommand = exports.serializeAws_json1_1PutAttributesCommand = exports.serializeAws_json1_1PutAccountSettingDefaultCommand = exports.serializeAws_json1_1PutAccountSettingCommand = exports.serializeAws_json1_1ListTasksCommand = exports.serializeAws_json1_1ListTaskDefinitionsCommand = exports.serializeAws_json1_1ListTaskDefinitionFamiliesCommand = exports.serializeAws_json1_1ListTagsForResourceCommand = exports.serializeAws_json1_1ListServicesCommand = exports.serializeAws_json1_1ListContainerInstancesCommand = exports.serializeAws_json1_1ListClustersCommand = exports.serializeAws_json1_1ListAttributesCommand = exports.serializeAws_json1_1ListAccountSettingsCommand = exports.serializeAws_json1_1ExecuteCommandCommand = exports.serializeAws_json1_1DiscoverPollEndpointCommand = exports.serializeAws_json1_1DescribeTaskSetsCommand = exports.serializeAws_json1_1DescribeTasksCommand = exports.serializeAws_json1_1DescribeTaskDefinitionCommand = exports.serializeAws_json1_1DescribeServicesCommand = exports.serializeAws_json1_1DescribeContainerInstancesCommand = exports.serializeAws_json1_1DescribeClustersCommand = exports.serializeAws_json1_1DescribeCapacityProvidersCommand = exports.serializeAws_json1_1DeregisterTaskDefinitionCommand = exports.serializeAws_json1_1DeregisterContainerInstanceCommand = exports.serializeAws_json1_1DeleteTaskSetCommand = exports.serializeAws_json1_1DeleteServiceCommand = exports.serializeAws_json1_1DeleteClusterCommand = exports.serializeAws_json1_1DeleteCapacityProviderCommand = exports.serializeAws_json1_1DeleteAttributesCommand = exports.serializeAws_json1_1DeleteAccountSettingCommand = exports.serializeAws_json1_1CreateTaskSetCommand = exports.serializeAws_json1_1CreateServiceCommand = exports.serializeAws_json1_1CreateClusterCommand = exports.serializeAws_json1_1CreateCapacityProviderCommand = void 0;\nexports.deserializeAws_json1_1UpdateContainerAgentCommand = exports.deserializeAws_json1_1UpdateClusterSettingsCommand = exports.deserializeAws_json1_1UpdateClusterCommand = exports.deserializeAws_json1_1UpdateCapacityProviderCommand = exports.deserializeAws_json1_1UntagResourceCommand = exports.deserializeAws_json1_1TagResourceCommand = exports.deserializeAws_json1_1SubmitTaskStateChangeCommand = exports.deserializeAws_json1_1SubmitContainerStateChangeCommand = exports.deserializeAws_json1_1SubmitAttachmentStateChangesCommand = exports.deserializeAws_json1_1StopTaskCommand = exports.deserializeAws_json1_1StartTaskCommand = exports.deserializeAws_json1_1RunTaskCommand = exports.deserializeAws_json1_1RegisterTaskDefinitionCommand = exports.deserializeAws_json1_1RegisterContainerInstanceCommand = exports.deserializeAws_json1_1PutClusterCapacityProvidersCommand = exports.deserializeAws_json1_1PutAttributesCommand = exports.deserializeAws_json1_1PutAccountSettingDefaultCommand = exports.deserializeAws_json1_1PutAccountSettingCommand = exports.deserializeAws_json1_1ListTasksCommand = exports.deserializeAws_json1_1ListTaskDefinitionsCommand = exports.deserializeAws_json1_1ListTaskDefinitionFamiliesCommand = exports.deserializeAws_json1_1ListTagsForResourceCommand = exports.deserializeAws_json1_1ListServicesCommand = exports.deserializeAws_json1_1ListContainerInstancesCommand = exports.deserializeAws_json1_1ListClustersCommand = exports.deserializeAws_json1_1ListAttributesCommand = exports.deserializeAws_json1_1ListAccountSettingsCommand = exports.deserializeAws_json1_1ExecuteCommandCommand = exports.deserializeAws_json1_1DiscoverPollEndpointCommand = exports.deserializeAws_json1_1DescribeTaskSetsCommand = exports.deserializeAws_json1_1DescribeTasksCommand = exports.deserializeAws_json1_1DescribeTaskDefinitionCommand = exports.deserializeAws_json1_1DescribeServicesCommand = exports.deserializeAws_json1_1DescribeContainerInstancesCommand = exports.deserializeAws_json1_1DescribeClustersCommand = exports.deserializeAws_json1_1DescribeCapacityProvidersCommand = exports.deserializeAws_json1_1DeregisterTaskDefinitionCommand = exports.deserializeAws_json1_1DeregisterContainerInstanceCommand = exports.deserializeAws_json1_1DeleteTaskSetCommand = exports.deserializeAws_json1_1DeleteServiceCommand = exports.deserializeAws_json1_1DeleteClusterCommand = exports.deserializeAws_json1_1DeleteCapacityProviderCommand = exports.deserializeAws_json1_1DeleteAttributesCommand = exports.deserializeAws_json1_1DeleteAccountSettingCommand = exports.deserializeAws_json1_1CreateTaskSetCommand = exports.deserializeAws_json1_1CreateServiceCommand = exports.deserializeAws_json1_1CreateClusterCommand = exports.deserializeAws_json1_1CreateCapacityProviderCommand = exports.serializeAws_json1_1UpdateTaskSetCommand = exports.serializeAws_json1_1UpdateServicePrimaryTaskSetCommand = void 0;\nexports.deserializeAws_json1_1UpdateTaskSetCommand = exports.deserializeAws_json1_1UpdateServicePrimaryTaskSetCommand = exports.deserializeAws_json1_1UpdateServiceCommand = exports.deserializeAws_json1_1UpdateContainerInstancesStateCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst serializeAws_json1_1CreateCapacityProviderCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.CreateCapacityProvider\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateCapacityProviderRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1CreateCapacityProviderCommand = serializeAws_json1_1CreateCapacityProviderCommand;\nconst serializeAws_json1_1CreateClusterCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.CreateCluster\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateClusterRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1CreateClusterCommand = serializeAws_json1_1CreateClusterCommand;\nconst serializeAws_json1_1CreateServiceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.CreateService\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateServiceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1CreateServiceCommand = serializeAws_json1_1CreateServiceCommand;\nconst serializeAws_json1_1CreateTaskSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.CreateTaskSet\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateTaskSetRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1CreateTaskSetCommand = serializeAws_json1_1CreateTaskSetCommand;\nconst serializeAws_json1_1DeleteAccountSettingCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteAccountSetting\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteAccountSettingRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteAccountSettingCommand = serializeAws_json1_1DeleteAccountSettingCommand;\nconst serializeAws_json1_1DeleteAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteAttributes\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteAttributesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteAttributesCommand = serializeAws_json1_1DeleteAttributesCommand;\nconst serializeAws_json1_1DeleteCapacityProviderCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteCapacityProvider\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteCapacityProviderRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteCapacityProviderCommand = serializeAws_json1_1DeleteCapacityProviderCommand;\nconst serializeAws_json1_1DeleteClusterCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteCluster\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteClusterRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteClusterCommand = serializeAws_json1_1DeleteClusterCommand;\nconst serializeAws_json1_1DeleteServiceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteService\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteServiceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteServiceCommand = serializeAws_json1_1DeleteServiceCommand;\nconst serializeAws_json1_1DeleteTaskSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeleteTaskSet\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteTaskSetRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeleteTaskSetCommand = serializeAws_json1_1DeleteTaskSetCommand;\nconst serializeAws_json1_1DeregisterContainerInstanceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeregisterContainerInstance\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeregisterContainerInstanceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeregisterContainerInstanceCommand = serializeAws_json1_1DeregisterContainerInstanceCommand;\nconst serializeAws_json1_1DeregisterTaskDefinitionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DeregisterTaskDefinition\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeregisterTaskDefinitionRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DeregisterTaskDefinitionCommand = serializeAws_json1_1DeregisterTaskDefinitionCommand;\nconst serializeAws_json1_1DescribeCapacityProvidersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeCapacityProviders\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeCapacityProvidersRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeCapacityProvidersCommand = serializeAws_json1_1DescribeCapacityProvidersCommand;\nconst serializeAws_json1_1DescribeClustersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeClusters\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeClustersRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeClustersCommand = serializeAws_json1_1DescribeClustersCommand;\nconst serializeAws_json1_1DescribeContainerInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeContainerInstances\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeContainerInstancesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeContainerInstancesCommand = serializeAws_json1_1DescribeContainerInstancesCommand;\nconst serializeAws_json1_1DescribeServicesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeServices\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeServicesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeServicesCommand = serializeAws_json1_1DescribeServicesCommand;\nconst serializeAws_json1_1DescribeTaskDefinitionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeTaskDefinition\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeTaskDefinitionRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeTaskDefinitionCommand = serializeAws_json1_1DescribeTaskDefinitionCommand;\nconst serializeAws_json1_1DescribeTasksCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeTasks\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeTasksRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeTasksCommand = serializeAws_json1_1DescribeTasksCommand;\nconst serializeAws_json1_1DescribeTaskSetsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DescribeTaskSets\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeTaskSetsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DescribeTaskSetsCommand = serializeAws_json1_1DescribeTaskSetsCommand;\nconst serializeAws_json1_1DiscoverPollEndpointCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.DiscoverPollEndpoint\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DiscoverPollEndpointRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1DiscoverPollEndpointCommand = serializeAws_json1_1DiscoverPollEndpointCommand;\nconst serializeAws_json1_1ExecuteCommandCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ExecuteCommand\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ExecuteCommandRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ExecuteCommandCommand = serializeAws_json1_1ExecuteCommandCommand;\nconst serializeAws_json1_1ListAccountSettingsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListAccountSettings\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListAccountSettingsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListAccountSettingsCommand = serializeAws_json1_1ListAccountSettingsCommand;\nconst serializeAws_json1_1ListAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListAttributes\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListAttributesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListAttributesCommand = serializeAws_json1_1ListAttributesCommand;\nconst serializeAws_json1_1ListClustersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListClusters\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListClustersRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListClustersCommand = serializeAws_json1_1ListClustersCommand;\nconst serializeAws_json1_1ListContainerInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListContainerInstances\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListContainerInstancesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListContainerInstancesCommand = serializeAws_json1_1ListContainerInstancesCommand;\nconst serializeAws_json1_1ListServicesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListServices\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListServicesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListServicesCommand = serializeAws_json1_1ListServicesCommand;\nconst serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListTagsForResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTagsForResourceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListTagsForResourceCommand = serializeAws_json1_1ListTagsForResourceCommand;\nconst serializeAws_json1_1ListTaskDefinitionFamiliesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListTaskDefinitionFamilies\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTaskDefinitionFamiliesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListTaskDefinitionFamiliesCommand = serializeAws_json1_1ListTaskDefinitionFamiliesCommand;\nconst serializeAws_json1_1ListTaskDefinitionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListTaskDefinitions\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTaskDefinitionsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListTaskDefinitionsCommand = serializeAws_json1_1ListTaskDefinitionsCommand;\nconst serializeAws_json1_1ListTasksCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.ListTasks\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTasksRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1ListTasksCommand = serializeAws_json1_1ListTasksCommand;\nconst serializeAws_json1_1PutAccountSettingCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.PutAccountSetting\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1PutAccountSettingRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1PutAccountSettingCommand = serializeAws_json1_1PutAccountSettingCommand;\nconst serializeAws_json1_1PutAccountSettingDefaultCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1PutAccountSettingDefaultRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1PutAccountSettingDefaultCommand = serializeAws_json1_1PutAccountSettingDefaultCommand;\nconst serializeAws_json1_1PutAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.PutAttributes\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1PutAttributesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1PutAttributesCommand = serializeAws_json1_1PutAttributesCommand;\nconst serializeAws_json1_1PutClusterCapacityProvidersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.PutClusterCapacityProviders\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1PutClusterCapacityProvidersRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1PutClusterCapacityProvidersCommand = serializeAws_json1_1PutClusterCapacityProvidersCommand;\nconst serializeAws_json1_1RegisterContainerInstanceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.RegisterContainerInstance\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1RegisterContainerInstanceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1RegisterContainerInstanceCommand = serializeAws_json1_1RegisterContainerInstanceCommand;\nconst serializeAws_json1_1RegisterTaskDefinitionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1RegisterTaskDefinitionRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1RegisterTaskDefinitionCommand = serializeAws_json1_1RegisterTaskDefinitionCommand;\nconst serializeAws_json1_1RunTaskCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.RunTask\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1RunTaskRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1RunTaskCommand = serializeAws_json1_1RunTaskCommand;\nconst serializeAws_json1_1StartTaskCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.StartTask\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1StartTaskRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1StartTaskCommand = serializeAws_json1_1StartTaskCommand;\nconst serializeAws_json1_1StopTaskCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.StopTask\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1StopTaskRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1StopTaskCommand = serializeAws_json1_1StopTaskCommand;\nconst serializeAws_json1_1SubmitAttachmentStateChangesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.SubmitAttachmentStateChanges\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SubmitAttachmentStateChangesRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1SubmitAttachmentStateChangesCommand = serializeAws_json1_1SubmitAttachmentStateChangesCommand;\nconst serializeAws_json1_1SubmitContainerStateChangeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.SubmitContainerStateChange\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SubmitContainerStateChangeRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1SubmitContainerStateChangeCommand = serializeAws_json1_1SubmitContainerStateChangeCommand;\nconst serializeAws_json1_1SubmitTaskStateChangeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.SubmitTaskStateChange\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SubmitTaskStateChangeRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1SubmitTaskStateChangeCommand = serializeAws_json1_1SubmitTaskStateChangeCommand;\nconst serializeAws_json1_1TagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.TagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1TagResourceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1TagResourceCommand = serializeAws_json1_1TagResourceCommand;\nconst serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UntagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UntagResourceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UntagResourceCommand = serializeAws_json1_1UntagResourceCommand;\nconst serializeAws_json1_1UpdateCapacityProviderCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateCapacityProvider\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateCapacityProviderRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateCapacityProviderCommand = serializeAws_json1_1UpdateCapacityProviderCommand;\nconst serializeAws_json1_1UpdateClusterCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateCluster\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateClusterRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateClusterCommand = serializeAws_json1_1UpdateClusterCommand;\nconst serializeAws_json1_1UpdateClusterSettingsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateClusterSettings\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateClusterSettingsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateClusterSettingsCommand = serializeAws_json1_1UpdateClusterSettingsCommand;\nconst serializeAws_json1_1UpdateContainerAgentCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateContainerAgent\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateContainerAgentRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateContainerAgentCommand = serializeAws_json1_1UpdateContainerAgentCommand;\nconst serializeAws_json1_1UpdateContainerInstancesStateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateContainerInstancesState\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateContainerInstancesStateRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateContainerInstancesStateCommand = serializeAws_json1_1UpdateContainerInstancesStateCommand;\nconst serializeAws_json1_1UpdateServiceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateService\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateServiceRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateServiceCommand = serializeAws_json1_1UpdateServiceCommand;\nconst serializeAws_json1_1UpdateServicePrimaryTaskSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateServicePrimaryTaskSet\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateServicePrimaryTaskSetRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateServicePrimaryTaskSetCommand = serializeAws_json1_1UpdateServicePrimaryTaskSetCommand;\nconst serializeAws_json1_1UpdateTaskSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AmazonEC2ContainerServiceV20141113.UpdateTaskSet\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UpdateTaskSetRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_json1_1UpdateTaskSetCommand = serializeAws_json1_1UpdateTaskSetCommand;\nconst deserializeAws_json1_1CreateCapacityProviderCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateCapacityProviderCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1CreateCapacityProviderResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1CreateCapacityProviderCommand = deserializeAws_json1_1CreateCapacityProviderCommand;\nconst deserializeAws_json1_1CreateCapacityProviderCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"LimitExceededException\":\n        case \"com.amazonaws.ecs#LimitExceededException\":\n            response = {\n                ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UpdateInProgressException\":\n        case \"com.amazonaws.ecs#UpdateInProgressException\":\n            response = {\n                ...(await deserializeAws_json1_1UpdateInProgressExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1CreateClusterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateClusterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1CreateClusterResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1CreateClusterCommand = deserializeAws_json1_1CreateClusterCommand;\nconst deserializeAws_json1_1CreateClusterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1CreateServiceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateServiceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1CreateServiceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1CreateServiceCommand = deserializeAws_json1_1CreateServiceCommand;\nconst deserializeAws_json1_1CreateServiceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformTaskDefinitionIncompatibilityException\":\n        case \"com.amazonaws.ecs#PlatformTaskDefinitionIncompatibilityException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformUnknownException\":\n        case \"com.amazonaws.ecs#PlatformUnknownException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformUnknownExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1CreateTaskSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateTaskSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1CreateTaskSetResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1CreateTaskSetCommand = deserializeAws_json1_1CreateTaskSetCommand;\nconst deserializeAws_json1_1CreateTaskSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformTaskDefinitionIncompatibilityException\":\n        case \"com.amazonaws.ecs#PlatformTaskDefinitionIncompatibilityException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformUnknownException\":\n        case \"com.amazonaws.ecs#PlatformUnknownException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformUnknownExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteAccountSettingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteAccountSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteAccountSettingResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteAccountSettingCommand = deserializeAws_json1_1DeleteAccountSettingCommand;\nconst deserializeAws_json1_1DeleteAccountSettingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteAttributesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteAttributesCommand = deserializeAws_json1_1DeleteAttributesCommand;\nconst deserializeAws_json1_1DeleteAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TargetNotFoundException\":\n        case \"com.amazonaws.ecs#TargetNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1TargetNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteCapacityProviderCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteCapacityProviderCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteCapacityProviderResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteCapacityProviderCommand = deserializeAws_json1_1DeleteCapacityProviderCommand;\nconst deserializeAws_json1_1DeleteCapacityProviderCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteClusterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteClusterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteClusterResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteClusterCommand = deserializeAws_json1_1DeleteClusterCommand;\nconst deserializeAws_json1_1DeleteClusterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterContainsContainerInstancesException\":\n        case \"com.amazonaws.ecs#ClusterContainsContainerInstancesException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterContainsContainerInstancesExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterContainsServicesException\":\n        case \"com.amazonaws.ecs#ClusterContainsServicesException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterContainsServicesExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterContainsTasksException\":\n        case \"com.amazonaws.ecs#ClusterContainsTasksException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterContainsTasksExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UpdateInProgressException\":\n        case \"com.amazonaws.ecs#UpdateInProgressException\":\n            response = {\n                ...(await deserializeAws_json1_1UpdateInProgressExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteServiceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteServiceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteServiceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteServiceCommand = deserializeAws_json1_1DeleteServiceCommand;\nconst deserializeAws_json1_1DeleteServiceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeleteTaskSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteTaskSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteTaskSetResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeleteTaskSetCommand = deserializeAws_json1_1DeleteTaskSetCommand;\nconst deserializeAws_json1_1DeleteTaskSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TaskSetNotFoundException\":\n        case \"com.amazonaws.ecs#TaskSetNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1TaskSetNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeregisterContainerInstanceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeregisterContainerInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeregisterContainerInstanceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeregisterContainerInstanceCommand = deserializeAws_json1_1DeregisterContainerInstanceCommand;\nconst deserializeAws_json1_1DeregisterContainerInstanceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DeregisterTaskDefinitionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeregisterTaskDefinitionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeregisterTaskDefinitionResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DeregisterTaskDefinitionCommand = deserializeAws_json1_1DeregisterTaskDefinitionCommand;\nconst deserializeAws_json1_1DeregisterTaskDefinitionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeCapacityProvidersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeCapacityProvidersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeCapacityProvidersResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeCapacityProvidersCommand = deserializeAws_json1_1DescribeCapacityProvidersCommand;\nconst deserializeAws_json1_1DescribeCapacityProvidersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeClustersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeClustersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeClustersResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeClustersCommand = deserializeAws_json1_1DescribeClustersCommand;\nconst deserializeAws_json1_1DescribeClustersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeContainerInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeContainerInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeContainerInstancesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeContainerInstancesCommand = deserializeAws_json1_1DescribeContainerInstancesCommand;\nconst deserializeAws_json1_1DescribeContainerInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeServicesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeServicesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeServicesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeServicesCommand = deserializeAws_json1_1DescribeServicesCommand;\nconst deserializeAws_json1_1DescribeServicesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeTaskDefinitionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeTaskDefinitionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeTaskDefinitionResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeTaskDefinitionCommand = deserializeAws_json1_1DescribeTaskDefinitionCommand;\nconst deserializeAws_json1_1DescribeTaskDefinitionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeTasksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeTasksResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeTasksCommand = deserializeAws_json1_1DescribeTasksCommand;\nconst deserializeAws_json1_1DescribeTasksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DescribeTaskSetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeTaskSetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DescribeTaskSetsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DescribeTaskSetsCommand = deserializeAws_json1_1DescribeTaskSetsCommand;\nconst deserializeAws_json1_1DescribeTaskSetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1DiscoverPollEndpointCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DiscoverPollEndpointCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DiscoverPollEndpointResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1DiscoverPollEndpointCommand = deserializeAws_json1_1DiscoverPollEndpointCommand;\nconst deserializeAws_json1_1DiscoverPollEndpointCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ExecuteCommandCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ExecuteCommandCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ExecuteCommandResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ExecuteCommandCommand = deserializeAws_json1_1ExecuteCommandCommand;\nconst deserializeAws_json1_1ExecuteCommandCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TargetNotConnectedException\":\n        case \"com.amazonaws.ecs#TargetNotConnectedException\":\n            response = {\n                ...(await deserializeAws_json1_1TargetNotConnectedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListAccountSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListAccountSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListAccountSettingsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListAccountSettingsCommand = deserializeAws_json1_1ListAccountSettingsCommand;\nconst deserializeAws_json1_1ListAccountSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListAttributesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListAttributesCommand = deserializeAws_json1_1ListAttributesCommand;\nconst deserializeAws_json1_1ListAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListClustersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListClustersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListClustersResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListClustersCommand = deserializeAws_json1_1ListClustersCommand;\nconst deserializeAws_json1_1ListClustersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListContainerInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListContainerInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListContainerInstancesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListContainerInstancesCommand = deserializeAws_json1_1ListContainerInstancesCommand;\nconst deserializeAws_json1_1ListContainerInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListServicesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListServicesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListServicesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListServicesCommand = deserializeAws_json1_1ListServicesCommand;\nconst deserializeAws_json1_1ListServicesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListTagsForResourceCommand = deserializeAws_json1_1ListTagsForResourceCommand;\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListTaskDefinitionFamiliesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTaskDefinitionFamiliesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTaskDefinitionFamiliesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListTaskDefinitionFamiliesCommand = deserializeAws_json1_1ListTaskDefinitionFamiliesCommand;\nconst deserializeAws_json1_1ListTaskDefinitionFamiliesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListTaskDefinitionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTaskDefinitionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTaskDefinitionsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListTaskDefinitionsCommand = deserializeAws_json1_1ListTaskDefinitionsCommand;\nconst deserializeAws_json1_1ListTaskDefinitionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1ListTasksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTasksResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1ListTasksCommand = deserializeAws_json1_1ListTasksCommand;\nconst deserializeAws_json1_1ListTasksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1PutAccountSettingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1PutAccountSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1PutAccountSettingResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1PutAccountSettingCommand = deserializeAws_json1_1PutAccountSettingCommand;\nconst deserializeAws_json1_1PutAccountSettingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1PutAccountSettingDefaultCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1PutAccountSettingDefaultCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1PutAccountSettingDefaultResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1PutAccountSettingDefaultCommand = deserializeAws_json1_1PutAccountSettingDefaultCommand;\nconst deserializeAws_json1_1PutAccountSettingDefaultCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1PutAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1PutAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1PutAttributesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1PutAttributesCommand = deserializeAws_json1_1PutAttributesCommand;\nconst deserializeAws_json1_1PutAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AttributeLimitExceededException\":\n        case \"com.amazonaws.ecs#AttributeLimitExceededException\":\n            response = {\n                ...(await deserializeAws_json1_1AttributeLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TargetNotFoundException\":\n        case \"com.amazonaws.ecs#TargetNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1TargetNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1PutClusterCapacityProvidersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1PutClusterCapacityProvidersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1PutClusterCapacityProvidersResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1PutClusterCapacityProvidersCommand = deserializeAws_json1_1PutClusterCapacityProvidersCommand;\nconst deserializeAws_json1_1PutClusterCapacityProvidersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.ecs#ResourceInUseException\":\n            response = {\n                ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UpdateInProgressException\":\n        case \"com.amazonaws.ecs#UpdateInProgressException\":\n            response = {\n                ...(await deserializeAws_json1_1UpdateInProgressExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1RegisterContainerInstanceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1RegisterContainerInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1RegisterContainerInstanceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1RegisterContainerInstanceCommand = deserializeAws_json1_1RegisterContainerInstanceCommand;\nconst deserializeAws_json1_1RegisterContainerInstanceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1RegisterTaskDefinitionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1RegisterTaskDefinitionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1RegisterTaskDefinitionResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1RegisterTaskDefinitionCommand = deserializeAws_json1_1RegisterTaskDefinitionCommand;\nconst deserializeAws_json1_1RegisterTaskDefinitionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1RunTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1RunTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1RunTaskResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1RunTaskCommand = deserializeAws_json1_1RunTaskCommand;\nconst deserializeAws_json1_1RunTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"BlockedException\":\n        case \"com.amazonaws.ecs#BlockedException\":\n            response = {\n                ...(await deserializeAws_json1_1BlockedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformTaskDefinitionIncompatibilityException\":\n        case \"com.amazonaws.ecs#PlatformTaskDefinitionIncompatibilityException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformUnknownException\":\n        case \"com.amazonaws.ecs#PlatformUnknownException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformUnknownExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1StartTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1StartTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1StartTaskResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1StartTaskCommand = deserializeAws_json1_1StartTaskCommand;\nconst deserializeAws_json1_1StartTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1StopTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1StopTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1StopTaskResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1StopTaskCommand = deserializeAws_json1_1StopTaskCommand;\nconst deserializeAws_json1_1StopTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1SubmitAttachmentStateChangesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SubmitAttachmentStateChangesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1SubmitAttachmentStateChangesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1SubmitAttachmentStateChangesCommand = deserializeAws_json1_1SubmitAttachmentStateChangesCommand;\nconst deserializeAws_json1_1SubmitAttachmentStateChangesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1SubmitContainerStateChangeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SubmitContainerStateChangeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1SubmitContainerStateChangeResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1SubmitContainerStateChangeCommand = deserializeAws_json1_1SubmitContainerStateChangeCommand;\nconst deserializeAws_json1_1SubmitContainerStateChangeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1SubmitTaskStateChangeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SubmitTaskStateChangeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1SubmitTaskStateChangeResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1SubmitTaskStateChangeCommand = deserializeAws_json1_1SubmitTaskStateChangeCommand;\nconst deserializeAws_json1_1SubmitTaskStateChangeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1TagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1TagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1TagResourceCommand = deserializeAws_json1_1TagResourceCommand;\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.ecs#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UntagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UntagResourceCommand = deserializeAws_json1_1UntagResourceCommand;\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.ecs#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateCapacityProviderCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateCapacityProviderCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateCapacityProviderResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateCapacityProviderCommand = deserializeAws_json1_1UpdateCapacityProviderCommand;\nconst deserializeAws_json1_1UpdateCapacityProviderCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateClusterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateClusterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateClusterResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateClusterCommand = deserializeAws_json1_1UpdateClusterCommand;\nconst deserializeAws_json1_1UpdateClusterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateClusterSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateClusterSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateClusterSettingsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateClusterSettingsCommand = deserializeAws_json1_1UpdateClusterSettingsCommand;\nconst deserializeAws_json1_1UpdateClusterSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateContainerAgentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateContainerAgentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateContainerAgentResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateContainerAgentCommand = deserializeAws_json1_1UpdateContainerAgentCommand;\nconst deserializeAws_json1_1UpdateContainerAgentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MissingVersionException\":\n        case \"com.amazonaws.ecs#MissingVersionException\":\n            response = {\n                ...(await deserializeAws_json1_1MissingVersionExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NoUpdateAvailableException\":\n        case \"com.amazonaws.ecs#NoUpdateAvailableException\":\n            response = {\n                ...(await deserializeAws_json1_1NoUpdateAvailableExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UpdateInProgressException\":\n        case \"com.amazonaws.ecs#UpdateInProgressException\":\n            response = {\n                ...(await deserializeAws_json1_1UpdateInProgressExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateContainerInstancesStateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateContainerInstancesStateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateContainerInstancesStateResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateContainerInstancesStateCommand = deserializeAws_json1_1UpdateContainerInstancesStateCommand;\nconst deserializeAws_json1_1UpdateContainerInstancesStateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateServiceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateServiceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateServiceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateServiceCommand = deserializeAws_json1_1UpdateServiceCommand;\nconst deserializeAws_json1_1UpdateServiceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformTaskDefinitionIncompatibilityException\":\n        case \"com.amazonaws.ecs#PlatformTaskDefinitionIncompatibilityException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformUnknownException\":\n        case \"com.amazonaws.ecs#PlatformUnknownException\":\n            response = {\n                ...(await deserializeAws_json1_1PlatformUnknownExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateServicePrimaryTaskSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateServicePrimaryTaskSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateServicePrimaryTaskSetResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateServicePrimaryTaskSetCommand = deserializeAws_json1_1UpdateServicePrimaryTaskSetCommand;\nconst deserializeAws_json1_1UpdateServicePrimaryTaskSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TaskSetNotFoundException\":\n        case \"com.amazonaws.ecs#TaskSetNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1TaskSetNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1UpdateTaskSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateTaskSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UpdateTaskSetResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_json1_1UpdateTaskSetCommand = deserializeAws_json1_1UpdateTaskSetCommand;\nconst deserializeAws_json1_1UpdateTaskSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ecs#AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClientException\":\n        case \"com.amazonaws.ecs#ClientException\":\n            response = {\n                ...(await deserializeAws_json1_1ClientExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ClusterNotFoundException\":\n        case \"com.amazonaws.ecs#ClusterNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ClusterNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.ecs#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServerException\":\n        case \"com.amazonaws.ecs#ServerException\":\n            response = {\n                ...(await deserializeAws_json1_1ServerExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotActiveException\":\n        case \"com.amazonaws.ecs#ServiceNotActiveException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotActiveExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceNotFoundException\":\n        case \"com.amazonaws.ecs#ServiceNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1ServiceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TaskSetNotFoundException\":\n        case \"com.amazonaws.ecs#TaskSetNotFoundException\":\n            response = {\n                ...(await deserializeAws_json1_1TaskSetNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedFeatureException\":\n        case \"com.amazonaws.ecs#UnsupportedFeatureException\":\n            response = {\n                ...(await deserializeAws_json1_1UnsupportedFeatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_json1_1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1AccessDeniedException(body, context);\n    const contents = {\n        name: \"AccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1AttributeLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1AttributeLimitExceededException(body, context);\n    const contents = {\n        name: \"AttributeLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1BlockedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1BlockedException(body, context);\n    const contents = {\n        name: \"BlockedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ClientExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ClientException(body, context);\n    const contents = {\n        name: \"ClientException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ClusterContainsContainerInstancesExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ClusterContainsContainerInstancesException(body, context);\n    const contents = {\n        name: \"ClusterContainsContainerInstancesException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ClusterContainsServicesExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ClusterContainsServicesException(body, context);\n    const contents = {\n        name: \"ClusterContainsServicesException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ClusterContainsTasksExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ClusterContainsTasksException(body, context);\n    const contents = {\n        name: \"ClusterContainsTasksException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ClusterNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ClusterNotFoundException(body, context);\n    const contents = {\n        name: \"ClusterNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n    const contents = {\n        name: \"InvalidParameterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n    const contents = {\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1MissingVersionExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1MissingVersionException(body, context);\n    const contents = {\n        name: \"MissingVersionException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1NoUpdateAvailableExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1NoUpdateAvailableException(body, context);\n    const contents = {\n        name: \"NoUpdateAvailableException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityException(body, context);\n    const contents = {\n        name: \"PlatformTaskDefinitionIncompatibilityException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1PlatformUnknownExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1PlatformUnknownException(body, context);\n    const contents = {\n        name: \"PlatformUnknownException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ResourceInUseExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n    const contents = {\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ServerExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ServerException(body, context);\n    const contents = {\n        name: \"ServerException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ServiceNotActiveExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ServiceNotActiveException(body, context);\n    const contents = {\n        name: \"ServiceNotActiveException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1ServiceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ServiceNotFoundException(body, context);\n    const contents = {\n        name: \"ServiceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1TargetNotConnectedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1TargetNotConnectedException(body, context);\n    const contents = {\n        name: \"TargetNotConnectedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1TargetNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1TargetNotFoundException(body, context);\n    const contents = {\n        name: \"TargetNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1TaskSetNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1TaskSetNotFoundException(body, context);\n    const contents = {\n        name: \"TaskSetNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1UnsupportedFeatureExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1UnsupportedFeatureException(body, context);\n    const contents = {\n        name: \"UnsupportedFeatureException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_json1_1UpdateInProgressExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1UpdateInProgressException(body, context);\n    const contents = {\n        name: \"UpdateInProgressException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst serializeAws_json1_1AttachmentStateChange = (input, context) => {\n    return {\n        ...(input.attachmentArn !== undefined && input.attachmentArn !== null && { attachmentArn: input.attachmentArn }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1AttachmentStateChanges = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1AttachmentStateChange(entry, context);\n    });\n};\nconst serializeAws_json1_1Attribute = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.targetId !== undefined && input.targetId !== null && { targetId: input.targetId }),\n        ...(input.targetType !== undefined && input.targetType !== null && { targetType: input.targetType }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1Attributes = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Attribute(entry, context);\n    });\n};\nconst serializeAws_json1_1AutoScalingGroupProvider = (input, context) => {\n    return {\n        ...(input.autoScalingGroupArn !== undefined &&\n            input.autoScalingGroupArn !== null && { autoScalingGroupArn: input.autoScalingGroupArn }),\n        ...(input.managedScaling !== undefined &&\n            input.managedScaling !== null && {\n            managedScaling: serializeAws_json1_1ManagedScaling(input.managedScaling, context),\n        }),\n        ...(input.managedTerminationProtection !== undefined &&\n            input.managedTerminationProtection !== null && {\n            managedTerminationProtection: input.managedTerminationProtection,\n        }),\n    };\n};\nconst serializeAws_json1_1AutoScalingGroupProviderUpdate = (input, context) => {\n    return {\n        ...(input.managedScaling !== undefined &&\n            input.managedScaling !== null && {\n            managedScaling: serializeAws_json1_1ManagedScaling(input.managedScaling, context),\n        }),\n        ...(input.managedTerminationProtection !== undefined &&\n            input.managedTerminationProtection !== null && {\n            managedTerminationProtection: input.managedTerminationProtection,\n        }),\n    };\n};\nconst serializeAws_json1_1AwsVpcConfiguration = (input, context) => {\n    return {\n        ...(input.assignPublicIp !== undefined &&\n            input.assignPublicIp !== null && { assignPublicIp: input.assignPublicIp }),\n        ...(input.securityGroups !== undefined &&\n            input.securityGroups !== null && {\n            securityGroups: serializeAws_json1_1StringList(input.securityGroups, context),\n        }),\n        ...(input.subnets !== undefined &&\n            input.subnets !== null && { subnets: serializeAws_json1_1StringList(input.subnets, context) }),\n    };\n};\nconst serializeAws_json1_1CapacityProviderFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1CapacityProviderStrategy = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1CapacityProviderStrategyItem(entry, context);\n    });\n};\nconst serializeAws_json1_1CapacityProviderStrategyItem = (input, context) => {\n    return {\n        ...(input.base !== undefined && input.base !== null && { base: input.base }),\n        ...(input.capacityProvider !== undefined &&\n            input.capacityProvider !== null && { capacityProvider: input.capacityProvider }),\n        ...(input.weight !== undefined && input.weight !== null && { weight: input.weight }),\n    };\n};\nconst serializeAws_json1_1ClusterConfiguration = (input, context) => {\n    return {\n        ...(input.executeCommandConfiguration !== undefined &&\n            input.executeCommandConfiguration !== null && {\n            executeCommandConfiguration: serializeAws_json1_1ExecuteCommandConfiguration(input.executeCommandConfiguration, context),\n        }),\n    };\n};\nconst serializeAws_json1_1ClusterFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1ClusterSetting = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1ClusterSettings = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ClusterSetting(entry, context);\n    });\n};\nconst serializeAws_json1_1CompatibilityList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1ContainerDefinition = (input, context) => {\n    return {\n        ...(input.command !== undefined &&\n            input.command !== null && { command: serializeAws_json1_1StringList(input.command, context) }),\n        ...(input.cpu !== undefined && input.cpu !== null && { cpu: input.cpu }),\n        ...(input.dependsOn !== undefined &&\n            input.dependsOn !== null && { dependsOn: serializeAws_json1_1ContainerDependencies(input.dependsOn, context) }),\n        ...(input.disableNetworking !== undefined &&\n            input.disableNetworking !== null && { disableNetworking: input.disableNetworking }),\n        ...(input.dnsSearchDomains !== undefined &&\n            input.dnsSearchDomains !== null && {\n            dnsSearchDomains: serializeAws_json1_1StringList(input.dnsSearchDomains, context),\n        }),\n        ...(input.dnsServers !== undefined &&\n            input.dnsServers !== null && { dnsServers: serializeAws_json1_1StringList(input.dnsServers, context) }),\n        ...(input.dockerLabels !== undefined &&\n            input.dockerLabels !== null && {\n            dockerLabels: serializeAws_json1_1DockerLabelsMap(input.dockerLabels, context),\n        }),\n        ...(input.dockerSecurityOptions !== undefined &&\n            input.dockerSecurityOptions !== null && {\n            dockerSecurityOptions: serializeAws_json1_1StringList(input.dockerSecurityOptions, context),\n        }),\n        ...(input.entryPoint !== undefined &&\n            input.entryPoint !== null && { entryPoint: serializeAws_json1_1StringList(input.entryPoint, context) }),\n        ...(input.environment !== undefined &&\n            input.environment !== null && {\n            environment: serializeAws_json1_1EnvironmentVariables(input.environment, context),\n        }),\n        ...(input.environmentFiles !== undefined &&\n            input.environmentFiles !== null && {\n            environmentFiles: serializeAws_json1_1EnvironmentFiles(input.environmentFiles, context),\n        }),\n        ...(input.essential !== undefined && input.essential !== null && { essential: input.essential }),\n        ...(input.extraHosts !== undefined &&\n            input.extraHosts !== null && { extraHosts: serializeAws_json1_1HostEntryList(input.extraHosts, context) }),\n        ...(input.firelensConfiguration !== undefined &&\n            input.firelensConfiguration !== null && {\n            firelensConfiguration: serializeAws_json1_1FirelensConfiguration(input.firelensConfiguration, context),\n        }),\n        ...(input.healthCheck !== undefined &&\n            input.healthCheck !== null && { healthCheck: serializeAws_json1_1HealthCheck(input.healthCheck, context) }),\n        ...(input.hostname !== undefined && input.hostname !== null && { hostname: input.hostname }),\n        ...(input.image !== undefined && input.image !== null && { image: input.image }),\n        ...(input.interactive !== undefined && input.interactive !== null && { interactive: input.interactive }),\n        ...(input.links !== undefined &&\n            input.links !== null && { links: serializeAws_json1_1StringList(input.links, context) }),\n        ...(input.linuxParameters !== undefined &&\n            input.linuxParameters !== null && {\n            linuxParameters: serializeAws_json1_1LinuxParameters(input.linuxParameters, context),\n        }),\n        ...(input.logConfiguration !== undefined &&\n            input.logConfiguration !== null && {\n            logConfiguration: serializeAws_json1_1LogConfiguration(input.logConfiguration, context),\n        }),\n        ...(input.memory !== undefined && input.memory !== null && { memory: input.memory }),\n        ...(input.memoryReservation !== undefined &&\n            input.memoryReservation !== null && { memoryReservation: input.memoryReservation }),\n        ...(input.mountPoints !== undefined &&\n            input.mountPoints !== null && { mountPoints: serializeAws_json1_1MountPointList(input.mountPoints, context) }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.portMappings !== undefined &&\n            input.portMappings !== null && {\n            portMappings: serializeAws_json1_1PortMappingList(input.portMappings, context),\n        }),\n        ...(input.privileged !== undefined && input.privileged !== null && { privileged: input.privileged }),\n        ...(input.pseudoTerminal !== undefined &&\n            input.pseudoTerminal !== null && { pseudoTerminal: input.pseudoTerminal }),\n        ...(input.readonlyRootFilesystem !== undefined &&\n            input.readonlyRootFilesystem !== null && { readonlyRootFilesystem: input.readonlyRootFilesystem }),\n        ...(input.repositoryCredentials !== undefined &&\n            input.repositoryCredentials !== null && {\n            repositoryCredentials: serializeAws_json1_1RepositoryCredentials(input.repositoryCredentials, context),\n        }),\n        ...(input.resourceRequirements !== undefined &&\n            input.resourceRequirements !== null && {\n            resourceRequirements: serializeAws_json1_1ResourceRequirements(input.resourceRequirements, context),\n        }),\n        ...(input.secrets !== undefined &&\n            input.secrets !== null && { secrets: serializeAws_json1_1SecretList(input.secrets, context) }),\n        ...(input.startTimeout !== undefined && input.startTimeout !== null && { startTimeout: input.startTimeout }),\n        ...(input.stopTimeout !== undefined && input.stopTimeout !== null && { stopTimeout: input.stopTimeout }),\n        ...(input.systemControls !== undefined &&\n            input.systemControls !== null && {\n            systemControls: serializeAws_json1_1SystemControls(input.systemControls, context),\n        }),\n        ...(input.ulimits !== undefined &&\n            input.ulimits !== null && { ulimits: serializeAws_json1_1UlimitList(input.ulimits, context) }),\n        ...(input.user !== undefined && input.user !== null && { user: input.user }),\n        ...(input.volumesFrom !== undefined &&\n            input.volumesFrom !== null && { volumesFrom: serializeAws_json1_1VolumeFromList(input.volumesFrom, context) }),\n        ...(input.workingDirectory !== undefined &&\n            input.workingDirectory !== null && { workingDirectory: input.workingDirectory }),\n    };\n};\nconst serializeAws_json1_1ContainerDefinitions = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ContainerDefinition(entry, context);\n    });\n};\nconst serializeAws_json1_1ContainerDependencies = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ContainerDependency(entry, context);\n    });\n};\nconst serializeAws_json1_1ContainerDependency = (input, context) => {\n    return {\n        ...(input.condition !== undefined && input.condition !== null && { condition: input.condition }),\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n    };\n};\nconst serializeAws_json1_1ContainerInstanceFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1ContainerOverride = (input, context) => {\n    return {\n        ...(input.command !== undefined &&\n            input.command !== null && { command: serializeAws_json1_1StringList(input.command, context) }),\n        ...(input.cpu !== undefined && input.cpu !== null && { cpu: input.cpu }),\n        ...(input.environment !== undefined &&\n            input.environment !== null && {\n            environment: serializeAws_json1_1EnvironmentVariables(input.environment, context),\n        }),\n        ...(input.environmentFiles !== undefined &&\n            input.environmentFiles !== null && {\n            environmentFiles: serializeAws_json1_1EnvironmentFiles(input.environmentFiles, context),\n        }),\n        ...(input.memory !== undefined && input.memory !== null && { memory: input.memory }),\n        ...(input.memoryReservation !== undefined &&\n            input.memoryReservation !== null && { memoryReservation: input.memoryReservation }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.resourceRequirements !== undefined &&\n            input.resourceRequirements !== null && {\n            resourceRequirements: serializeAws_json1_1ResourceRequirements(input.resourceRequirements, context),\n        }),\n    };\n};\nconst serializeAws_json1_1ContainerOverrides = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ContainerOverride(entry, context);\n    });\n};\nconst serializeAws_json1_1ContainerStateChange = (input, context) => {\n    return {\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.exitCode !== undefined && input.exitCode !== null && { exitCode: input.exitCode }),\n        ...(input.imageDigest !== undefined && input.imageDigest !== null && { imageDigest: input.imageDigest }),\n        ...(input.networkBindings !== undefined &&\n            input.networkBindings !== null && {\n            networkBindings: serializeAws_json1_1NetworkBindings(input.networkBindings, context),\n        }),\n        ...(input.reason !== undefined && input.reason !== null && { reason: input.reason }),\n        ...(input.runtimeId !== undefined && input.runtimeId !== null && { runtimeId: input.runtimeId }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1ContainerStateChanges = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ContainerStateChange(entry, context);\n    });\n};\nconst serializeAws_json1_1CreateCapacityProviderRequest = (input, context) => {\n    return {\n        ...(input.autoScalingGroupProvider !== undefined &&\n            input.autoScalingGroupProvider !== null && {\n            autoScalingGroupProvider: serializeAws_json1_1AutoScalingGroupProvider(input.autoScalingGroupProvider, context),\n        }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n    };\n};\nconst serializeAws_json1_1CreateClusterRequest = (input, context) => {\n    return {\n        ...(input.capacityProviders !== undefined &&\n            input.capacityProviders !== null && {\n            capacityProviders: serializeAws_json1_1StringList(input.capacityProviders, context),\n        }),\n        ...(input.clusterName !== undefined && input.clusterName !== null && { clusterName: input.clusterName }),\n        ...(input.configuration !== undefined &&\n            input.configuration !== null && {\n            configuration: serializeAws_json1_1ClusterConfiguration(input.configuration, context),\n        }),\n        ...(input.defaultCapacityProviderStrategy !== undefined &&\n            input.defaultCapacityProviderStrategy !== null && {\n            defaultCapacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.defaultCapacityProviderStrategy, context),\n        }),\n        ...(input.settings !== undefined &&\n            input.settings !== null && { settings: serializeAws_json1_1ClusterSettings(input.settings, context) }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n    };\n};\nconst serializeAws_json1_1CreateServiceRequest = (input, context) => {\n    return {\n        ...(input.capacityProviderStrategy !== undefined &&\n            input.capacityProviderStrategy !== null && {\n            capacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.capacityProviderStrategy, context),\n        }),\n        ...(input.clientToken !== undefined && input.clientToken !== null && { clientToken: input.clientToken }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.deploymentConfiguration !== undefined &&\n            input.deploymentConfiguration !== null && {\n            deploymentConfiguration: serializeAws_json1_1DeploymentConfiguration(input.deploymentConfiguration, context),\n        }),\n        ...(input.deploymentController !== undefined &&\n            input.deploymentController !== null && {\n            deploymentController: serializeAws_json1_1DeploymentController(input.deploymentController, context),\n        }),\n        ...(input.desiredCount !== undefined && input.desiredCount !== null && { desiredCount: input.desiredCount }),\n        ...(input.enableECSManagedTags !== undefined &&\n            input.enableECSManagedTags !== null && { enableECSManagedTags: input.enableECSManagedTags }),\n        ...(input.enableExecuteCommand !== undefined &&\n            input.enableExecuteCommand !== null && { enableExecuteCommand: input.enableExecuteCommand }),\n        ...(input.healthCheckGracePeriodSeconds !== undefined &&\n            input.healthCheckGracePeriodSeconds !== null && {\n            healthCheckGracePeriodSeconds: input.healthCheckGracePeriodSeconds,\n        }),\n        ...(input.launchType !== undefined && input.launchType !== null && { launchType: input.launchType }),\n        ...(input.loadBalancers !== undefined &&\n            input.loadBalancers !== null && {\n            loadBalancers: serializeAws_json1_1LoadBalancers(input.loadBalancers, context),\n        }),\n        ...(input.networkConfiguration !== undefined &&\n            input.networkConfiguration !== null && {\n            networkConfiguration: serializeAws_json1_1NetworkConfiguration(input.networkConfiguration, context),\n        }),\n        ...(input.placementConstraints !== undefined &&\n            input.placementConstraints !== null && {\n            placementConstraints: serializeAws_json1_1PlacementConstraints(input.placementConstraints, context),\n        }),\n        ...(input.placementStrategy !== undefined &&\n            input.placementStrategy !== null && {\n            placementStrategy: serializeAws_json1_1PlacementStrategies(input.placementStrategy, context),\n        }),\n        ...(input.platformVersion !== undefined &&\n            input.platformVersion !== null && { platformVersion: input.platformVersion }),\n        ...(input.propagateTags !== undefined && input.propagateTags !== null && { propagateTags: input.propagateTags }),\n        ...(input.role !== undefined && input.role !== null && { role: input.role }),\n        ...(input.schedulingStrategy !== undefined &&\n            input.schedulingStrategy !== null && { schedulingStrategy: input.schedulingStrategy }),\n        ...(input.serviceName !== undefined && input.serviceName !== null && { serviceName: input.serviceName }),\n        ...(input.serviceRegistries !== undefined &&\n            input.serviceRegistries !== null && {\n            serviceRegistries: serializeAws_json1_1ServiceRegistries(input.serviceRegistries, context),\n        }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1CreateTaskSetRequest = (input, context) => {\n    return {\n        ...(input.capacityProviderStrategy !== undefined &&\n            input.capacityProviderStrategy !== null && {\n            capacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.capacityProviderStrategy, context),\n        }),\n        ...(input.clientToken !== undefined && input.clientToken !== null && { clientToken: input.clientToken }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.externalId !== undefined && input.externalId !== null && { externalId: input.externalId }),\n        ...(input.launchType !== undefined && input.launchType !== null && { launchType: input.launchType }),\n        ...(input.loadBalancers !== undefined &&\n            input.loadBalancers !== null && {\n            loadBalancers: serializeAws_json1_1LoadBalancers(input.loadBalancers, context),\n        }),\n        ...(input.networkConfiguration !== undefined &&\n            input.networkConfiguration !== null && {\n            networkConfiguration: serializeAws_json1_1NetworkConfiguration(input.networkConfiguration, context),\n        }),\n        ...(input.platformVersion !== undefined &&\n            input.platformVersion !== null && { platformVersion: input.platformVersion }),\n        ...(input.scale !== undefined &&\n            input.scale !== null && { scale: serializeAws_json1_1Scale(input.scale, context) }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n        ...(input.serviceRegistries !== undefined &&\n            input.serviceRegistries !== null && {\n            serviceRegistries: serializeAws_json1_1ServiceRegistries(input.serviceRegistries, context),\n        }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1DeleteAccountSettingRequest = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.principalArn !== undefined && input.principalArn !== null && { principalArn: input.principalArn }),\n    };\n};\nconst serializeAws_json1_1DeleteAttributesRequest = (input, context) => {\n    return {\n        ...(input.attributes !== undefined &&\n            input.attributes !== null && { attributes: serializeAws_json1_1Attributes(input.attributes, context) }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n    };\n};\nconst serializeAws_json1_1DeleteCapacityProviderRequest = (input, context) => {\n    return {\n        ...(input.capacityProvider !== undefined &&\n            input.capacityProvider !== null && { capacityProvider: input.capacityProvider }),\n    };\n};\nconst serializeAws_json1_1DeleteClusterRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n    };\n};\nconst serializeAws_json1_1DeleteServiceRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.force !== undefined && input.force !== null && { force: input.force }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n    };\n};\nconst serializeAws_json1_1DeleteTaskSetRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.force !== undefined && input.force !== null && { force: input.force }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n        ...(input.taskSet !== undefined && input.taskSet !== null && { taskSet: input.taskSet }),\n    };\n};\nconst serializeAws_json1_1DeploymentCircuitBreaker = (input, context) => {\n    return {\n        ...(input.enable !== undefined && input.enable !== null && { enable: input.enable }),\n        ...(input.rollback !== undefined && input.rollback !== null && { rollback: input.rollback }),\n    };\n};\nconst serializeAws_json1_1DeploymentConfiguration = (input, context) => {\n    return {\n        ...(input.deploymentCircuitBreaker !== undefined &&\n            input.deploymentCircuitBreaker !== null && {\n            deploymentCircuitBreaker: serializeAws_json1_1DeploymentCircuitBreaker(input.deploymentCircuitBreaker, context),\n        }),\n        ...(input.maximumPercent !== undefined &&\n            input.maximumPercent !== null && { maximumPercent: input.maximumPercent }),\n        ...(input.minimumHealthyPercent !== undefined &&\n            input.minimumHealthyPercent !== null && { minimumHealthyPercent: input.minimumHealthyPercent }),\n    };\n};\nconst serializeAws_json1_1DeploymentController = (input, context) => {\n    return {\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1DeregisterContainerInstanceRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstance !== undefined &&\n            input.containerInstance !== null && { containerInstance: input.containerInstance }),\n        ...(input.force !== undefined && input.force !== null && { force: input.force }),\n    };\n};\nconst serializeAws_json1_1DeregisterTaskDefinitionRequest = (input, context) => {\n    return {\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1DescribeCapacityProvidersRequest = (input, context) => {\n    return {\n        ...(input.capacityProviders !== undefined &&\n            input.capacityProviders !== null && {\n            capacityProviders: serializeAws_json1_1StringList(input.capacityProviders, context),\n        }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1CapacityProviderFieldList(input.include, context) }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    };\n};\nconst serializeAws_json1_1DescribeClustersRequest = (input, context) => {\n    return {\n        ...(input.clusters !== undefined &&\n            input.clusters !== null && { clusters: serializeAws_json1_1StringList(input.clusters, context) }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1ClusterFieldList(input.include, context) }),\n    };\n};\nconst serializeAws_json1_1DescribeContainerInstancesRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstances !== undefined &&\n            input.containerInstances !== null && {\n            containerInstances: serializeAws_json1_1StringList(input.containerInstances, context),\n        }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1ContainerInstanceFieldList(input.include, context) }),\n    };\n};\nconst serializeAws_json1_1DescribeServicesRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1ServiceFieldList(input.include, context) }),\n        ...(input.services !== undefined &&\n            input.services !== null && { services: serializeAws_json1_1StringList(input.services, context) }),\n    };\n};\nconst serializeAws_json1_1DescribeTaskDefinitionRequest = (input, context) => {\n    return {\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1TaskDefinitionFieldList(input.include, context) }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1DescribeTaskSetsRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1TaskSetFieldList(input.include, context) }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n        ...(input.taskSets !== undefined &&\n            input.taskSets !== null && { taskSets: serializeAws_json1_1StringList(input.taskSets, context) }),\n    };\n};\nconst serializeAws_json1_1DescribeTasksRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.include !== undefined &&\n            input.include !== null && { include: serializeAws_json1_1TaskFieldList(input.include, context) }),\n        ...(input.tasks !== undefined &&\n            input.tasks !== null && { tasks: serializeAws_json1_1StringList(input.tasks, context) }),\n    };\n};\nconst serializeAws_json1_1Device = (input, context) => {\n    return {\n        ...(input.containerPath !== undefined && input.containerPath !== null && { containerPath: input.containerPath }),\n        ...(input.hostPath !== undefined && input.hostPath !== null && { hostPath: input.hostPath }),\n        ...(input.permissions !== undefined &&\n            input.permissions !== null && {\n            permissions: serializeAws_json1_1DeviceCgroupPermissions(input.permissions, context),\n        }),\n    };\n};\nconst serializeAws_json1_1DeviceCgroupPermissions = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1DevicesList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Device(entry, context);\n    });\n};\nconst serializeAws_json1_1DiscoverPollEndpointRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstance !== undefined &&\n            input.containerInstance !== null && { containerInstance: input.containerInstance }),\n    };\n};\nconst serializeAws_json1_1DockerLabelsMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_json1_1DockerVolumeConfiguration = (input, context) => {\n    return {\n        ...(input.autoprovision !== undefined && input.autoprovision !== null && { autoprovision: input.autoprovision }),\n        ...(input.driver !== undefined && input.driver !== null && { driver: input.driver }),\n        ...(input.driverOpts !== undefined &&\n            input.driverOpts !== null && { driverOpts: serializeAws_json1_1StringMap(input.driverOpts, context) }),\n        ...(input.labels !== undefined &&\n            input.labels !== null && { labels: serializeAws_json1_1StringMap(input.labels, context) }),\n        ...(input.scope !== undefined && input.scope !== null && { scope: input.scope }),\n    };\n};\nconst serializeAws_json1_1EFSAuthorizationConfig = (input, context) => {\n    return {\n        ...(input.accessPointId !== undefined && input.accessPointId !== null && { accessPointId: input.accessPointId }),\n        ...(input.iam !== undefined && input.iam !== null && { iam: input.iam }),\n    };\n};\nconst serializeAws_json1_1EFSVolumeConfiguration = (input, context) => {\n    return {\n        ...(input.authorizationConfig !== undefined &&\n            input.authorizationConfig !== null && {\n            authorizationConfig: serializeAws_json1_1EFSAuthorizationConfig(input.authorizationConfig, context),\n        }),\n        ...(input.fileSystemId !== undefined && input.fileSystemId !== null && { fileSystemId: input.fileSystemId }),\n        ...(input.rootDirectory !== undefined && input.rootDirectory !== null && { rootDirectory: input.rootDirectory }),\n        ...(input.transitEncryption !== undefined &&\n            input.transitEncryption !== null && { transitEncryption: input.transitEncryption }),\n        ...(input.transitEncryptionPort !== undefined &&\n            input.transitEncryptionPort !== null && { transitEncryptionPort: input.transitEncryptionPort }),\n    };\n};\nconst serializeAws_json1_1EnvironmentFile = (input, context) => {\n    return {\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1EnvironmentFiles = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1EnvironmentFile(entry, context);\n    });\n};\nconst serializeAws_json1_1EnvironmentVariables = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst serializeAws_json1_1EphemeralStorage = (input, context) => {\n    return {\n        ...(input.sizeInGiB !== undefined && input.sizeInGiB !== null && { sizeInGiB: input.sizeInGiB }),\n    };\n};\nconst serializeAws_json1_1ExecuteCommandConfiguration = (input, context) => {\n    return {\n        ...(input.kmsKeyId !== undefined && input.kmsKeyId !== null && { kmsKeyId: input.kmsKeyId }),\n        ...(input.logConfiguration !== undefined &&\n            input.logConfiguration !== null && {\n            logConfiguration: serializeAws_json1_1ExecuteCommandLogConfiguration(input.logConfiguration, context),\n        }),\n        ...(input.logging !== undefined && input.logging !== null && { logging: input.logging }),\n    };\n};\nconst serializeAws_json1_1ExecuteCommandLogConfiguration = (input, context) => {\n    return {\n        ...(input.cloudWatchEncryptionEnabled !== undefined &&\n            input.cloudWatchEncryptionEnabled !== null && { cloudWatchEncryptionEnabled: input.cloudWatchEncryptionEnabled }),\n        ...(input.cloudWatchLogGroupName !== undefined &&\n            input.cloudWatchLogGroupName !== null && { cloudWatchLogGroupName: input.cloudWatchLogGroupName }),\n        ...(input.s3BucketName !== undefined && input.s3BucketName !== null && { s3BucketName: input.s3BucketName }),\n        ...(input.s3EncryptionEnabled !== undefined &&\n            input.s3EncryptionEnabled !== null && { s3EncryptionEnabled: input.s3EncryptionEnabled }),\n        ...(input.s3KeyPrefix !== undefined && input.s3KeyPrefix !== null && { s3KeyPrefix: input.s3KeyPrefix }),\n    };\n};\nconst serializeAws_json1_1ExecuteCommandRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.command !== undefined && input.command !== null && { command: input.command }),\n        ...(input.container !== undefined && input.container !== null && { container: input.container }),\n        ...(input.interactive !== undefined && input.interactive !== null && { interactive: input.interactive }),\n        ...(input.task !== undefined && input.task !== null && { task: input.task }),\n    };\n};\nconst serializeAws_json1_1FirelensConfiguration = (input, context) => {\n    return {\n        ...(input.options !== undefined &&\n            input.options !== null && {\n            options: serializeAws_json1_1FirelensConfigurationOptionsMap(input.options, context),\n        }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1FirelensConfigurationOptionsMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_json1_1FSxWindowsFileServerAuthorizationConfig = (input, context) => {\n    return {\n        ...(input.credentialsParameter !== undefined &&\n            input.credentialsParameter !== null && { credentialsParameter: input.credentialsParameter }),\n        ...(input.domain !== undefined && input.domain !== null && { domain: input.domain }),\n    };\n};\nconst serializeAws_json1_1FSxWindowsFileServerVolumeConfiguration = (input, context) => {\n    return {\n        ...(input.authorizationConfig !== undefined &&\n            input.authorizationConfig !== null && {\n            authorizationConfig: serializeAws_json1_1FSxWindowsFileServerAuthorizationConfig(input.authorizationConfig, context),\n        }),\n        ...(input.fileSystemId !== undefined && input.fileSystemId !== null && { fileSystemId: input.fileSystemId }),\n        ...(input.rootDirectory !== undefined && input.rootDirectory !== null && { rootDirectory: input.rootDirectory }),\n    };\n};\nconst serializeAws_json1_1HealthCheck = (input, context) => {\n    return {\n        ...(input.command !== undefined &&\n            input.command !== null && { command: serializeAws_json1_1StringList(input.command, context) }),\n        ...(input.interval !== undefined && input.interval !== null && { interval: input.interval }),\n        ...(input.retries !== undefined && input.retries !== null && { retries: input.retries }),\n        ...(input.startPeriod !== undefined && input.startPeriod !== null && { startPeriod: input.startPeriod }),\n        ...(input.timeout !== undefined && input.timeout !== null && { timeout: input.timeout }),\n    };\n};\nconst serializeAws_json1_1HostEntry = (input, context) => {\n    return {\n        ...(input.hostname !== undefined && input.hostname !== null && { hostname: input.hostname }),\n        ...(input.ipAddress !== undefined && input.ipAddress !== null && { ipAddress: input.ipAddress }),\n    };\n};\nconst serializeAws_json1_1HostEntryList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1HostEntry(entry, context);\n    });\n};\nconst serializeAws_json1_1HostVolumeProperties = (input, context) => {\n    return {\n        ...(input.sourcePath !== undefined && input.sourcePath !== null && { sourcePath: input.sourcePath }),\n    };\n};\nconst serializeAws_json1_1InferenceAccelerator = (input, context) => {\n    return {\n        ...(input.deviceName !== undefined && input.deviceName !== null && { deviceName: input.deviceName }),\n        ...(input.deviceType !== undefined && input.deviceType !== null && { deviceType: input.deviceType }),\n    };\n};\nconst serializeAws_json1_1InferenceAcceleratorOverride = (input, context) => {\n    return {\n        ...(input.deviceName !== undefined && input.deviceName !== null && { deviceName: input.deviceName }),\n        ...(input.deviceType !== undefined && input.deviceType !== null && { deviceType: input.deviceType }),\n    };\n};\nconst serializeAws_json1_1InferenceAcceleratorOverrides = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1InferenceAcceleratorOverride(entry, context);\n    });\n};\nconst serializeAws_json1_1InferenceAccelerators = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1InferenceAccelerator(entry, context);\n    });\n};\nconst serializeAws_json1_1KernelCapabilities = (input, context) => {\n    return {\n        ...(input.add !== undefined && input.add !== null && { add: serializeAws_json1_1StringList(input.add, context) }),\n        ...(input.drop !== undefined &&\n            input.drop !== null && { drop: serializeAws_json1_1StringList(input.drop, context) }),\n    };\n};\nconst serializeAws_json1_1KeyValuePair = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1LinuxParameters = (input, context) => {\n    return {\n        ...(input.capabilities !== undefined &&\n            input.capabilities !== null && {\n            capabilities: serializeAws_json1_1KernelCapabilities(input.capabilities, context),\n        }),\n        ...(input.devices !== undefined &&\n            input.devices !== null && { devices: serializeAws_json1_1DevicesList(input.devices, context) }),\n        ...(input.initProcessEnabled !== undefined &&\n            input.initProcessEnabled !== null && { initProcessEnabled: input.initProcessEnabled }),\n        ...(input.maxSwap !== undefined && input.maxSwap !== null && { maxSwap: input.maxSwap }),\n        ...(input.sharedMemorySize !== undefined &&\n            input.sharedMemorySize !== null && { sharedMemorySize: input.sharedMemorySize }),\n        ...(input.swappiness !== undefined && input.swappiness !== null && { swappiness: input.swappiness }),\n        ...(input.tmpfs !== undefined &&\n            input.tmpfs !== null && { tmpfs: serializeAws_json1_1TmpfsList(input.tmpfs, context) }),\n    };\n};\nconst serializeAws_json1_1ListAccountSettingsRequest = (input, context) => {\n    return {\n        ...(input.effectiveSettings !== undefined &&\n            input.effectiveSettings !== null && { effectiveSettings: input.effectiveSettings }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.principalArn !== undefined && input.principalArn !== null && { principalArn: input.principalArn }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1ListAttributesRequest = (input, context) => {\n    return {\n        ...(input.attributeName !== undefined && input.attributeName !== null && { attributeName: input.attributeName }),\n        ...(input.attributeValue !== undefined &&\n            input.attributeValue !== null && { attributeValue: input.attributeValue }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.targetType !== undefined && input.targetType !== null && { targetType: input.targetType }),\n    };\n};\nconst serializeAws_json1_1ListClustersRequest = (input, context) => {\n    return {\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    };\n};\nconst serializeAws_json1_1ListContainerInstancesRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.filter !== undefined && input.filter !== null && { filter: input.filter }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1ListServicesRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.launchType !== undefined && input.launchType !== null && { launchType: input.launchType }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.schedulingStrategy !== undefined &&\n            input.schedulingStrategy !== null && { schedulingStrategy: input.schedulingStrategy }),\n    };\n};\nconst serializeAws_json1_1ListTagsForResourceRequest = (input, context) => {\n    return {\n        ...(input.resourceArn !== undefined && input.resourceArn !== null && { resourceArn: input.resourceArn }),\n    };\n};\nconst serializeAws_json1_1ListTaskDefinitionFamiliesRequest = (input, context) => {\n    return {\n        ...(input.familyPrefix !== undefined && input.familyPrefix !== null && { familyPrefix: input.familyPrefix }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1ListTaskDefinitionsRequest = (input, context) => {\n    return {\n        ...(input.familyPrefix !== undefined && input.familyPrefix !== null && { familyPrefix: input.familyPrefix }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.sort !== undefined && input.sort !== null && { sort: input.sort }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1ListTasksRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstance !== undefined &&\n            input.containerInstance !== null && { containerInstance: input.containerInstance }),\n        ...(input.desiredStatus !== undefined && input.desiredStatus !== null && { desiredStatus: input.desiredStatus }),\n        ...(input.family !== undefined && input.family !== null && { family: input.family }),\n        ...(input.launchType !== undefined && input.launchType !== null && { launchType: input.launchType }),\n        ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n        ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n        ...(input.serviceName !== undefined && input.serviceName !== null && { serviceName: input.serviceName }),\n        ...(input.startedBy !== undefined && input.startedBy !== null && { startedBy: input.startedBy }),\n    };\n};\nconst serializeAws_json1_1LoadBalancer = (input, context) => {\n    return {\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.containerPort !== undefined && input.containerPort !== null && { containerPort: input.containerPort }),\n        ...(input.loadBalancerName !== undefined &&\n            input.loadBalancerName !== null && { loadBalancerName: input.loadBalancerName }),\n        ...(input.targetGroupArn !== undefined &&\n            input.targetGroupArn !== null && { targetGroupArn: input.targetGroupArn }),\n    };\n};\nconst serializeAws_json1_1LoadBalancers = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1LoadBalancer(entry, context);\n    });\n};\nconst serializeAws_json1_1LogConfiguration = (input, context) => {\n    return {\n        ...(input.logDriver !== undefined && input.logDriver !== null && { logDriver: input.logDriver }),\n        ...(input.options !== undefined &&\n            input.options !== null && { options: serializeAws_json1_1LogConfigurationOptionsMap(input.options, context) }),\n        ...(input.secretOptions !== undefined &&\n            input.secretOptions !== null && { secretOptions: serializeAws_json1_1SecretList(input.secretOptions, context) }),\n    };\n};\nconst serializeAws_json1_1LogConfigurationOptionsMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_json1_1ManagedAgentStateChange = (input, context) => {\n    return {\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.managedAgentName !== undefined &&\n            input.managedAgentName !== null && { managedAgentName: input.managedAgentName }),\n        ...(input.reason !== undefined && input.reason !== null && { reason: input.reason }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1ManagedAgentStateChanges = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ManagedAgentStateChange(entry, context);\n    });\n};\nconst serializeAws_json1_1ManagedScaling = (input, context) => {\n    return {\n        ...(input.instanceWarmupPeriod !== undefined &&\n            input.instanceWarmupPeriod !== null && { instanceWarmupPeriod: input.instanceWarmupPeriod }),\n        ...(input.maximumScalingStepSize !== undefined &&\n            input.maximumScalingStepSize !== null && { maximumScalingStepSize: input.maximumScalingStepSize }),\n        ...(input.minimumScalingStepSize !== undefined &&\n            input.minimumScalingStepSize !== null && { minimumScalingStepSize: input.minimumScalingStepSize }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n        ...(input.targetCapacity !== undefined &&\n            input.targetCapacity !== null && { targetCapacity: input.targetCapacity }),\n    };\n};\nconst serializeAws_json1_1MountPoint = (input, context) => {\n    return {\n        ...(input.containerPath !== undefined && input.containerPath !== null && { containerPath: input.containerPath }),\n        ...(input.readOnly !== undefined && input.readOnly !== null && { readOnly: input.readOnly }),\n        ...(input.sourceVolume !== undefined && input.sourceVolume !== null && { sourceVolume: input.sourceVolume }),\n    };\n};\nconst serializeAws_json1_1MountPointList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1MountPoint(entry, context);\n    });\n};\nconst serializeAws_json1_1NetworkBinding = (input, context) => {\n    return {\n        ...(input.bindIP !== undefined && input.bindIP !== null && { bindIP: input.bindIP }),\n        ...(input.containerPort !== undefined && input.containerPort !== null && { containerPort: input.containerPort }),\n        ...(input.hostPort !== undefined && input.hostPort !== null && { hostPort: input.hostPort }),\n        ...(input.protocol !== undefined && input.protocol !== null && { protocol: input.protocol }),\n    };\n};\nconst serializeAws_json1_1NetworkBindings = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1NetworkBinding(entry, context);\n    });\n};\nconst serializeAws_json1_1NetworkConfiguration = (input, context) => {\n    return {\n        ...(input.awsvpcConfiguration !== undefined &&\n            input.awsvpcConfiguration !== null && {\n            awsvpcConfiguration: serializeAws_json1_1AwsVpcConfiguration(input.awsvpcConfiguration, context),\n        }),\n    };\n};\nconst serializeAws_json1_1PlacementConstraint = (input, context) => {\n    return {\n        ...(input.expression !== undefined && input.expression !== null && { expression: input.expression }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1PlacementConstraints = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1PlacementConstraint(entry, context);\n    });\n};\nconst serializeAws_json1_1PlacementStrategies = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1PlacementStrategy(entry, context);\n    });\n};\nconst serializeAws_json1_1PlacementStrategy = (input, context) => {\n    return {\n        ...(input.field !== undefined && input.field !== null && { field: input.field }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1PlatformDevice = (input, context) => {\n    return {\n        ...(input.id !== undefined && input.id !== null && { id: input.id }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1PlatformDevices = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1PlatformDevice(entry, context);\n    });\n};\nconst serializeAws_json1_1PortMapping = (input, context) => {\n    return {\n        ...(input.containerPort !== undefined && input.containerPort !== null && { containerPort: input.containerPort }),\n        ...(input.hostPort !== undefined && input.hostPort !== null && { hostPort: input.hostPort }),\n        ...(input.protocol !== undefined && input.protocol !== null && { protocol: input.protocol }),\n    };\n};\nconst serializeAws_json1_1PortMappingList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1PortMapping(entry, context);\n    });\n};\nconst serializeAws_json1_1ProxyConfiguration = (input, context) => {\n    return {\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.properties !== undefined &&\n            input.properties !== null && {\n            properties: serializeAws_json1_1ProxyConfigurationProperties(input.properties, context),\n        }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1ProxyConfigurationProperties = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst serializeAws_json1_1PutAccountSettingDefaultRequest = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1PutAccountSettingRequest = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.principalArn !== undefined && input.principalArn !== null && { principalArn: input.principalArn }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1PutAttributesRequest = (input, context) => {\n    return {\n        ...(input.attributes !== undefined &&\n            input.attributes !== null && { attributes: serializeAws_json1_1Attributes(input.attributes, context) }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n    };\n};\nconst serializeAws_json1_1PutClusterCapacityProvidersRequest = (input, context) => {\n    return {\n        ...(input.capacityProviders !== undefined &&\n            input.capacityProviders !== null && {\n            capacityProviders: serializeAws_json1_1StringList(input.capacityProviders, context),\n        }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.defaultCapacityProviderStrategy !== undefined &&\n            input.defaultCapacityProviderStrategy !== null && {\n            defaultCapacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.defaultCapacityProviderStrategy, context),\n        }),\n    };\n};\nconst serializeAws_json1_1RegisterContainerInstanceRequest = (input, context) => {\n    return {\n        ...(input.attributes !== undefined &&\n            input.attributes !== null && { attributes: serializeAws_json1_1Attributes(input.attributes, context) }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstanceArn !== undefined &&\n            input.containerInstanceArn !== null && { containerInstanceArn: input.containerInstanceArn }),\n        ...(input.instanceIdentityDocument !== undefined &&\n            input.instanceIdentityDocument !== null && { instanceIdentityDocument: input.instanceIdentityDocument }),\n        ...(input.instanceIdentityDocumentSignature !== undefined &&\n            input.instanceIdentityDocumentSignature !== null && {\n            instanceIdentityDocumentSignature: input.instanceIdentityDocumentSignature,\n        }),\n        ...(input.platformDevices !== undefined &&\n            input.platformDevices !== null && {\n            platformDevices: serializeAws_json1_1PlatformDevices(input.platformDevices, context),\n        }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.totalResources !== undefined &&\n            input.totalResources !== null && {\n            totalResources: serializeAws_json1_1Resources(input.totalResources, context),\n        }),\n        ...(input.versionInfo !== undefined &&\n            input.versionInfo !== null && { versionInfo: serializeAws_json1_1VersionInfo(input.versionInfo, context) }),\n    };\n};\nconst serializeAws_json1_1RegisterTaskDefinitionRequest = (input, context) => {\n    return {\n        ...(input.containerDefinitions !== undefined &&\n            input.containerDefinitions !== null && {\n            containerDefinitions: serializeAws_json1_1ContainerDefinitions(input.containerDefinitions, context),\n        }),\n        ...(input.cpu !== undefined && input.cpu !== null && { cpu: input.cpu }),\n        ...(input.ephemeralStorage !== undefined &&\n            input.ephemeralStorage !== null && {\n            ephemeralStorage: serializeAws_json1_1EphemeralStorage(input.ephemeralStorage, context),\n        }),\n        ...(input.executionRoleArn !== undefined &&\n            input.executionRoleArn !== null && { executionRoleArn: input.executionRoleArn }),\n        ...(input.family !== undefined && input.family !== null && { family: input.family }),\n        ...(input.inferenceAccelerators !== undefined &&\n            input.inferenceAccelerators !== null && {\n            inferenceAccelerators: serializeAws_json1_1InferenceAccelerators(input.inferenceAccelerators, context),\n        }),\n        ...(input.ipcMode !== undefined && input.ipcMode !== null && { ipcMode: input.ipcMode }),\n        ...(input.memory !== undefined && input.memory !== null && { memory: input.memory }),\n        ...(input.networkMode !== undefined && input.networkMode !== null && { networkMode: input.networkMode }),\n        ...(input.pidMode !== undefined && input.pidMode !== null && { pidMode: input.pidMode }),\n        ...(input.placementConstraints !== undefined &&\n            input.placementConstraints !== null && {\n            placementConstraints: serializeAws_json1_1TaskDefinitionPlacementConstraints(input.placementConstraints, context),\n        }),\n        ...(input.proxyConfiguration !== undefined &&\n            input.proxyConfiguration !== null && {\n            proxyConfiguration: serializeAws_json1_1ProxyConfiguration(input.proxyConfiguration, context),\n        }),\n        ...(input.requiresCompatibilities !== undefined &&\n            input.requiresCompatibilities !== null && {\n            requiresCompatibilities: serializeAws_json1_1CompatibilityList(input.requiresCompatibilities, context),\n        }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.taskRoleArn !== undefined && input.taskRoleArn !== null && { taskRoleArn: input.taskRoleArn }),\n        ...(input.volumes !== undefined &&\n            input.volumes !== null && { volumes: serializeAws_json1_1VolumeList(input.volumes, context) }),\n    };\n};\nconst serializeAws_json1_1RepositoryCredentials = (input, context) => {\n    return {\n        ...(input.credentialsParameter !== undefined &&\n            input.credentialsParameter !== null && { credentialsParameter: input.credentialsParameter }),\n    };\n};\nconst serializeAws_json1_1Resource = (input, context) => {\n    return {\n        ...(input.doubleValue !== undefined && input.doubleValue !== null && { doubleValue: input.doubleValue }),\n        ...(input.integerValue !== undefined && input.integerValue !== null && { integerValue: input.integerValue }),\n        ...(input.longValue !== undefined && input.longValue !== null && { longValue: input.longValue }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.stringSetValue !== undefined &&\n            input.stringSetValue !== null && {\n            stringSetValue: serializeAws_json1_1StringList(input.stringSetValue, context),\n        }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1ResourceRequirement = (input, context) => {\n    return {\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1ResourceRequirements = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ResourceRequirement(entry, context);\n    });\n};\nconst serializeAws_json1_1Resources = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Resource(entry, context);\n    });\n};\nconst serializeAws_json1_1RunTaskRequest = (input, context) => {\n    return {\n        ...(input.capacityProviderStrategy !== undefined &&\n            input.capacityProviderStrategy !== null && {\n            capacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.capacityProviderStrategy, context),\n        }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.count !== undefined && input.count !== null && { count: input.count }),\n        ...(input.enableECSManagedTags !== undefined &&\n            input.enableECSManagedTags !== null && { enableECSManagedTags: input.enableECSManagedTags }),\n        ...(input.enableExecuteCommand !== undefined &&\n            input.enableExecuteCommand !== null && { enableExecuteCommand: input.enableExecuteCommand }),\n        ...(input.group !== undefined && input.group !== null && { group: input.group }),\n        ...(input.launchType !== undefined && input.launchType !== null && { launchType: input.launchType }),\n        ...(input.networkConfiguration !== undefined &&\n            input.networkConfiguration !== null && {\n            networkConfiguration: serializeAws_json1_1NetworkConfiguration(input.networkConfiguration, context),\n        }),\n        ...(input.overrides !== undefined &&\n            input.overrides !== null && { overrides: serializeAws_json1_1TaskOverride(input.overrides, context) }),\n        ...(input.placementConstraints !== undefined &&\n            input.placementConstraints !== null && {\n            placementConstraints: serializeAws_json1_1PlacementConstraints(input.placementConstraints, context),\n        }),\n        ...(input.placementStrategy !== undefined &&\n            input.placementStrategy !== null && {\n            placementStrategy: serializeAws_json1_1PlacementStrategies(input.placementStrategy, context),\n        }),\n        ...(input.platformVersion !== undefined &&\n            input.platformVersion !== null && { platformVersion: input.platformVersion }),\n        ...(input.propagateTags !== undefined && input.propagateTags !== null && { propagateTags: input.propagateTags }),\n        ...(input.referenceId !== undefined && input.referenceId !== null && { referenceId: input.referenceId }),\n        ...(input.startedBy !== undefined && input.startedBy !== null && { startedBy: input.startedBy }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1Scale = (input, context) => {\n    return {\n        ...(input.unit !== undefined && input.unit !== null && { unit: input.unit }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1Secret = (input, context) => {\n    return {\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.valueFrom !== undefined && input.valueFrom !== null && { valueFrom: input.valueFrom }),\n    };\n};\nconst serializeAws_json1_1SecretList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Secret(entry, context);\n    });\n};\nconst serializeAws_json1_1ServiceFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1ServiceRegistries = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1ServiceRegistry(entry, context);\n    });\n};\nconst serializeAws_json1_1ServiceRegistry = (input, context) => {\n    return {\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.containerPort !== undefined && input.containerPort !== null && { containerPort: input.containerPort }),\n        ...(input.port !== undefined && input.port !== null && { port: input.port }),\n        ...(input.registryArn !== undefined && input.registryArn !== null && { registryArn: input.registryArn }),\n    };\n};\nconst serializeAws_json1_1StartTaskRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstances !== undefined &&\n            input.containerInstances !== null && {\n            containerInstances: serializeAws_json1_1StringList(input.containerInstances, context),\n        }),\n        ...(input.enableECSManagedTags !== undefined &&\n            input.enableECSManagedTags !== null && { enableECSManagedTags: input.enableECSManagedTags }),\n        ...(input.enableExecuteCommand !== undefined &&\n            input.enableExecuteCommand !== null && { enableExecuteCommand: input.enableExecuteCommand }),\n        ...(input.group !== undefined && input.group !== null && { group: input.group }),\n        ...(input.networkConfiguration !== undefined &&\n            input.networkConfiguration !== null && {\n            networkConfiguration: serializeAws_json1_1NetworkConfiguration(input.networkConfiguration, context),\n        }),\n        ...(input.overrides !== undefined &&\n            input.overrides !== null && { overrides: serializeAws_json1_1TaskOverride(input.overrides, context) }),\n        ...(input.propagateTags !== undefined && input.propagateTags !== null && { propagateTags: input.propagateTags }),\n        ...(input.referenceId !== undefined && input.referenceId !== null && { referenceId: input.referenceId }),\n        ...(input.startedBy !== undefined && input.startedBy !== null && { startedBy: input.startedBy }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1StopTaskRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.reason !== undefined && input.reason !== null && { reason: input.reason }),\n        ...(input.task !== undefined && input.task !== null && { task: input.task }),\n    };\n};\nconst serializeAws_json1_1StringList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1StringMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_json1_1SubmitAttachmentStateChangesRequest = (input, context) => {\n    return {\n        ...(input.attachments !== undefined &&\n            input.attachments !== null && {\n            attachments: serializeAws_json1_1AttachmentStateChanges(input.attachments, context),\n        }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n    };\n};\nconst serializeAws_json1_1SubmitContainerStateChangeRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerName !== undefined && input.containerName !== null && { containerName: input.containerName }),\n        ...(input.exitCode !== undefined && input.exitCode !== null && { exitCode: input.exitCode }),\n        ...(input.networkBindings !== undefined &&\n            input.networkBindings !== null && {\n            networkBindings: serializeAws_json1_1NetworkBindings(input.networkBindings, context),\n        }),\n        ...(input.reason !== undefined && input.reason !== null && { reason: input.reason }),\n        ...(input.runtimeId !== undefined && input.runtimeId !== null && { runtimeId: input.runtimeId }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n        ...(input.task !== undefined && input.task !== null && { task: input.task }),\n    };\n};\nconst serializeAws_json1_1SubmitTaskStateChangeRequest = (input, context) => {\n    return {\n        ...(input.attachments !== undefined &&\n            input.attachments !== null && {\n            attachments: serializeAws_json1_1AttachmentStateChanges(input.attachments, context),\n        }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containers !== undefined &&\n            input.containers !== null && {\n            containers: serializeAws_json1_1ContainerStateChanges(input.containers, context),\n        }),\n        ...(input.executionStoppedAt !== undefined &&\n            input.executionStoppedAt !== null && {\n            executionStoppedAt: Math.round(input.executionStoppedAt.getTime() / 1000),\n        }),\n        ...(input.managedAgents !== undefined &&\n            input.managedAgents !== null && {\n            managedAgents: serializeAws_json1_1ManagedAgentStateChanges(input.managedAgents, context),\n        }),\n        ...(input.pullStartedAt !== undefined &&\n            input.pullStartedAt !== null && { pullStartedAt: Math.round(input.pullStartedAt.getTime() / 1000) }),\n        ...(input.pullStoppedAt !== undefined &&\n            input.pullStoppedAt !== null && { pullStoppedAt: Math.round(input.pullStoppedAt.getTime() / 1000) }),\n        ...(input.reason !== undefined && input.reason !== null && { reason: input.reason }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n        ...(input.task !== undefined && input.task !== null && { task: input.task }),\n    };\n};\nconst serializeAws_json1_1SystemControl = (input, context) => {\n    return {\n        ...(input.namespace !== undefined && input.namespace !== null && { namespace: input.namespace }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1SystemControls = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1SystemControl(entry, context);\n    });\n};\nconst serializeAws_json1_1Tag = (input, context) => {\n    return {\n        ...(input.key !== undefined && input.key !== null && { key: input.key }),\n        ...(input.value !== undefined && input.value !== null && { value: input.value }),\n    };\n};\nconst serializeAws_json1_1TagKeys = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1TagResourceRequest = (input, context) => {\n    return {\n        ...(input.resourceArn !== undefined && input.resourceArn !== null && { resourceArn: input.resourceArn }),\n        ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n    };\n};\nconst serializeAws_json1_1Tags = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Tag(entry, context);\n    });\n};\nconst serializeAws_json1_1TaskDefinitionFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1TaskDefinitionPlacementConstraint = (input, context) => {\n    return {\n        ...(input.expression !== undefined && input.expression !== null && { expression: input.expression }),\n        ...(input.type !== undefined && input.type !== null && { type: input.type }),\n    };\n};\nconst serializeAws_json1_1TaskDefinitionPlacementConstraints = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1TaskDefinitionPlacementConstraint(entry, context);\n    });\n};\nconst serializeAws_json1_1TaskFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1TaskOverride = (input, context) => {\n    return {\n        ...(input.containerOverrides !== undefined &&\n            input.containerOverrides !== null && {\n            containerOverrides: serializeAws_json1_1ContainerOverrides(input.containerOverrides, context),\n        }),\n        ...(input.cpu !== undefined && input.cpu !== null && { cpu: input.cpu }),\n        ...(input.ephemeralStorage !== undefined &&\n            input.ephemeralStorage !== null && {\n            ephemeralStorage: serializeAws_json1_1EphemeralStorage(input.ephemeralStorage, context),\n        }),\n        ...(input.executionRoleArn !== undefined &&\n            input.executionRoleArn !== null && { executionRoleArn: input.executionRoleArn }),\n        ...(input.inferenceAcceleratorOverrides !== undefined &&\n            input.inferenceAcceleratorOverrides !== null && {\n            inferenceAcceleratorOverrides: serializeAws_json1_1InferenceAcceleratorOverrides(input.inferenceAcceleratorOverrides, context),\n        }),\n        ...(input.memory !== undefined && input.memory !== null && { memory: input.memory }),\n        ...(input.taskRoleArn !== undefined && input.taskRoleArn !== null && { taskRoleArn: input.taskRoleArn }),\n    };\n};\nconst serializeAws_json1_1TaskSetFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_json1_1Tmpfs = (input, context) => {\n    return {\n        ...(input.containerPath !== undefined && input.containerPath !== null && { containerPath: input.containerPath }),\n        ...(input.mountOptions !== undefined &&\n            input.mountOptions !== null && { mountOptions: serializeAws_json1_1StringList(input.mountOptions, context) }),\n        ...(input.size !== undefined && input.size !== null && { size: input.size }),\n    };\n};\nconst serializeAws_json1_1TmpfsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Tmpfs(entry, context);\n    });\n};\nconst serializeAws_json1_1Ulimit = (input, context) => {\n    return {\n        ...(input.hardLimit !== undefined && input.hardLimit !== null && { hardLimit: input.hardLimit }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n        ...(input.softLimit !== undefined && input.softLimit !== null && { softLimit: input.softLimit }),\n    };\n};\nconst serializeAws_json1_1UlimitList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Ulimit(entry, context);\n    });\n};\nconst serializeAws_json1_1UntagResourceRequest = (input, context) => {\n    return {\n        ...(input.resourceArn !== undefined && input.resourceArn !== null && { resourceArn: input.resourceArn }),\n        ...(input.tagKeys !== undefined &&\n            input.tagKeys !== null && { tagKeys: serializeAws_json1_1TagKeys(input.tagKeys, context) }),\n    };\n};\nconst serializeAws_json1_1UpdateCapacityProviderRequest = (input, context) => {\n    return {\n        ...(input.autoScalingGroupProvider !== undefined &&\n            input.autoScalingGroupProvider !== null && {\n            autoScalingGroupProvider: serializeAws_json1_1AutoScalingGroupProviderUpdate(input.autoScalingGroupProvider, context),\n        }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    };\n};\nconst serializeAws_json1_1UpdateClusterRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.configuration !== undefined &&\n            input.configuration !== null && {\n            configuration: serializeAws_json1_1ClusterConfiguration(input.configuration, context),\n        }),\n        ...(input.settings !== undefined &&\n            input.settings !== null && { settings: serializeAws_json1_1ClusterSettings(input.settings, context) }),\n    };\n};\nconst serializeAws_json1_1UpdateClusterSettingsRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.settings !== undefined &&\n            input.settings !== null && { settings: serializeAws_json1_1ClusterSettings(input.settings, context) }),\n    };\n};\nconst serializeAws_json1_1UpdateContainerAgentRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstance !== undefined &&\n            input.containerInstance !== null && { containerInstance: input.containerInstance }),\n    };\n};\nconst serializeAws_json1_1UpdateContainerInstancesStateRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.containerInstances !== undefined &&\n            input.containerInstances !== null && {\n            containerInstances: serializeAws_json1_1StringList(input.containerInstances, context),\n        }),\n        ...(input.status !== undefined && input.status !== null && { status: input.status }),\n    };\n};\nconst serializeAws_json1_1UpdateServicePrimaryTaskSetRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.primaryTaskSet !== undefined &&\n            input.primaryTaskSet !== null && { primaryTaskSet: input.primaryTaskSet }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n    };\n};\nconst serializeAws_json1_1UpdateServiceRequest = (input, context) => {\n    return {\n        ...(input.capacityProviderStrategy !== undefined &&\n            input.capacityProviderStrategy !== null && {\n            capacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.capacityProviderStrategy, context),\n        }),\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.deploymentConfiguration !== undefined &&\n            input.deploymentConfiguration !== null && {\n            deploymentConfiguration: serializeAws_json1_1DeploymentConfiguration(input.deploymentConfiguration, context),\n        }),\n        ...(input.desiredCount !== undefined && input.desiredCount !== null && { desiredCount: input.desiredCount }),\n        ...(input.enableExecuteCommand !== undefined &&\n            input.enableExecuteCommand !== null && { enableExecuteCommand: input.enableExecuteCommand }),\n        ...(input.forceNewDeployment !== undefined &&\n            input.forceNewDeployment !== null && { forceNewDeployment: input.forceNewDeployment }),\n        ...(input.healthCheckGracePeriodSeconds !== undefined &&\n            input.healthCheckGracePeriodSeconds !== null && {\n            healthCheckGracePeriodSeconds: input.healthCheckGracePeriodSeconds,\n        }),\n        ...(input.networkConfiguration !== undefined &&\n            input.networkConfiguration !== null && {\n            networkConfiguration: serializeAws_json1_1NetworkConfiguration(input.networkConfiguration, context),\n        }),\n        ...(input.placementConstraints !== undefined &&\n            input.placementConstraints !== null && {\n            placementConstraints: serializeAws_json1_1PlacementConstraints(input.placementConstraints, context),\n        }),\n        ...(input.placementStrategy !== undefined &&\n            input.placementStrategy !== null && {\n            placementStrategy: serializeAws_json1_1PlacementStrategies(input.placementStrategy, context),\n        }),\n        ...(input.platformVersion !== undefined &&\n            input.platformVersion !== null && { platformVersion: input.platformVersion }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n        ...(input.taskDefinition !== undefined &&\n            input.taskDefinition !== null && { taskDefinition: input.taskDefinition }),\n    };\n};\nconst serializeAws_json1_1UpdateTaskSetRequest = (input, context) => {\n    return {\n        ...(input.cluster !== undefined && input.cluster !== null && { cluster: input.cluster }),\n        ...(input.scale !== undefined &&\n            input.scale !== null && { scale: serializeAws_json1_1Scale(input.scale, context) }),\n        ...(input.service !== undefined && input.service !== null && { service: input.service }),\n        ...(input.taskSet !== undefined && input.taskSet !== null && { taskSet: input.taskSet }),\n    };\n};\nconst serializeAws_json1_1VersionInfo = (input, context) => {\n    return {\n        ...(input.agentHash !== undefined && input.agentHash !== null && { agentHash: input.agentHash }),\n        ...(input.agentVersion !== undefined && input.agentVersion !== null && { agentVersion: input.agentVersion }),\n        ...(input.dockerVersion !== undefined && input.dockerVersion !== null && { dockerVersion: input.dockerVersion }),\n    };\n};\nconst serializeAws_json1_1Volume = (input, context) => {\n    return {\n        ...(input.dockerVolumeConfiguration !== undefined &&\n            input.dockerVolumeConfiguration !== null && {\n            dockerVolumeConfiguration: serializeAws_json1_1DockerVolumeConfiguration(input.dockerVolumeConfiguration, context),\n        }),\n        ...(input.efsVolumeConfiguration !== undefined &&\n            input.efsVolumeConfiguration !== null && {\n            efsVolumeConfiguration: serializeAws_json1_1EFSVolumeConfiguration(input.efsVolumeConfiguration, context),\n        }),\n        ...(input.fsxWindowsFileServerVolumeConfiguration !== undefined &&\n            input.fsxWindowsFileServerVolumeConfiguration !== null && {\n            fsxWindowsFileServerVolumeConfiguration: serializeAws_json1_1FSxWindowsFileServerVolumeConfiguration(input.fsxWindowsFileServerVolumeConfiguration, context),\n        }),\n        ...(input.host !== undefined &&\n            input.host !== null && { host: serializeAws_json1_1HostVolumeProperties(input.host, context) }),\n        ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    };\n};\nconst serializeAws_json1_1VolumeFrom = (input, context) => {\n    return {\n        ...(input.readOnly !== undefined && input.readOnly !== null && { readOnly: input.readOnly }),\n        ...(input.sourceContainer !== undefined &&\n            input.sourceContainer !== null && { sourceContainer: input.sourceContainer }),\n    };\n};\nconst serializeAws_json1_1VolumeFromList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1VolumeFrom(entry, context);\n    });\n};\nconst serializeAws_json1_1VolumeList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_json1_1Volume(entry, context);\n    });\n};\nconst deserializeAws_json1_1AccessDeniedException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Attachment = (output, context) => {\n    return {\n        details: output.details !== undefined && output.details !== null\n            ? deserializeAws_json1_1AttachmentDetails(output.details, context)\n            : undefined,\n        id: output.id !== undefined && output.id !== null ? output.id : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1AttachmentDetails = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst deserializeAws_json1_1Attachments = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Attachment(entry, context);\n    });\n};\nconst deserializeAws_json1_1Attribute = (output, context) => {\n    return {\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        targetId: output.targetId !== undefined && output.targetId !== null ? output.targetId : undefined,\n        targetType: output.targetType !== undefined && output.targetType !== null ? output.targetType : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1AttributeLimitExceededException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Attributes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Attribute(entry, context);\n    });\n};\nconst deserializeAws_json1_1AutoScalingGroupProvider = (output, context) => {\n    return {\n        autoScalingGroupArn: output.autoScalingGroupArn !== undefined && output.autoScalingGroupArn !== null\n            ? output.autoScalingGroupArn\n            : undefined,\n        managedScaling: output.managedScaling !== undefined && output.managedScaling !== null\n            ? deserializeAws_json1_1ManagedScaling(output.managedScaling, context)\n            : undefined,\n        managedTerminationProtection: output.managedTerminationProtection !== undefined && output.managedTerminationProtection !== null\n            ? output.managedTerminationProtection\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1AwsVpcConfiguration = (output, context) => {\n    return {\n        assignPublicIp: output.assignPublicIp !== undefined && output.assignPublicIp !== null ? output.assignPublicIp : undefined,\n        securityGroups: output.securityGroups !== undefined && output.securityGroups !== null\n            ? deserializeAws_json1_1StringList(output.securityGroups, context)\n            : undefined,\n        subnets: output.subnets !== undefined && output.subnets !== null\n            ? deserializeAws_json1_1StringList(output.subnets, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1BlockedException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1CapacityProvider = (output, context) => {\n    return {\n        autoScalingGroupProvider: output.autoScalingGroupProvider !== undefined && output.autoScalingGroupProvider !== null\n            ? deserializeAws_json1_1AutoScalingGroupProvider(output.autoScalingGroupProvider, context)\n            : undefined,\n        capacityProviderArn: output.capacityProviderArn !== undefined && output.capacityProviderArn !== null\n            ? output.capacityProviderArn\n            : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        updateStatus: output.updateStatus !== undefined && output.updateStatus !== null ? output.updateStatus : undefined,\n        updateStatusReason: output.updateStatusReason !== undefined && output.updateStatusReason !== null\n            ? output.updateStatusReason\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1CapacityProviders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1CapacityProvider(entry, context);\n    });\n};\nconst deserializeAws_json1_1CapacityProviderStrategy = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1CapacityProviderStrategyItem(entry, context);\n    });\n};\nconst deserializeAws_json1_1CapacityProviderStrategyItem = (output, context) => {\n    return {\n        base: output.base !== undefined && output.base !== null ? output.base : undefined,\n        capacityProvider: output.capacityProvider !== undefined && output.capacityProvider !== null ? output.capacityProvider : undefined,\n        weight: output.weight !== undefined && output.weight !== null ? output.weight : undefined,\n    };\n};\nconst deserializeAws_json1_1ClientException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Cluster = (output, context) => {\n    return {\n        activeServicesCount: output.activeServicesCount !== undefined && output.activeServicesCount !== null\n            ? output.activeServicesCount\n            : undefined,\n        attachments: output.attachments !== undefined && output.attachments !== null\n            ? deserializeAws_json1_1Attachments(output.attachments, context)\n            : undefined,\n        attachmentsStatus: output.attachmentsStatus !== undefined && output.attachmentsStatus !== null\n            ? output.attachmentsStatus\n            : undefined,\n        capacityProviders: output.capacityProviders !== undefined && output.capacityProviders !== null\n            ? deserializeAws_json1_1StringList(output.capacityProviders, context)\n            : undefined,\n        clusterArn: output.clusterArn !== undefined && output.clusterArn !== null ? output.clusterArn : undefined,\n        clusterName: output.clusterName !== undefined && output.clusterName !== null ? output.clusterName : undefined,\n        configuration: output.configuration !== undefined && output.configuration !== null\n            ? deserializeAws_json1_1ClusterConfiguration(output.configuration, context)\n            : undefined,\n        defaultCapacityProviderStrategy: output.defaultCapacityProviderStrategy !== undefined && output.defaultCapacityProviderStrategy !== null\n            ? deserializeAws_json1_1CapacityProviderStrategy(output.defaultCapacityProviderStrategy, context)\n            : undefined,\n        pendingTasksCount: output.pendingTasksCount !== undefined && output.pendingTasksCount !== null\n            ? output.pendingTasksCount\n            : undefined,\n        registeredContainerInstancesCount: output.registeredContainerInstancesCount !== undefined && output.registeredContainerInstancesCount !== null\n            ? output.registeredContainerInstancesCount\n            : undefined,\n        runningTasksCount: output.runningTasksCount !== undefined && output.runningTasksCount !== null\n            ? output.runningTasksCount\n            : undefined,\n        settings: output.settings !== undefined && output.settings !== null\n            ? deserializeAws_json1_1ClusterSettings(output.settings, context)\n            : undefined,\n        statistics: output.statistics !== undefined && output.statistics !== null\n            ? deserializeAws_json1_1Statistics(output.statistics, context)\n            : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterConfiguration = (output, context) => {\n    return {\n        executeCommandConfiguration: output.executeCommandConfiguration !== undefined && output.executeCommandConfiguration !== null\n            ? deserializeAws_json1_1ExecuteCommandConfiguration(output.executeCommandConfiguration, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterContainsContainerInstancesException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterContainsServicesException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterContainsTasksException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterNotFoundException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Clusters = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Cluster(entry, context);\n    });\n};\nconst deserializeAws_json1_1ClusterSetting = (output, context) => {\n    return {\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1ClusterSettings = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ClusterSetting(entry, context);\n    });\n};\nconst deserializeAws_json1_1CompatibilityList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst deserializeAws_json1_1Container = (output, context) => {\n    return {\n        containerArn: output.containerArn !== undefined && output.containerArn !== null ? output.containerArn : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        exitCode: output.exitCode !== undefined && output.exitCode !== null ? output.exitCode : undefined,\n        gpuIds: output.gpuIds !== undefined && output.gpuIds !== null\n            ? deserializeAws_json1_1GpuIds(output.gpuIds, context)\n            : undefined,\n        healthStatus: output.healthStatus !== undefined && output.healthStatus !== null ? output.healthStatus : undefined,\n        image: output.image !== undefined && output.image !== null ? output.image : undefined,\n        imageDigest: output.imageDigest !== undefined && output.imageDigest !== null ? output.imageDigest : undefined,\n        lastStatus: output.lastStatus !== undefined && output.lastStatus !== null ? output.lastStatus : undefined,\n        managedAgents: output.managedAgents !== undefined && output.managedAgents !== null\n            ? deserializeAws_json1_1ManagedAgents(output.managedAgents, context)\n            : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        memoryReservation: output.memoryReservation !== undefined && output.memoryReservation !== null\n            ? output.memoryReservation\n            : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        networkBindings: output.networkBindings !== undefined && output.networkBindings !== null\n            ? deserializeAws_json1_1NetworkBindings(output.networkBindings, context)\n            : undefined,\n        networkInterfaces: output.networkInterfaces !== undefined && output.networkInterfaces !== null\n            ? deserializeAws_json1_1NetworkInterfaces(output.networkInterfaces, context)\n            : undefined,\n        reason: output.reason !== undefined && output.reason !== null ? output.reason : undefined,\n        runtimeId: output.runtimeId !== undefined && output.runtimeId !== null ? output.runtimeId : undefined,\n        taskArn: output.taskArn !== undefined && output.taskArn !== null ? output.taskArn : undefined,\n    };\n};\nconst deserializeAws_json1_1ContainerDefinition = (output, context) => {\n    return {\n        command: output.command !== undefined && output.command !== null\n            ? deserializeAws_json1_1StringList(output.command, context)\n            : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        dependsOn: output.dependsOn !== undefined && output.dependsOn !== null\n            ? deserializeAws_json1_1ContainerDependencies(output.dependsOn, context)\n            : undefined,\n        disableNetworking: output.disableNetworking !== undefined && output.disableNetworking !== null\n            ? output.disableNetworking\n            : undefined,\n        dnsSearchDomains: output.dnsSearchDomains !== undefined && output.dnsSearchDomains !== null\n            ? deserializeAws_json1_1StringList(output.dnsSearchDomains, context)\n            : undefined,\n        dnsServers: output.dnsServers !== undefined && output.dnsServers !== null\n            ? deserializeAws_json1_1StringList(output.dnsServers, context)\n            : undefined,\n        dockerLabels: output.dockerLabels !== undefined && output.dockerLabels !== null\n            ? deserializeAws_json1_1DockerLabelsMap(output.dockerLabels, context)\n            : undefined,\n        dockerSecurityOptions: output.dockerSecurityOptions !== undefined && output.dockerSecurityOptions !== null\n            ? deserializeAws_json1_1StringList(output.dockerSecurityOptions, context)\n            : undefined,\n        entryPoint: output.entryPoint !== undefined && output.entryPoint !== null\n            ? deserializeAws_json1_1StringList(output.entryPoint, context)\n            : undefined,\n        environment: output.environment !== undefined && output.environment !== null\n            ? deserializeAws_json1_1EnvironmentVariables(output.environment, context)\n            : undefined,\n        environmentFiles: output.environmentFiles !== undefined && output.environmentFiles !== null\n            ? deserializeAws_json1_1EnvironmentFiles(output.environmentFiles, context)\n            : undefined,\n        essential: output.essential !== undefined && output.essential !== null ? output.essential : undefined,\n        extraHosts: output.extraHosts !== undefined && output.extraHosts !== null\n            ? deserializeAws_json1_1HostEntryList(output.extraHosts, context)\n            : undefined,\n        firelensConfiguration: output.firelensConfiguration !== undefined && output.firelensConfiguration !== null\n            ? deserializeAws_json1_1FirelensConfiguration(output.firelensConfiguration, context)\n            : undefined,\n        healthCheck: output.healthCheck !== undefined && output.healthCheck !== null\n            ? deserializeAws_json1_1HealthCheck(output.healthCheck, context)\n            : undefined,\n        hostname: output.hostname !== undefined && output.hostname !== null ? output.hostname : undefined,\n        image: output.image !== undefined && output.image !== null ? output.image : undefined,\n        interactive: output.interactive !== undefined && output.interactive !== null ? output.interactive : undefined,\n        links: output.links !== undefined && output.links !== null\n            ? deserializeAws_json1_1StringList(output.links, context)\n            : undefined,\n        linuxParameters: output.linuxParameters !== undefined && output.linuxParameters !== null\n            ? deserializeAws_json1_1LinuxParameters(output.linuxParameters, context)\n            : undefined,\n        logConfiguration: output.logConfiguration !== undefined && output.logConfiguration !== null\n            ? deserializeAws_json1_1LogConfiguration(output.logConfiguration, context)\n            : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        memoryReservation: output.memoryReservation !== undefined && output.memoryReservation !== null\n            ? output.memoryReservation\n            : undefined,\n        mountPoints: output.mountPoints !== undefined && output.mountPoints !== null\n            ? deserializeAws_json1_1MountPointList(output.mountPoints, context)\n            : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        portMappings: output.portMappings !== undefined && output.portMappings !== null\n            ? deserializeAws_json1_1PortMappingList(output.portMappings, context)\n            : undefined,\n        privileged: output.privileged !== undefined && output.privileged !== null ? output.privileged : undefined,\n        pseudoTerminal: output.pseudoTerminal !== undefined && output.pseudoTerminal !== null ? output.pseudoTerminal : undefined,\n        readonlyRootFilesystem: output.readonlyRootFilesystem !== undefined && output.readonlyRootFilesystem !== null\n            ? output.readonlyRootFilesystem\n            : undefined,\n        repositoryCredentials: output.repositoryCredentials !== undefined && output.repositoryCredentials !== null\n            ? deserializeAws_json1_1RepositoryCredentials(output.repositoryCredentials, context)\n            : undefined,\n        resourceRequirements: output.resourceRequirements !== undefined && output.resourceRequirements !== null\n            ? deserializeAws_json1_1ResourceRequirements(output.resourceRequirements, context)\n            : undefined,\n        secrets: output.secrets !== undefined && output.secrets !== null\n            ? deserializeAws_json1_1SecretList(output.secrets, context)\n            : undefined,\n        startTimeout: output.startTimeout !== undefined && output.startTimeout !== null ? output.startTimeout : undefined,\n        stopTimeout: output.stopTimeout !== undefined && output.stopTimeout !== null ? output.stopTimeout : undefined,\n        systemControls: output.systemControls !== undefined && output.systemControls !== null\n            ? deserializeAws_json1_1SystemControls(output.systemControls, context)\n            : undefined,\n        ulimits: output.ulimits !== undefined && output.ulimits !== null\n            ? deserializeAws_json1_1UlimitList(output.ulimits, context)\n            : undefined,\n        user: output.user !== undefined && output.user !== null ? output.user : undefined,\n        volumesFrom: output.volumesFrom !== undefined && output.volumesFrom !== null\n            ? deserializeAws_json1_1VolumeFromList(output.volumesFrom, context)\n            : undefined,\n        workingDirectory: output.workingDirectory !== undefined && output.workingDirectory !== null ? output.workingDirectory : undefined,\n    };\n};\nconst deserializeAws_json1_1ContainerDefinitions = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ContainerDefinition(entry, context);\n    });\n};\nconst deserializeAws_json1_1ContainerDependencies = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ContainerDependency(entry, context);\n    });\n};\nconst deserializeAws_json1_1ContainerDependency = (output, context) => {\n    return {\n        condition: output.condition !== undefined && output.condition !== null ? output.condition : undefined,\n        containerName: output.containerName !== undefined && output.containerName !== null ? output.containerName : undefined,\n    };\n};\nconst deserializeAws_json1_1ContainerInstance = (output, context) => {\n    return {\n        agentConnected: output.agentConnected !== undefined && output.agentConnected !== null ? output.agentConnected : undefined,\n        agentUpdateStatus: output.agentUpdateStatus !== undefined && output.agentUpdateStatus !== null\n            ? output.agentUpdateStatus\n            : undefined,\n        attachments: output.attachments !== undefined && output.attachments !== null\n            ? deserializeAws_json1_1Attachments(output.attachments, context)\n            : undefined,\n        attributes: output.attributes !== undefined && output.attributes !== null\n            ? deserializeAws_json1_1Attributes(output.attributes, context)\n            : undefined,\n        capacityProviderName: output.capacityProviderName !== undefined && output.capacityProviderName !== null\n            ? output.capacityProviderName\n            : undefined,\n        containerInstanceArn: output.containerInstanceArn !== undefined && output.containerInstanceArn !== null\n            ? output.containerInstanceArn\n            : undefined,\n        ec2InstanceId: output.ec2InstanceId !== undefined && output.ec2InstanceId !== null ? output.ec2InstanceId : undefined,\n        pendingTasksCount: output.pendingTasksCount !== undefined && output.pendingTasksCount !== null\n            ? output.pendingTasksCount\n            : undefined,\n        registeredAt: output.registeredAt !== undefined && output.registeredAt !== null\n            ? new Date(Math.round(output.registeredAt * 1000))\n            : undefined,\n        registeredResources: output.registeredResources !== undefined && output.registeredResources !== null\n            ? deserializeAws_json1_1Resources(output.registeredResources, context)\n            : undefined,\n        remainingResources: output.remainingResources !== undefined && output.remainingResources !== null\n            ? deserializeAws_json1_1Resources(output.remainingResources, context)\n            : undefined,\n        runningTasksCount: output.runningTasksCount !== undefined && output.runningTasksCount !== null\n            ? output.runningTasksCount\n            : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        statusReason: output.statusReason !== undefined && output.statusReason !== null ? output.statusReason : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        version: output.version !== undefined && output.version !== null ? output.version : undefined,\n        versionInfo: output.versionInfo !== undefined && output.versionInfo !== null\n            ? deserializeAws_json1_1VersionInfo(output.versionInfo, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ContainerInstances = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ContainerInstance(entry, context);\n    });\n};\nconst deserializeAws_json1_1ContainerOverride = (output, context) => {\n    return {\n        command: output.command !== undefined && output.command !== null\n            ? deserializeAws_json1_1StringList(output.command, context)\n            : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        environment: output.environment !== undefined && output.environment !== null\n            ? deserializeAws_json1_1EnvironmentVariables(output.environment, context)\n            : undefined,\n        environmentFiles: output.environmentFiles !== undefined && output.environmentFiles !== null\n            ? deserializeAws_json1_1EnvironmentFiles(output.environmentFiles, context)\n            : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        memoryReservation: output.memoryReservation !== undefined && output.memoryReservation !== null\n            ? output.memoryReservation\n            : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        resourceRequirements: output.resourceRequirements !== undefined && output.resourceRequirements !== null\n            ? deserializeAws_json1_1ResourceRequirements(output.resourceRequirements, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ContainerOverrides = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ContainerOverride(entry, context);\n    });\n};\nconst deserializeAws_json1_1Containers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Container(entry, context);\n    });\n};\nconst deserializeAws_json1_1CreateCapacityProviderResponse = (output, context) => {\n    return {\n        capacityProvider: output.capacityProvider !== undefined && output.capacityProvider !== null\n            ? deserializeAws_json1_1CapacityProvider(output.capacityProvider, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1CreateClusterResponse = (output, context) => {\n    return {\n        cluster: output.cluster !== undefined && output.cluster !== null\n            ? deserializeAws_json1_1Cluster(output.cluster, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1CreateServiceResponse = (output, context) => {\n    return {\n        service: output.service !== undefined && output.service !== null\n            ? deserializeAws_json1_1Service(output.service, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1CreateTaskSetResponse = (output, context) => {\n    return {\n        taskSet: output.taskSet !== undefined && output.taskSet !== null\n            ? deserializeAws_json1_1TaskSet(output.taskSet, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteAccountSettingResponse = (output, context) => {\n    return {\n        setting: output.setting !== undefined && output.setting !== null\n            ? deserializeAws_json1_1Setting(output.setting, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteAttributesResponse = (output, context) => {\n    return {\n        attributes: output.attributes !== undefined && output.attributes !== null\n            ? deserializeAws_json1_1Attributes(output.attributes, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteCapacityProviderResponse = (output, context) => {\n    return {\n        capacityProvider: output.capacityProvider !== undefined && output.capacityProvider !== null\n            ? deserializeAws_json1_1CapacityProvider(output.capacityProvider, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteClusterResponse = (output, context) => {\n    return {\n        cluster: output.cluster !== undefined && output.cluster !== null\n            ? deserializeAws_json1_1Cluster(output.cluster, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteServiceResponse = (output, context) => {\n    return {\n        service: output.service !== undefined && output.service !== null\n            ? deserializeAws_json1_1Service(output.service, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeleteTaskSetResponse = (output, context) => {\n    return {\n        taskSet: output.taskSet !== undefined && output.taskSet !== null\n            ? deserializeAws_json1_1TaskSet(output.taskSet, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1Deployment = (output, context) => {\n    return {\n        capacityProviderStrategy: output.capacityProviderStrategy !== undefined && output.capacityProviderStrategy !== null\n            ? deserializeAws_json1_1CapacityProviderStrategy(output.capacityProviderStrategy, context)\n            : undefined,\n        createdAt: output.createdAt !== undefined && output.createdAt !== null\n            ? new Date(Math.round(output.createdAt * 1000))\n            : undefined,\n        desiredCount: output.desiredCount !== undefined && output.desiredCount !== null ? output.desiredCount : undefined,\n        failedTasks: output.failedTasks !== undefined && output.failedTasks !== null ? output.failedTasks : undefined,\n        id: output.id !== undefined && output.id !== null ? output.id : undefined,\n        launchType: output.launchType !== undefined && output.launchType !== null ? output.launchType : undefined,\n        networkConfiguration: output.networkConfiguration !== undefined && output.networkConfiguration !== null\n            ? deserializeAws_json1_1NetworkConfiguration(output.networkConfiguration, context)\n            : undefined,\n        pendingCount: output.pendingCount !== undefined && output.pendingCount !== null ? output.pendingCount : undefined,\n        platformVersion: output.platformVersion !== undefined && output.platformVersion !== null ? output.platformVersion : undefined,\n        rolloutState: output.rolloutState !== undefined && output.rolloutState !== null ? output.rolloutState : undefined,\n        rolloutStateReason: output.rolloutStateReason !== undefined && output.rolloutStateReason !== null\n            ? output.rolloutStateReason\n            : undefined,\n        runningCount: output.runningCount !== undefined && output.runningCount !== null ? output.runningCount : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null ? output.taskDefinition : undefined,\n        updatedAt: output.updatedAt !== undefined && output.updatedAt !== null\n            ? new Date(Math.round(output.updatedAt * 1000))\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeploymentCircuitBreaker = (output, context) => {\n    return {\n        enable: output.enable !== undefined && output.enable !== null ? output.enable : undefined,\n        rollback: output.rollback !== undefined && output.rollback !== null ? output.rollback : undefined,\n    };\n};\nconst deserializeAws_json1_1DeploymentConfiguration = (output, context) => {\n    return {\n        deploymentCircuitBreaker: output.deploymentCircuitBreaker !== undefined && output.deploymentCircuitBreaker !== null\n            ? deserializeAws_json1_1DeploymentCircuitBreaker(output.deploymentCircuitBreaker, context)\n            : undefined,\n        maximumPercent: output.maximumPercent !== undefined && output.maximumPercent !== null ? output.maximumPercent : undefined,\n        minimumHealthyPercent: output.minimumHealthyPercent !== undefined && output.minimumHealthyPercent !== null\n            ? output.minimumHealthyPercent\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeploymentController = (output, context) => {\n    return {\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1Deployments = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Deployment(entry, context);\n    });\n};\nconst deserializeAws_json1_1DeregisterContainerInstanceResponse = (output, context) => {\n    return {\n        containerInstance: output.containerInstance !== undefined && output.containerInstance !== null\n            ? deserializeAws_json1_1ContainerInstance(output.containerInstance, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeregisterTaskDefinitionResponse = (output, context) => {\n    return {\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null\n            ? deserializeAws_json1_1TaskDefinition(output.taskDefinition, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeCapacityProvidersResponse = (output, context) => {\n    return {\n        capacityProviders: output.capacityProviders !== undefined && output.capacityProviders !== null\n            ? deserializeAws_json1_1CapacityProviders(output.capacityProviders, context)\n            : undefined,\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeClustersResponse = (output, context) => {\n    return {\n        clusters: output.clusters !== undefined && output.clusters !== null\n            ? deserializeAws_json1_1Clusters(output.clusters, context)\n            : undefined,\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeContainerInstancesResponse = (output, context) => {\n    return {\n        containerInstances: output.containerInstances !== undefined && output.containerInstances !== null\n            ? deserializeAws_json1_1ContainerInstances(output.containerInstances, context)\n            : undefined,\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeServicesResponse = (output, context) => {\n    return {\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        services: output.services !== undefined && output.services !== null\n            ? deserializeAws_json1_1Services(output.services, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeTaskDefinitionResponse = (output, context) => {\n    return {\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null\n            ? deserializeAws_json1_1TaskDefinition(output.taskDefinition, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeTaskSetsResponse = (output, context) => {\n    return {\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        taskSets: output.taskSets !== undefined && output.taskSets !== null\n            ? deserializeAws_json1_1TaskSets(output.taskSets, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DescribeTasksResponse = (output, context) => {\n    return {\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        tasks: output.tasks !== undefined && output.tasks !== null\n            ? deserializeAws_json1_1Tasks(output.tasks, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1Device = (output, context) => {\n    return {\n        containerPath: output.containerPath !== undefined && output.containerPath !== null ? output.containerPath : undefined,\n        hostPath: output.hostPath !== undefined && output.hostPath !== null ? output.hostPath : undefined,\n        permissions: output.permissions !== undefined && output.permissions !== null\n            ? deserializeAws_json1_1DeviceCgroupPermissions(output.permissions, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeviceCgroupPermissions = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst deserializeAws_json1_1DevicesList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Device(entry, context);\n    });\n};\nconst deserializeAws_json1_1DiscoverPollEndpointResponse = (output, context) => {\n    return {\n        endpoint: output.endpoint !== undefined && output.endpoint !== null ? output.endpoint : undefined,\n        telemetryEndpoint: output.telemetryEndpoint !== undefined && output.telemetryEndpoint !== null\n            ? output.telemetryEndpoint\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DockerLabelsMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst deserializeAws_json1_1DockerVolumeConfiguration = (output, context) => {\n    return {\n        autoprovision: output.autoprovision !== undefined && output.autoprovision !== null ? output.autoprovision : undefined,\n        driver: output.driver !== undefined && output.driver !== null ? output.driver : undefined,\n        driverOpts: output.driverOpts !== undefined && output.driverOpts !== null\n            ? deserializeAws_json1_1StringMap(output.driverOpts, context)\n            : undefined,\n        labels: output.labels !== undefined && output.labels !== null\n            ? deserializeAws_json1_1StringMap(output.labels, context)\n            : undefined,\n        scope: output.scope !== undefined && output.scope !== null ? output.scope : undefined,\n    };\n};\nconst deserializeAws_json1_1EFSAuthorizationConfig = (output, context) => {\n    return {\n        accessPointId: output.accessPointId !== undefined && output.accessPointId !== null ? output.accessPointId : undefined,\n        iam: output.iam !== undefined && output.iam !== null ? output.iam : undefined,\n    };\n};\nconst deserializeAws_json1_1EFSVolumeConfiguration = (output, context) => {\n    return {\n        authorizationConfig: output.authorizationConfig !== undefined && output.authorizationConfig !== null\n            ? deserializeAws_json1_1EFSAuthorizationConfig(output.authorizationConfig, context)\n            : undefined,\n        fileSystemId: output.fileSystemId !== undefined && output.fileSystemId !== null ? output.fileSystemId : undefined,\n        rootDirectory: output.rootDirectory !== undefined && output.rootDirectory !== null ? output.rootDirectory : undefined,\n        transitEncryption: output.transitEncryption !== undefined && output.transitEncryption !== null\n            ? output.transitEncryption\n            : undefined,\n        transitEncryptionPort: output.transitEncryptionPort !== undefined && output.transitEncryptionPort !== null\n            ? output.transitEncryptionPort\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1EnvironmentFile = (output, context) => {\n    return {\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1EnvironmentFiles = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1EnvironmentFile(entry, context);\n    });\n};\nconst deserializeAws_json1_1EnvironmentVariables = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst deserializeAws_json1_1EphemeralStorage = (output, context) => {\n    return {\n        sizeInGiB: output.sizeInGiB !== undefined && output.sizeInGiB !== null ? output.sizeInGiB : undefined,\n    };\n};\nconst deserializeAws_json1_1ExecuteCommandConfiguration = (output, context) => {\n    return {\n        kmsKeyId: output.kmsKeyId !== undefined && output.kmsKeyId !== null ? output.kmsKeyId : undefined,\n        logConfiguration: output.logConfiguration !== undefined && output.logConfiguration !== null\n            ? deserializeAws_json1_1ExecuteCommandLogConfiguration(output.logConfiguration, context)\n            : undefined,\n        logging: output.logging !== undefined && output.logging !== null ? output.logging : undefined,\n    };\n};\nconst deserializeAws_json1_1ExecuteCommandLogConfiguration = (output, context) => {\n    return {\n        cloudWatchEncryptionEnabled: output.cloudWatchEncryptionEnabled !== undefined && output.cloudWatchEncryptionEnabled !== null\n            ? output.cloudWatchEncryptionEnabled\n            : undefined,\n        cloudWatchLogGroupName: output.cloudWatchLogGroupName !== undefined && output.cloudWatchLogGroupName !== null\n            ? output.cloudWatchLogGroupName\n            : undefined,\n        s3BucketName: output.s3BucketName !== undefined && output.s3BucketName !== null ? output.s3BucketName : undefined,\n        s3EncryptionEnabled: output.s3EncryptionEnabled !== undefined && output.s3EncryptionEnabled !== null\n            ? output.s3EncryptionEnabled\n            : undefined,\n        s3KeyPrefix: output.s3KeyPrefix !== undefined && output.s3KeyPrefix !== null ? output.s3KeyPrefix : undefined,\n    };\n};\nconst deserializeAws_json1_1ExecuteCommandResponse = (output, context) => {\n    return {\n        clusterArn: output.clusterArn !== undefined && output.clusterArn !== null ? output.clusterArn : undefined,\n        containerArn: output.containerArn !== undefined && output.containerArn !== null ? output.containerArn : undefined,\n        containerName: output.containerName !== undefined && output.containerName !== null ? output.containerName : undefined,\n        interactive: output.interactive !== undefined && output.interactive !== null ? output.interactive : undefined,\n        session: output.session !== undefined && output.session !== null\n            ? deserializeAws_json1_1Session(output.session, context)\n            : undefined,\n        taskArn: output.taskArn !== undefined && output.taskArn !== null ? output.taskArn : undefined,\n    };\n};\nconst deserializeAws_json1_1Failure = (output, context) => {\n    return {\n        arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n        detail: output.detail !== undefined && output.detail !== null ? output.detail : undefined,\n        reason: output.reason !== undefined && output.reason !== null ? output.reason : undefined,\n    };\n};\nconst deserializeAws_json1_1Failures = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Failure(entry, context);\n    });\n};\nconst deserializeAws_json1_1FirelensConfiguration = (output, context) => {\n    return {\n        options: output.options !== undefined && output.options !== null\n            ? deserializeAws_json1_1FirelensConfigurationOptionsMap(output.options, context)\n            : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1FirelensConfigurationOptionsMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst deserializeAws_json1_1FSxWindowsFileServerAuthorizationConfig = (output, context) => {\n    return {\n        credentialsParameter: output.credentialsParameter !== undefined && output.credentialsParameter !== null\n            ? output.credentialsParameter\n            : undefined,\n        domain: output.domain !== undefined && output.domain !== null ? output.domain : undefined,\n    };\n};\nconst deserializeAws_json1_1FSxWindowsFileServerVolumeConfiguration = (output, context) => {\n    return {\n        authorizationConfig: output.authorizationConfig !== undefined && output.authorizationConfig !== null\n            ? deserializeAws_json1_1FSxWindowsFileServerAuthorizationConfig(output.authorizationConfig, context)\n            : undefined,\n        fileSystemId: output.fileSystemId !== undefined && output.fileSystemId !== null ? output.fileSystemId : undefined,\n        rootDirectory: output.rootDirectory !== undefined && output.rootDirectory !== null ? output.rootDirectory : undefined,\n    };\n};\nconst deserializeAws_json1_1GpuIds = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst deserializeAws_json1_1HealthCheck = (output, context) => {\n    return {\n        command: output.command !== undefined && output.command !== null\n            ? deserializeAws_json1_1StringList(output.command, context)\n            : undefined,\n        interval: output.interval !== undefined && output.interval !== null ? output.interval : undefined,\n        retries: output.retries !== undefined && output.retries !== null ? output.retries : undefined,\n        startPeriod: output.startPeriod !== undefined && output.startPeriod !== null ? output.startPeriod : undefined,\n        timeout: output.timeout !== undefined && output.timeout !== null ? output.timeout : undefined,\n    };\n};\nconst deserializeAws_json1_1HostEntry = (output, context) => {\n    return {\n        hostname: output.hostname !== undefined && output.hostname !== null ? output.hostname : undefined,\n        ipAddress: output.ipAddress !== undefined && output.ipAddress !== null ? output.ipAddress : undefined,\n    };\n};\nconst deserializeAws_json1_1HostEntryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1HostEntry(entry, context);\n    });\n};\nconst deserializeAws_json1_1HostVolumeProperties = (output, context) => {\n    return {\n        sourcePath: output.sourcePath !== undefined && output.sourcePath !== null ? output.sourcePath : undefined,\n    };\n};\nconst deserializeAws_json1_1InferenceAccelerator = (output, context) => {\n    return {\n        deviceName: output.deviceName !== undefined && output.deviceName !== null ? output.deviceName : undefined,\n        deviceType: output.deviceType !== undefined && output.deviceType !== null ? output.deviceType : undefined,\n    };\n};\nconst deserializeAws_json1_1InferenceAcceleratorOverride = (output, context) => {\n    return {\n        deviceName: output.deviceName !== undefined && output.deviceName !== null ? output.deviceName : undefined,\n        deviceType: output.deviceType !== undefined && output.deviceType !== null ? output.deviceType : undefined,\n    };\n};\nconst deserializeAws_json1_1InferenceAcceleratorOverrides = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1InferenceAcceleratorOverride(entry, context);\n    });\n};\nconst deserializeAws_json1_1InferenceAccelerators = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1InferenceAccelerator(entry, context);\n    });\n};\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1KernelCapabilities = (output, context) => {\n    return {\n        add: output.add !== undefined && output.add !== null\n            ? deserializeAws_json1_1StringList(output.add, context)\n            : undefined,\n        drop: output.drop !== undefined && output.drop !== null\n            ? deserializeAws_json1_1StringList(output.drop, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1KeyValuePair = (output, context) => {\n    return {\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1LinuxParameters = (output, context) => {\n    return {\n        capabilities: output.capabilities !== undefined && output.capabilities !== null\n            ? deserializeAws_json1_1KernelCapabilities(output.capabilities, context)\n            : undefined,\n        devices: output.devices !== undefined && output.devices !== null\n            ? deserializeAws_json1_1DevicesList(output.devices, context)\n            : undefined,\n        initProcessEnabled: output.initProcessEnabled !== undefined && output.initProcessEnabled !== null\n            ? output.initProcessEnabled\n            : undefined,\n        maxSwap: output.maxSwap !== undefined && output.maxSwap !== null ? output.maxSwap : undefined,\n        sharedMemorySize: output.sharedMemorySize !== undefined && output.sharedMemorySize !== null ? output.sharedMemorySize : undefined,\n        swappiness: output.swappiness !== undefined && output.swappiness !== null ? output.swappiness : undefined,\n        tmpfs: output.tmpfs !== undefined && output.tmpfs !== null\n            ? deserializeAws_json1_1TmpfsList(output.tmpfs, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ListAccountSettingsResponse = (output, context) => {\n    return {\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n        settings: output.settings !== undefined && output.settings !== null\n            ? deserializeAws_json1_1Settings(output.settings, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ListAttributesResponse = (output, context) => {\n    return {\n        attributes: output.attributes !== undefined && output.attributes !== null\n            ? deserializeAws_json1_1Attributes(output.attributes, context)\n            : undefined,\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    };\n};\nconst deserializeAws_json1_1ListClustersResponse = (output, context) => {\n    return {\n        clusterArns: output.clusterArns !== undefined && output.clusterArns !== null\n            ? deserializeAws_json1_1StringList(output.clusterArns, context)\n            : undefined,\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    };\n};\nconst deserializeAws_json1_1ListContainerInstancesResponse = (output, context) => {\n    return {\n        containerInstanceArns: output.containerInstanceArns !== undefined && output.containerInstanceArns !== null\n            ? deserializeAws_json1_1StringList(output.containerInstanceArns, context)\n            : undefined,\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    };\n};\nconst deserializeAws_json1_1ListServicesResponse = (output, context) => {\n    return {\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n        serviceArns: output.serviceArns !== undefined && output.serviceArns !== null\n            ? deserializeAws_json1_1StringList(output.serviceArns, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n    return {\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1ListTaskDefinitionFamiliesResponse = (output, context) => {\n    return {\n        families: output.families !== undefined && output.families !== null\n            ? deserializeAws_json1_1StringList(output.families, context)\n            : undefined,\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    };\n};\nconst deserializeAws_json1_1ListTaskDefinitionsResponse = (output, context) => {\n    return {\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n        taskDefinitionArns: output.taskDefinitionArns !== undefined && output.taskDefinitionArns !== null\n            ? deserializeAws_json1_1StringList(output.taskDefinitionArns, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ListTasksResponse = (output, context) => {\n    return {\n        nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n        taskArns: output.taskArns !== undefined && output.taskArns !== null\n            ? deserializeAws_json1_1StringList(output.taskArns, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1LoadBalancer = (output, context) => {\n    return {\n        containerName: output.containerName !== undefined && output.containerName !== null ? output.containerName : undefined,\n        containerPort: output.containerPort !== undefined && output.containerPort !== null ? output.containerPort : undefined,\n        loadBalancerName: output.loadBalancerName !== undefined && output.loadBalancerName !== null ? output.loadBalancerName : undefined,\n        targetGroupArn: output.targetGroupArn !== undefined && output.targetGroupArn !== null ? output.targetGroupArn : undefined,\n    };\n};\nconst deserializeAws_json1_1LoadBalancers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1LoadBalancer(entry, context);\n    });\n};\nconst deserializeAws_json1_1LogConfiguration = (output, context) => {\n    return {\n        logDriver: output.logDriver !== undefined && output.logDriver !== null ? output.logDriver : undefined,\n        options: output.options !== undefined && output.options !== null\n            ? deserializeAws_json1_1LogConfigurationOptionsMap(output.options, context)\n            : undefined,\n        secretOptions: output.secretOptions !== undefined && output.secretOptions !== null\n            ? deserializeAws_json1_1SecretList(output.secretOptions, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1LogConfigurationOptionsMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst deserializeAws_json1_1ManagedAgent = (output, context) => {\n    return {\n        lastStartedAt: output.lastStartedAt !== undefined && output.lastStartedAt !== null\n            ? new Date(Math.round(output.lastStartedAt * 1000))\n            : undefined,\n        lastStatus: output.lastStatus !== undefined && output.lastStatus !== null ? output.lastStatus : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        reason: output.reason !== undefined && output.reason !== null ? output.reason : undefined,\n    };\n};\nconst deserializeAws_json1_1ManagedAgents = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ManagedAgent(entry, context);\n    });\n};\nconst deserializeAws_json1_1ManagedScaling = (output, context) => {\n    return {\n        instanceWarmupPeriod: output.instanceWarmupPeriod !== undefined && output.instanceWarmupPeriod !== null\n            ? output.instanceWarmupPeriod\n            : undefined,\n        maximumScalingStepSize: output.maximumScalingStepSize !== undefined && output.maximumScalingStepSize !== null\n            ? output.maximumScalingStepSize\n            : undefined,\n        minimumScalingStepSize: output.minimumScalingStepSize !== undefined && output.minimumScalingStepSize !== null\n            ? output.minimumScalingStepSize\n            : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        targetCapacity: output.targetCapacity !== undefined && output.targetCapacity !== null ? output.targetCapacity : undefined,\n    };\n};\nconst deserializeAws_json1_1MissingVersionException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1MountPoint = (output, context) => {\n    return {\n        containerPath: output.containerPath !== undefined && output.containerPath !== null ? output.containerPath : undefined,\n        readOnly: output.readOnly !== undefined && output.readOnly !== null ? output.readOnly : undefined,\n        sourceVolume: output.sourceVolume !== undefined && output.sourceVolume !== null ? output.sourceVolume : undefined,\n    };\n};\nconst deserializeAws_json1_1MountPointList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1MountPoint(entry, context);\n    });\n};\nconst deserializeAws_json1_1NetworkBinding = (output, context) => {\n    return {\n        bindIP: output.bindIP !== undefined && output.bindIP !== null ? output.bindIP : undefined,\n        containerPort: output.containerPort !== undefined && output.containerPort !== null ? output.containerPort : undefined,\n        hostPort: output.hostPort !== undefined && output.hostPort !== null ? output.hostPort : undefined,\n        protocol: output.protocol !== undefined && output.protocol !== null ? output.protocol : undefined,\n    };\n};\nconst deserializeAws_json1_1NetworkBindings = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1NetworkBinding(entry, context);\n    });\n};\nconst deserializeAws_json1_1NetworkConfiguration = (output, context) => {\n    return {\n        awsvpcConfiguration: output.awsvpcConfiguration !== undefined && output.awsvpcConfiguration !== null\n            ? deserializeAws_json1_1AwsVpcConfiguration(output.awsvpcConfiguration, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1NetworkInterface = (output, context) => {\n    return {\n        attachmentId: output.attachmentId !== undefined && output.attachmentId !== null ? output.attachmentId : undefined,\n        ipv6Address: output.ipv6Address !== undefined && output.ipv6Address !== null ? output.ipv6Address : undefined,\n        privateIpv4Address: output.privateIpv4Address !== undefined && output.privateIpv4Address !== null\n            ? output.privateIpv4Address\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1NetworkInterfaces = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1NetworkInterface(entry, context);\n    });\n};\nconst deserializeAws_json1_1NoUpdateAvailableException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1PlacementConstraint = (output, context) => {\n    return {\n        expression: output.expression !== undefined && output.expression !== null ? output.expression : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1PlacementConstraints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1PlacementConstraint(entry, context);\n    });\n};\nconst deserializeAws_json1_1PlacementStrategies = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1PlacementStrategy(entry, context);\n    });\n};\nconst deserializeAws_json1_1PlacementStrategy = (output, context) => {\n    return {\n        field: output.field !== undefined && output.field !== null ? output.field : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1PlatformTaskDefinitionIncompatibilityException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1PlatformUnknownException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1PortMapping = (output, context) => {\n    return {\n        containerPort: output.containerPort !== undefined && output.containerPort !== null ? output.containerPort : undefined,\n        hostPort: output.hostPort !== undefined && output.hostPort !== null ? output.hostPort : undefined,\n        protocol: output.protocol !== undefined && output.protocol !== null ? output.protocol : undefined,\n    };\n};\nconst deserializeAws_json1_1PortMappingList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1PortMapping(entry, context);\n    });\n};\nconst deserializeAws_json1_1ProxyConfiguration = (output, context) => {\n    return {\n        containerName: output.containerName !== undefined && output.containerName !== null ? output.containerName : undefined,\n        properties: output.properties !== undefined && output.properties !== null\n            ? deserializeAws_json1_1ProxyConfigurationProperties(output.properties, context)\n            : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1ProxyConfigurationProperties = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst deserializeAws_json1_1PutAccountSettingDefaultResponse = (output, context) => {\n    return {\n        setting: output.setting !== undefined && output.setting !== null\n            ? deserializeAws_json1_1Setting(output.setting, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1PutAccountSettingResponse = (output, context) => {\n    return {\n        setting: output.setting !== undefined && output.setting !== null\n            ? deserializeAws_json1_1Setting(output.setting, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1PutAttributesResponse = (output, context) => {\n    return {\n        attributes: output.attributes !== undefined && output.attributes !== null\n            ? deserializeAws_json1_1Attributes(output.attributes, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1PutClusterCapacityProvidersResponse = (output, context) => {\n    return {\n        cluster: output.cluster !== undefined && output.cluster !== null\n            ? deserializeAws_json1_1Cluster(output.cluster, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1RegisterContainerInstanceResponse = (output, context) => {\n    return {\n        containerInstance: output.containerInstance !== undefined && output.containerInstance !== null\n            ? deserializeAws_json1_1ContainerInstance(output.containerInstance, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1RegisterTaskDefinitionResponse = (output, context) => {\n    return {\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null\n            ? deserializeAws_json1_1TaskDefinition(output.taskDefinition, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1RepositoryCredentials = (output, context) => {\n    return {\n        credentialsParameter: output.credentialsParameter !== undefined && output.credentialsParameter !== null\n            ? output.credentialsParameter\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1RequiresAttributes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Attribute(entry, context);\n    });\n};\nconst deserializeAws_json1_1Resource = (output, context) => {\n    return {\n        doubleValue: output.doubleValue !== undefined && output.doubleValue !== null ? output.doubleValue : undefined,\n        integerValue: output.integerValue !== undefined && output.integerValue !== null ? output.integerValue : undefined,\n        longValue: output.longValue !== undefined && output.longValue !== null ? output.longValue : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        stringSetValue: output.stringSetValue !== undefined && output.stringSetValue !== null\n            ? deserializeAws_json1_1StringList(output.stringSetValue, context)\n            : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1ResourceInUseException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ResourceRequirement = (output, context) => {\n    return {\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1ResourceRequirements = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ResourceRequirement(entry, context);\n    });\n};\nconst deserializeAws_json1_1Resources = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Resource(entry, context);\n    });\n};\nconst deserializeAws_json1_1RunTaskResponse = (output, context) => {\n    return {\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        tasks: output.tasks !== undefined && output.tasks !== null\n            ? deserializeAws_json1_1Tasks(output.tasks, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1Scale = (output, context) => {\n    return {\n        unit: output.unit !== undefined && output.unit !== null ? output.unit : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1Secret = (output, context) => {\n    return {\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        valueFrom: output.valueFrom !== undefined && output.valueFrom !== null ? output.valueFrom : undefined,\n    };\n};\nconst deserializeAws_json1_1SecretList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Secret(entry, context);\n    });\n};\nconst deserializeAws_json1_1ServerException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Service = (output, context) => {\n    return {\n        capacityProviderStrategy: output.capacityProviderStrategy !== undefined && output.capacityProviderStrategy !== null\n            ? deserializeAws_json1_1CapacityProviderStrategy(output.capacityProviderStrategy, context)\n            : undefined,\n        clusterArn: output.clusterArn !== undefined && output.clusterArn !== null ? output.clusterArn : undefined,\n        createdAt: output.createdAt !== undefined && output.createdAt !== null\n            ? new Date(Math.round(output.createdAt * 1000))\n            : undefined,\n        createdBy: output.createdBy !== undefined && output.createdBy !== null ? output.createdBy : undefined,\n        deploymentConfiguration: output.deploymentConfiguration !== undefined && output.deploymentConfiguration !== null\n            ? deserializeAws_json1_1DeploymentConfiguration(output.deploymentConfiguration, context)\n            : undefined,\n        deploymentController: output.deploymentController !== undefined && output.deploymentController !== null\n            ? deserializeAws_json1_1DeploymentController(output.deploymentController, context)\n            : undefined,\n        deployments: output.deployments !== undefined && output.deployments !== null\n            ? deserializeAws_json1_1Deployments(output.deployments, context)\n            : undefined,\n        desiredCount: output.desiredCount !== undefined && output.desiredCount !== null ? output.desiredCount : undefined,\n        enableECSManagedTags: output.enableECSManagedTags !== undefined && output.enableECSManagedTags !== null\n            ? output.enableECSManagedTags\n            : undefined,\n        enableExecuteCommand: output.enableExecuteCommand !== undefined && output.enableExecuteCommand !== null\n            ? output.enableExecuteCommand\n            : undefined,\n        events: output.events !== undefined && output.events !== null\n            ? deserializeAws_json1_1ServiceEvents(output.events, context)\n            : undefined,\n        healthCheckGracePeriodSeconds: output.healthCheckGracePeriodSeconds !== undefined && output.healthCheckGracePeriodSeconds !== null\n            ? output.healthCheckGracePeriodSeconds\n            : undefined,\n        launchType: output.launchType !== undefined && output.launchType !== null ? output.launchType : undefined,\n        loadBalancers: output.loadBalancers !== undefined && output.loadBalancers !== null\n            ? deserializeAws_json1_1LoadBalancers(output.loadBalancers, context)\n            : undefined,\n        networkConfiguration: output.networkConfiguration !== undefined && output.networkConfiguration !== null\n            ? deserializeAws_json1_1NetworkConfiguration(output.networkConfiguration, context)\n            : undefined,\n        pendingCount: output.pendingCount !== undefined && output.pendingCount !== null ? output.pendingCount : undefined,\n        placementConstraints: output.placementConstraints !== undefined && output.placementConstraints !== null\n            ? deserializeAws_json1_1PlacementConstraints(output.placementConstraints, context)\n            : undefined,\n        placementStrategy: output.placementStrategy !== undefined && output.placementStrategy !== null\n            ? deserializeAws_json1_1PlacementStrategies(output.placementStrategy, context)\n            : undefined,\n        platformVersion: output.platformVersion !== undefined && output.platformVersion !== null ? output.platformVersion : undefined,\n        propagateTags: output.propagateTags !== undefined && output.propagateTags !== null ? output.propagateTags : undefined,\n        roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n        runningCount: output.runningCount !== undefined && output.runningCount !== null ? output.runningCount : undefined,\n        schedulingStrategy: output.schedulingStrategy !== undefined && output.schedulingStrategy !== null\n            ? output.schedulingStrategy\n            : undefined,\n        serviceArn: output.serviceArn !== undefined && output.serviceArn !== null ? output.serviceArn : undefined,\n        serviceName: output.serviceName !== undefined && output.serviceName !== null ? output.serviceName : undefined,\n        serviceRegistries: output.serviceRegistries !== undefined && output.serviceRegistries !== null\n            ? deserializeAws_json1_1ServiceRegistries(output.serviceRegistries, context)\n            : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null ? output.taskDefinition : undefined,\n        taskSets: output.taskSets !== undefined && output.taskSets !== null\n            ? deserializeAws_json1_1TaskSets(output.taskSets, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1ServiceEvent = (output, context) => {\n    return {\n        createdAt: output.createdAt !== undefined && output.createdAt !== null\n            ? new Date(Math.round(output.createdAt * 1000))\n            : undefined,\n        id: output.id !== undefined && output.id !== null ? output.id : undefined,\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ServiceEvents = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ServiceEvent(entry, context);\n    });\n};\nconst deserializeAws_json1_1ServiceNotActiveException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ServiceNotFoundException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1ServiceRegistries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1ServiceRegistry(entry, context);\n    });\n};\nconst deserializeAws_json1_1ServiceRegistry = (output, context) => {\n    return {\n        containerName: output.containerName !== undefined && output.containerName !== null ? output.containerName : undefined,\n        containerPort: output.containerPort !== undefined && output.containerPort !== null ? output.containerPort : undefined,\n        port: output.port !== undefined && output.port !== null ? output.port : undefined,\n        registryArn: output.registryArn !== undefined && output.registryArn !== null ? output.registryArn : undefined,\n    };\n};\nconst deserializeAws_json1_1Services = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Service(entry, context);\n    });\n};\nconst deserializeAws_json1_1Session = (output, context) => {\n    return {\n        sessionId: output.sessionId !== undefined && output.sessionId !== null ? output.sessionId : undefined,\n        streamUrl: output.streamUrl !== undefined && output.streamUrl !== null ? output.streamUrl : undefined,\n        tokenValue: output.tokenValue !== undefined && output.tokenValue !== null ? output.tokenValue : undefined,\n    };\n};\nconst deserializeAws_json1_1Setting = (output, context) => {\n    return {\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        principalArn: output.principalArn !== undefined && output.principalArn !== null ? output.principalArn : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1Settings = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Setting(entry, context);\n    });\n};\nconst deserializeAws_json1_1StartTaskResponse = (output, context) => {\n    return {\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n        tasks: output.tasks !== undefined && output.tasks !== null\n            ? deserializeAws_json1_1Tasks(output.tasks, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1Statistics = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1KeyValuePair(entry, context);\n    });\n};\nconst deserializeAws_json1_1StopTaskResponse = (output, context) => {\n    return {\n        task: output.task !== undefined && output.task !== null ? deserializeAws_json1_1Task(output.task, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1StringList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst deserializeAws_json1_1StringMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst deserializeAws_json1_1SubmitAttachmentStateChangesResponse = (output, context) => {\n    return {\n        acknowledgment: output.acknowledgment !== undefined && output.acknowledgment !== null ? output.acknowledgment : undefined,\n    };\n};\nconst deserializeAws_json1_1SubmitContainerStateChangeResponse = (output, context) => {\n    return {\n        acknowledgment: output.acknowledgment !== undefined && output.acknowledgment !== null ? output.acknowledgment : undefined,\n    };\n};\nconst deserializeAws_json1_1SubmitTaskStateChangeResponse = (output, context) => {\n    return {\n        acknowledgment: output.acknowledgment !== undefined && output.acknowledgment !== null ? output.acknowledgment : undefined,\n    };\n};\nconst deserializeAws_json1_1SystemControl = (output, context) => {\n    return {\n        namespace: output.namespace !== undefined && output.namespace !== null ? output.namespace : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1SystemControls = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1SystemControl(entry, context);\n    });\n};\nconst deserializeAws_json1_1Tag = (output, context) => {\n    return {\n        key: output.key !== undefined && output.key !== null ? output.key : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeAws_json1_1Tags = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Tag(entry, context);\n    });\n};\nconst deserializeAws_json1_1TargetNotConnectedException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1TargetNotFoundException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1Task = (output, context) => {\n    return {\n        attachments: output.attachments !== undefined && output.attachments !== null\n            ? deserializeAws_json1_1Attachments(output.attachments, context)\n            : undefined,\n        attributes: output.attributes !== undefined && output.attributes !== null\n            ? deserializeAws_json1_1Attributes(output.attributes, context)\n            : undefined,\n        availabilityZone: output.availabilityZone !== undefined && output.availabilityZone !== null ? output.availabilityZone : undefined,\n        capacityProviderName: output.capacityProviderName !== undefined && output.capacityProviderName !== null\n            ? output.capacityProviderName\n            : undefined,\n        clusterArn: output.clusterArn !== undefined && output.clusterArn !== null ? output.clusterArn : undefined,\n        connectivity: output.connectivity !== undefined && output.connectivity !== null ? output.connectivity : undefined,\n        connectivityAt: output.connectivityAt !== undefined && output.connectivityAt !== null\n            ? new Date(Math.round(output.connectivityAt * 1000))\n            : undefined,\n        containerInstanceArn: output.containerInstanceArn !== undefined && output.containerInstanceArn !== null\n            ? output.containerInstanceArn\n            : undefined,\n        containers: output.containers !== undefined && output.containers !== null\n            ? deserializeAws_json1_1Containers(output.containers, context)\n            : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        createdAt: output.createdAt !== undefined && output.createdAt !== null\n            ? new Date(Math.round(output.createdAt * 1000))\n            : undefined,\n        desiredStatus: output.desiredStatus !== undefined && output.desiredStatus !== null ? output.desiredStatus : undefined,\n        enableExecuteCommand: output.enableExecuteCommand !== undefined && output.enableExecuteCommand !== null\n            ? output.enableExecuteCommand\n            : undefined,\n        ephemeralStorage: output.ephemeralStorage !== undefined && output.ephemeralStorage !== null\n            ? deserializeAws_json1_1EphemeralStorage(output.ephemeralStorage, context)\n            : undefined,\n        executionStoppedAt: output.executionStoppedAt !== undefined && output.executionStoppedAt !== null\n            ? new Date(Math.round(output.executionStoppedAt * 1000))\n            : undefined,\n        group: output.group !== undefined && output.group !== null ? output.group : undefined,\n        healthStatus: output.healthStatus !== undefined && output.healthStatus !== null ? output.healthStatus : undefined,\n        inferenceAccelerators: output.inferenceAccelerators !== undefined && output.inferenceAccelerators !== null\n            ? deserializeAws_json1_1InferenceAccelerators(output.inferenceAccelerators, context)\n            : undefined,\n        lastStatus: output.lastStatus !== undefined && output.lastStatus !== null ? output.lastStatus : undefined,\n        launchType: output.launchType !== undefined && output.launchType !== null ? output.launchType : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        overrides: output.overrides !== undefined && output.overrides !== null\n            ? deserializeAws_json1_1TaskOverride(output.overrides, context)\n            : undefined,\n        platformVersion: output.platformVersion !== undefined && output.platformVersion !== null ? output.platformVersion : undefined,\n        pullStartedAt: output.pullStartedAt !== undefined && output.pullStartedAt !== null\n            ? new Date(Math.round(output.pullStartedAt * 1000))\n            : undefined,\n        pullStoppedAt: output.pullStoppedAt !== undefined && output.pullStoppedAt !== null\n            ? new Date(Math.round(output.pullStoppedAt * 1000))\n            : undefined,\n        startedAt: output.startedAt !== undefined && output.startedAt !== null\n            ? new Date(Math.round(output.startedAt * 1000))\n            : undefined,\n        startedBy: output.startedBy !== undefined && output.startedBy !== null ? output.startedBy : undefined,\n        stopCode: output.stopCode !== undefined && output.stopCode !== null ? output.stopCode : undefined,\n        stoppedAt: output.stoppedAt !== undefined && output.stoppedAt !== null\n            ? new Date(Math.round(output.stoppedAt * 1000))\n            : undefined,\n        stoppedReason: output.stoppedReason !== undefined && output.stoppedReason !== null ? output.stoppedReason : undefined,\n        stoppingAt: output.stoppingAt !== undefined && output.stoppingAt !== null\n            ? new Date(Math.round(output.stoppingAt * 1000))\n            : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        taskArn: output.taskArn !== undefined && output.taskArn !== null ? output.taskArn : undefined,\n        taskDefinitionArn: output.taskDefinitionArn !== undefined && output.taskDefinitionArn !== null\n            ? output.taskDefinitionArn\n            : undefined,\n        version: output.version !== undefined && output.version !== null ? output.version : undefined,\n    };\n};\nconst deserializeAws_json1_1TaskDefinition = (output, context) => {\n    return {\n        compatibilities: output.compatibilities !== undefined && output.compatibilities !== null\n            ? deserializeAws_json1_1CompatibilityList(output.compatibilities, context)\n            : undefined,\n        containerDefinitions: output.containerDefinitions !== undefined && output.containerDefinitions !== null\n            ? deserializeAws_json1_1ContainerDefinitions(output.containerDefinitions, context)\n            : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        deregisteredAt: output.deregisteredAt !== undefined && output.deregisteredAt !== null\n            ? new Date(Math.round(output.deregisteredAt * 1000))\n            : undefined,\n        ephemeralStorage: output.ephemeralStorage !== undefined && output.ephemeralStorage !== null\n            ? deserializeAws_json1_1EphemeralStorage(output.ephemeralStorage, context)\n            : undefined,\n        executionRoleArn: output.executionRoleArn !== undefined && output.executionRoleArn !== null ? output.executionRoleArn : undefined,\n        family: output.family !== undefined && output.family !== null ? output.family : undefined,\n        inferenceAccelerators: output.inferenceAccelerators !== undefined && output.inferenceAccelerators !== null\n            ? deserializeAws_json1_1InferenceAccelerators(output.inferenceAccelerators, context)\n            : undefined,\n        ipcMode: output.ipcMode !== undefined && output.ipcMode !== null ? output.ipcMode : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        networkMode: output.networkMode !== undefined && output.networkMode !== null ? output.networkMode : undefined,\n        pidMode: output.pidMode !== undefined && output.pidMode !== null ? output.pidMode : undefined,\n        placementConstraints: output.placementConstraints !== undefined && output.placementConstraints !== null\n            ? deserializeAws_json1_1TaskDefinitionPlacementConstraints(output.placementConstraints, context)\n            : undefined,\n        proxyConfiguration: output.proxyConfiguration !== undefined && output.proxyConfiguration !== null\n            ? deserializeAws_json1_1ProxyConfiguration(output.proxyConfiguration, context)\n            : undefined,\n        registeredAt: output.registeredAt !== undefined && output.registeredAt !== null\n            ? new Date(Math.round(output.registeredAt * 1000))\n            : undefined,\n        registeredBy: output.registeredBy !== undefined && output.registeredBy !== null ? output.registeredBy : undefined,\n        requiresAttributes: output.requiresAttributes !== undefined && output.requiresAttributes !== null\n            ? deserializeAws_json1_1RequiresAttributes(output.requiresAttributes, context)\n            : undefined,\n        requiresCompatibilities: output.requiresCompatibilities !== undefined && output.requiresCompatibilities !== null\n            ? deserializeAws_json1_1CompatibilityList(output.requiresCompatibilities, context)\n            : undefined,\n        revision: output.revision !== undefined && output.revision !== null ? output.revision : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        taskDefinitionArn: output.taskDefinitionArn !== undefined && output.taskDefinitionArn !== null\n            ? output.taskDefinitionArn\n            : undefined,\n        taskRoleArn: output.taskRoleArn !== undefined && output.taskRoleArn !== null ? output.taskRoleArn : undefined,\n        volumes: output.volumes !== undefined && output.volumes !== null\n            ? deserializeAws_json1_1VolumeList(output.volumes, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1TaskDefinitionPlacementConstraint = (output, context) => {\n    return {\n        expression: output.expression !== undefined && output.expression !== null ? output.expression : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nconst deserializeAws_json1_1TaskDefinitionPlacementConstraints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1TaskDefinitionPlacementConstraint(entry, context);\n    });\n};\nconst deserializeAws_json1_1TaskOverride = (output, context) => {\n    return {\n        containerOverrides: output.containerOverrides !== undefined && output.containerOverrides !== null\n            ? deserializeAws_json1_1ContainerOverrides(output.containerOverrides, context)\n            : undefined,\n        cpu: output.cpu !== undefined && output.cpu !== null ? output.cpu : undefined,\n        ephemeralStorage: output.ephemeralStorage !== undefined && output.ephemeralStorage !== null\n            ? deserializeAws_json1_1EphemeralStorage(output.ephemeralStorage, context)\n            : undefined,\n        executionRoleArn: output.executionRoleArn !== undefined && output.executionRoleArn !== null ? output.executionRoleArn : undefined,\n        inferenceAcceleratorOverrides: output.inferenceAcceleratorOverrides !== undefined && output.inferenceAcceleratorOverrides !== null\n            ? deserializeAws_json1_1InferenceAcceleratorOverrides(output.inferenceAcceleratorOverrides, context)\n            : undefined,\n        memory: output.memory !== undefined && output.memory !== null ? output.memory : undefined,\n        taskRoleArn: output.taskRoleArn !== undefined && output.taskRoleArn !== null ? output.taskRoleArn : undefined,\n    };\n};\nconst deserializeAws_json1_1Tasks = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Task(entry, context);\n    });\n};\nconst deserializeAws_json1_1TaskSet = (output, context) => {\n    return {\n        capacityProviderStrategy: output.capacityProviderStrategy !== undefined && output.capacityProviderStrategy !== null\n            ? deserializeAws_json1_1CapacityProviderStrategy(output.capacityProviderStrategy, context)\n            : undefined,\n        clusterArn: output.clusterArn !== undefined && output.clusterArn !== null ? output.clusterArn : undefined,\n        computedDesiredCount: output.computedDesiredCount !== undefined && output.computedDesiredCount !== null\n            ? output.computedDesiredCount\n            : undefined,\n        createdAt: output.createdAt !== undefined && output.createdAt !== null\n            ? new Date(Math.round(output.createdAt * 1000))\n            : undefined,\n        externalId: output.externalId !== undefined && output.externalId !== null ? output.externalId : undefined,\n        id: output.id !== undefined && output.id !== null ? output.id : undefined,\n        launchType: output.launchType !== undefined && output.launchType !== null ? output.launchType : undefined,\n        loadBalancers: output.loadBalancers !== undefined && output.loadBalancers !== null\n            ? deserializeAws_json1_1LoadBalancers(output.loadBalancers, context)\n            : undefined,\n        networkConfiguration: output.networkConfiguration !== undefined && output.networkConfiguration !== null\n            ? deserializeAws_json1_1NetworkConfiguration(output.networkConfiguration, context)\n            : undefined,\n        pendingCount: output.pendingCount !== undefined && output.pendingCount !== null ? output.pendingCount : undefined,\n        platformVersion: output.platformVersion !== undefined && output.platformVersion !== null ? output.platformVersion : undefined,\n        runningCount: output.runningCount !== undefined && output.runningCount !== null ? output.runningCount : undefined,\n        scale: output.scale !== undefined && output.scale !== null\n            ? deserializeAws_json1_1Scale(output.scale, context)\n            : undefined,\n        serviceArn: output.serviceArn !== undefined && output.serviceArn !== null ? output.serviceArn : undefined,\n        serviceRegistries: output.serviceRegistries !== undefined && output.serviceRegistries !== null\n            ? deserializeAws_json1_1ServiceRegistries(output.serviceRegistries, context)\n            : undefined,\n        stabilityStatus: output.stabilityStatus !== undefined && output.stabilityStatus !== null ? output.stabilityStatus : undefined,\n        stabilityStatusAt: output.stabilityStatusAt !== undefined && output.stabilityStatusAt !== null\n            ? new Date(Math.round(output.stabilityStatusAt * 1000))\n            : undefined,\n        startedBy: output.startedBy !== undefined && output.startedBy !== null ? output.startedBy : undefined,\n        status: output.status !== undefined && output.status !== null ? output.status : undefined,\n        tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n        taskDefinition: output.taskDefinition !== undefined && output.taskDefinition !== null ? output.taskDefinition : undefined,\n        taskSetArn: output.taskSetArn !== undefined && output.taskSetArn !== null ? output.taskSetArn : undefined,\n        updatedAt: output.updatedAt !== undefined && output.updatedAt !== null\n            ? new Date(Math.round(output.updatedAt * 1000))\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1TaskSetNotFoundException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1TaskSets = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1TaskSet(entry, context);\n    });\n};\nconst deserializeAws_json1_1Tmpfs = (output, context) => {\n    return {\n        containerPath: output.containerPath !== undefined && output.containerPath !== null ? output.containerPath : undefined,\n        mountOptions: output.mountOptions !== undefined && output.mountOptions !== null\n            ? deserializeAws_json1_1StringList(output.mountOptions, context)\n            : undefined,\n        size: output.size !== undefined && output.size !== null ? output.size : undefined,\n    };\n};\nconst deserializeAws_json1_1TmpfsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Tmpfs(entry, context);\n    });\n};\nconst deserializeAws_json1_1Ulimit = (output, context) => {\n    return {\n        hardLimit: output.hardLimit !== undefined && output.hardLimit !== null ? output.hardLimit : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n        softLimit: output.softLimit !== undefined && output.softLimit !== null ? output.softLimit : undefined,\n    };\n};\nconst deserializeAws_json1_1UlimitList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Ulimit(entry, context);\n    });\n};\nconst deserializeAws_json1_1UnsupportedFeatureException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeAws_json1_1UpdateCapacityProviderResponse = (output, context) => {\n    return {\n        capacityProvider: output.capacityProvider !== undefined && output.capacityProvider !== null\n            ? deserializeAws_json1_1CapacityProvider(output.capacityProvider, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateClusterResponse = (output, context) => {\n    return {\n        cluster: output.cluster !== undefined && output.cluster !== null\n            ? deserializeAws_json1_1Cluster(output.cluster, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateClusterSettingsResponse = (output, context) => {\n    return {\n        cluster: output.cluster !== undefined && output.cluster !== null\n            ? deserializeAws_json1_1Cluster(output.cluster, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateContainerAgentResponse = (output, context) => {\n    return {\n        containerInstance: output.containerInstance !== undefined && output.containerInstance !== null\n            ? deserializeAws_json1_1ContainerInstance(output.containerInstance, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateContainerInstancesStateResponse = (output, context) => {\n    return {\n        containerInstances: output.containerInstances !== undefined && output.containerInstances !== null\n            ? deserializeAws_json1_1ContainerInstances(output.containerInstances, context)\n            : undefined,\n        failures: output.failures !== undefined && output.failures !== null\n            ? deserializeAws_json1_1Failures(output.failures, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateInProgressException = (output, context) => {\n    return {\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateServicePrimaryTaskSetResponse = (output, context) => {\n    return {\n        taskSet: output.taskSet !== undefined && output.taskSet !== null\n            ? deserializeAws_json1_1TaskSet(output.taskSet, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateServiceResponse = (output, context) => {\n    return {\n        service: output.service !== undefined && output.service !== null\n            ? deserializeAws_json1_1Service(output.service, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1UpdateTaskSetResponse = (output, context) => {\n    return {\n        taskSet: output.taskSet !== undefined && output.taskSet !== null\n            ? deserializeAws_json1_1TaskSet(output.taskSet, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1VersionInfo = (output, context) => {\n    return {\n        agentHash: output.agentHash !== undefined && output.agentHash !== null ? output.agentHash : undefined,\n        agentVersion: output.agentVersion !== undefined && output.agentVersion !== null ? output.agentVersion : undefined,\n        dockerVersion: output.dockerVersion !== undefined && output.dockerVersion !== null ? output.dockerVersion : undefined,\n    };\n};\nconst deserializeAws_json1_1Volume = (output, context) => {\n    return {\n        dockerVolumeConfiguration: output.dockerVolumeConfiguration !== undefined && output.dockerVolumeConfiguration !== null\n            ? deserializeAws_json1_1DockerVolumeConfiguration(output.dockerVolumeConfiguration, context)\n            : undefined,\n        efsVolumeConfiguration: output.efsVolumeConfiguration !== undefined && output.efsVolumeConfiguration !== null\n            ? deserializeAws_json1_1EFSVolumeConfiguration(output.efsVolumeConfiguration, context)\n            : undefined,\n        fsxWindowsFileServerVolumeConfiguration: output.fsxWindowsFileServerVolumeConfiguration !== undefined &&\n            output.fsxWindowsFileServerVolumeConfiguration !== null\n            ? deserializeAws_json1_1FSxWindowsFileServerVolumeConfiguration(output.fsxWindowsFileServerVolumeConfiguration, context)\n            : undefined,\n        host: output.host !== undefined && output.host !== null\n            ? deserializeAws_json1_1HostVolumeProperties(output.host, context)\n            : undefined,\n        name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    };\n};\nconst deserializeAws_json1_1VolumeFrom = (output, context) => {\n    return {\n        readOnly: output.readOnly !== undefined && output.readOnly !== null ? output.readOnly : undefined,\n        sourceContainer: output.sourceContainer !== undefined && output.sourceContainer !== null ? output.sourceContainer : undefined,\n    };\n};\nconst deserializeAws_json1_1VolumeFromList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1VolumeFrom(entry, context);\n    });\n};\nconst deserializeAws_json1_1VolumeList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1Volume(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_json1_1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDefaultValues = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"./package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\n/**\n * @internal\n */\nexports.ClientDefaultValues = {\n    ...runtimeConfig_shared_1.ClientSharedValues,\n    runtime: \"node\",\n    base64Decoder: util_base64_node_1.fromBase64,\n    base64Encoder: util_base64_node_1.toBase64,\n    bodyLengthChecker: util_body_length_node_1.calculateBodyLength,\n    credentialDefaultProvider: client_sts_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n    defaultUserAgentProvider: util_user_agent_node_1.defaultUserAgent({\n        serviceId: runtimeConfig_shared_1.ClientSharedValues.serviceId,\n        clientVersion: package_json_1.default.version,\n    }),\n    maxAttempts: node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n    region: node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n    requestHandler: new node_http_handler_1.NodeHttpHandler(),\n    retryModeProvider: node_config_provider_1.loadConfig(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n    sha256: hash_node_1.Hash.bind(null, \"sha256\"),\n    streamCollector: node_http_handler_1.streamCollector,\n    utf8Decoder: util_utf8_node_1.fromUtf8,\n    utf8Encoder: util_utf8_node_1.toUtf8,\n};\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientSharedValues = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nexports.ClientSharedValues = {\n    apiVersion: \"2014-11-13\",\n    disableHostPrefix: false,\n    logger: {},\n    regionInfoProvider: endpoints_1.defaultRegionInfoProvider,\n    serviceId: \"ECS\",\n    urlParser: url_parser_1.parseUrl,\n};\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilServicesInactive = exports.waitForServicesInactive = void 0;\nconst DescribeServicesCommand_1 = require(\"../commands/DescribeServicesCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new DescribeServicesCommand_1.DescribeServicesCommand(input));\n        reason = result;\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.failures);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.reason;\n                });\n                return projection_3;\n            };\n            for (let anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"MISSING\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.services);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.status;\n                });\n                return projection_3;\n            };\n            for (let anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"INACTIVE\") {\n                    return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n *\n *  @deprecated Use waitUntilServicesInactive instead. waitForServicesInactive does not throw error in non-success cases.\n */\nconst waitForServicesInactive = async (params, input) => {\n    const serviceDefaults = { minDelay: 15, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForServicesInactive = waitForServicesInactive;\n/**\n *\n *  @param params - Waiter configuration options.\n *  @param input - The input to DescribeServicesCommand for polling.\n */\nconst waitUntilServicesInactive = async (params, input) => {\n    const serviceDefaults = { minDelay: 15, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilServicesInactive = waitUntilServicesInactive;\n//# sourceMappingURL=waitForServicesInactive.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilTasksRunning = exports.waitForTasksRunning = void 0;\nconst DescribeTasksCommand_1 = require(\"../commands/DescribeTasksCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new DescribeTasksCommand_1.DescribeTasksCommand(input));\n        reason = result;\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.tasks);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.lastStatus;\n                });\n                return projection_3;\n            };\n            for (let anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"STOPPED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.failures);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.reason;\n                });\n                return projection_3;\n            };\n            for (let anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"MISSING\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.tasks);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.lastStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (let element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"RUNNING\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n *\n *  @deprecated Use waitUntilTasksRunning instead. waitForTasksRunning does not throw error in non-success cases.\n */\nconst waitForTasksRunning = async (params, input) => {\n    const serviceDefaults = { minDelay: 6, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForTasksRunning = waitForTasksRunning;\n/**\n *\n *  @param params - Waiter configuration options.\n *  @param input - The input to DescribeTasksCommand for polling.\n */\nconst waitUntilTasksRunning = async (params, input) => {\n    const serviceDefaults = { minDelay: 6, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilTasksRunning = waitUntilTasksRunning;\n//# sourceMappingURL=waitForTasksRunning.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilTasksStopped = exports.waitForTasksStopped = void 0;\nconst DescribeTasksCommand_1 = require(\"../commands/DescribeTasksCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new DescribeTasksCommand_1.DescribeTasksCommand(input));\n        reason = result;\n        try {\n            let returnComparator = () => {\n                let flat_1 = [].concat(...result.tasks);\n                let projection_3 = flat_1.map((element_2) => {\n                    return element_2.lastStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (let element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"STOPPED\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n *\n *  @deprecated Use waitUntilTasksStopped instead. waitForTasksStopped does not throw error in non-success cases.\n */\nconst waitForTasksStopped = async (params, input) => {\n    const serviceDefaults = { minDelay: 6, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForTasksStopped = waitForTasksStopped;\n/**\n *\n *  @param params - Waiter configuration options.\n *  @param input - The input to DescribeTasksCommand for polling.\n */\nconst waitUntilTasksStopped = async (params, input) => {\n    const serviceDefaults = { minDelay: 6, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilTasksStopped = waitUntilTasksStopped;\n//# sourceMappingURL=waitForTasksStopped.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst SSOClient_1 = require(\"./SSOClient\");\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\n/**\n * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user\n *       access to AWS SSO resources such as the user portal. Users can get AWS account applications\n *       and roles assigned to them and get federated into the application.</p>\n *\n *          <p>For general information about AWS SSO, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">What is AWS\n *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>\n *\n *          <p>This API reference guide describes the AWS SSO Portal operations that you can call\n *       programatically and includes detailed information on data types and errors.</p>\n *\n *          <note>\n *             <p>AWS provides SDKs that consist of libraries and sample code for various programming\n *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a\n *         convenient way to create programmatic access to AWS SSO and other AWS services. For more\n *         information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p>\n *          </note>\n */\nclass SSO extends SSOClient_1.SSOClient {\n    getRoleCredentials(args, optionsOrCb, cb) {\n        const command = new GetRoleCredentialsCommand_1.GetRoleCredentialsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountRoles(args, optionsOrCb, cb) {\n        const command = new ListAccountRolesCommand_1.ListAccountRolesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccounts(args, optionsOrCb, cb) {\n        const command = new ListAccountsCommand_1.ListAccountsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    logout(args, optionsOrCb, cb) {\n        const command = new LogoutCommand_1.LogoutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SSO = SSO;\n//# sourceMappingURL=SSO.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user\n *       access to AWS SSO resources such as the user portal. Users can get AWS account applications\n *       and roles assigned to them and get federated into the application.</p>\n *\n *          <p>For general information about AWS SSO, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">What is AWS\n *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>\n *\n *          <p>This API reference guide describes the AWS SSO Portal operations that you can call\n *       programatically and includes detailed information on data types and errors.</p>\n *\n *          <note>\n *             <p>AWS provides SDKs that consist of libraries and sample code for various programming\n *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a\n *         convenient way to create programmatic access to AWS SSO and other AWS services. For more\n *         information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p>\n *          </note>\n */\nclass SSOClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = {\n            ...runtimeConfig_1.ClientDefaultValues,\n            ...configuration,\n        };\n        let _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        let _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        let _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        let _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        let _config_5 = middleware_user_agent_1.resolveUserAgentConfig(_config_4);\n        super(_config_5);\n        this.config = _config_5;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n//# sourceMappingURL=SSOClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the STS short-term credentials for a given role name that is assigned to the\n *       user.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, GetRoleCredentialsCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, GetRoleCredentialsCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new GetRoleCredentialsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetRoleCredentialsCommandInput} for command's `input` shape.\n * @see {@link GetRoleCredentialsCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1GetRoleCredentialsCommand(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n//# sourceMappingURL=GetRoleCredentialsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists all roles that are assigned to the user for a given AWS account.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, ListAccountRolesCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, ListAccountRolesCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new ListAccountRolesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAccountRolesCommandInput} for command's `input` shape.\n * @see {@link ListAccountRolesCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountRolesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountRolesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountRolesCommand(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n//# sourceMappingURL=ListAccountRolesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the\n *       administrator of the account. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers\">Assign User Access</a> in the <i>AWS SSO User Guide</i>. This operation\n *       returns a paginated response.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, ListAccountsCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, ListAccountsCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new ListAccountsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAccountsCommandInput} for command's `input` shape.\n * @see {@link ListAccountsCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAccountsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountsCommand(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n//# sourceMappingURL=ListAccountsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes the client- and server-side session that is associated with the user.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, LogoutCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, LogoutCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new LogoutCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link LogoutCommandInput} for command's `input` shape.\n * @see {@link LogoutCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass LogoutCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1LogoutCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1LogoutCommand(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n//# sourceMappingURL=LogoutCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\n// Partition default templates\nconst AWS_TEMPLATE = \"portal.sso.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"portal.sso.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"portal.sso.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"portal.sso.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"portal.sso.{region}.amazonaws.com\";\n// Partition regions\nconst AWS_REGIONS = new Set([\n    \"af-south-1\",\n    \"ap-east-1\",\n    \"ap-northeast-1\",\n    \"ap-northeast-2\",\n    \"ap-northeast-3\",\n    \"ap-south-1\",\n    \"ap-southeast-1\",\n    \"ap-southeast-2\",\n    \"ca-central-1\",\n    \"eu-central-1\",\n    \"eu-north-1\",\n    \"eu-south-1\",\n    \"eu-west-1\",\n    \"eu-west-2\",\n    \"eu-west-3\",\n    \"me-south-1\",\n    \"sa-east-1\",\n    \"us-east-1\",\n    \"us-east-2\",\n    \"us-west-1\",\n    \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nconst defaultRegionInfoProvider = (region, options) => {\n    let regionInfo = undefined;\n    switch (region) {\n        // First, try to match exact region names.\n        case \"ap-southeast-1\":\n            regionInfo = {\n                hostname: \"portal.sso.ap-southeast-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"ap-southeast-1\",\n            };\n            break;\n        case \"ap-southeast-2\":\n            regionInfo = {\n                hostname: \"portal.sso.ap-southeast-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"ap-southeast-2\",\n            };\n            break;\n        case \"ca-central-1\":\n            regionInfo = {\n                hostname: \"portal.sso.ca-central-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"ca-central-1\",\n            };\n            break;\n        case \"eu-central-1\":\n            regionInfo = {\n                hostname: \"portal.sso.eu-central-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"eu-central-1\",\n            };\n            break;\n        case \"eu-west-1\":\n            regionInfo = {\n                hostname: \"portal.sso.eu-west-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"eu-west-1\",\n            };\n            break;\n        case \"eu-west-2\":\n            regionInfo = {\n                hostname: \"portal.sso.eu-west-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"eu-west-2\",\n            };\n            break;\n        case \"us-east-1\":\n            regionInfo = {\n                hostname: \"portal.sso.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-1\",\n            };\n            break;\n        case \"us-east-2\":\n            regionInfo = {\n                hostname: \"portal.sso.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-2\",\n            };\n            break;\n        case \"us-west-2\":\n            regionInfo = {\n                hostname: \"portal.sso.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-2\",\n            };\n            break;\n        // Next, try to match partition endpoints.\n        default:\n            if (AWS_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n            if (AWS_CN_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-cn\",\n                };\n            }\n            if (AWS_ISO_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso\",\n                };\n            }\n            if (AWS_ISO_B_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso-b\",\n                };\n            }\n            if (AWS_US_GOV_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-us-gov\",\n                };\n            }\n            // Finally, assume it's an AWS partition endpoint.\n            if (regionInfo === undefined) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n    }\n    return Promise.resolve({ signingService: \"awsssoportal\", ...regionInfo });\n};\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SSOClient\"), exports);\ntslib_1.__exportStar(require(\"./SSO\"), exports);\ntslib_1.__exportStar(require(\"./commands/GetRoleCredentialsCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListAccountRolesCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListAccountRolesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/ListAccountsCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/ListAccountsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./commands/LogoutCommand\"), exports);\ntslib_1.__exportStar(require(\"./pagination/Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequest = exports.ListAccountsResponse = exports.ListAccountsRequest = exports.ListAccountRolesResponse = exports.RoleInfo = exports.ListAccountRolesRequest = exports.UnauthorizedException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.InvalidRequestException = exports.GetRoleCredentialsResponse = exports.RoleCredentials = exports.GetRoleCredentialsRequest = exports.AccountInfo = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nvar AccountInfo;\n(function (AccountInfo) {\n    /**\n     * @internal\n     */\n    AccountInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountInfo = exports.AccountInfo || (exports.AccountInfo = {}));\nvar GetRoleCredentialsRequest;\n(function (GetRoleCredentialsRequest) {\n    /**\n     * @internal\n     */\n    GetRoleCredentialsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(GetRoleCredentialsRequest = exports.GetRoleCredentialsRequest || (exports.GetRoleCredentialsRequest = {}));\nvar RoleCredentials;\n(function (RoleCredentials) {\n    /**\n     * @internal\n     */\n    RoleCredentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n        ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(RoleCredentials = exports.RoleCredentials || (exports.RoleCredentials = {}));\nvar GetRoleCredentialsResponse;\n(function (GetRoleCredentialsResponse) {\n    /**\n     * @internal\n     */\n    GetRoleCredentialsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.roleCredentials && { roleCredentials: RoleCredentials.filterSensitiveLog(obj.roleCredentials) }),\n    });\n})(GetRoleCredentialsResponse = exports.GetRoleCredentialsResponse || (exports.GetRoleCredentialsResponse = {}));\nvar InvalidRequestException;\n(function (InvalidRequestException) {\n    /**\n     * @internal\n     */\n    InvalidRequestException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidRequestException = exports.InvalidRequestException || (exports.InvalidRequestException = {}));\nvar ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n    /**\n     * @internal\n     */\n    ResourceNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceNotFoundException = exports.ResourceNotFoundException || (exports.ResourceNotFoundException = {}));\nvar TooManyRequestsException;\n(function (TooManyRequestsException) {\n    /**\n     * @internal\n     */\n    TooManyRequestsException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TooManyRequestsException = exports.TooManyRequestsException || (exports.TooManyRequestsException = {}));\nvar UnauthorizedException;\n(function (UnauthorizedException) {\n    /**\n     * @internal\n     */\n    UnauthorizedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UnauthorizedException = exports.UnauthorizedException || (exports.UnauthorizedException = {}));\nvar ListAccountRolesRequest;\n(function (ListAccountRolesRequest) {\n    /**\n     * @internal\n     */\n    ListAccountRolesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountRolesRequest = exports.ListAccountRolesRequest || (exports.ListAccountRolesRequest = {}));\nvar RoleInfo;\n(function (RoleInfo) {\n    /**\n     * @internal\n     */\n    RoleInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RoleInfo = exports.RoleInfo || (exports.RoleInfo = {}));\nvar ListAccountRolesResponse;\n(function (ListAccountRolesResponse) {\n    /**\n     * @internal\n     */\n    ListAccountRolesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountRolesResponse = exports.ListAccountRolesResponse || (exports.ListAccountRolesResponse = {}));\nvar ListAccountsRequest;\n(function (ListAccountsRequest) {\n    /**\n     * @internal\n     */\n    ListAccountsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountsRequest = exports.ListAccountsRequest || (exports.ListAccountsRequest = {}));\nvar ListAccountsResponse;\n(function (ListAccountsResponse) {\n    /**\n     * @internal\n     */\n    ListAccountsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountsResponse = exports.ListAccountsResponse || (exports.ListAccountsResponse = {}));\nvar LogoutRequest;\n(function (LogoutRequest) {\n    /**\n     * @internal\n     */\n    LogoutRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(LogoutRequest = exports.LogoutRequest || (exports.LogoutRequest = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAccountRoles(input, ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n//# sourceMappingURL=ListAccountRolesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAccounts(input, ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n//# sourceMappingURL=ListAccountsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_restJson1LogoutCommand = exports.deserializeAws_restJson1ListAccountsCommand = exports.deserializeAws_restJson1ListAccountRolesCommand = exports.deserializeAws_restJson1GetRoleCredentialsCommand = exports.serializeAws_restJson1LogoutCommand = exports.serializeAws_restJson1ListAccountsCommand = exports.serializeAws_restJson1ListAccountRolesCommand = exports.serializeAws_restJson1GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = \"/federation/credentials\";\n    const query = {\n        ...(input.roleName !== undefined && { role_name: input.roleName }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetRoleCredentialsCommand = serializeAws_restJson1GetRoleCredentialsCommand;\nconst serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = \"/assignment/roles\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountRolesCommand = serializeAws_restJson1ListAccountRolesCommand;\nconst serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = \"/assignment/accounts\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n    };\n    let body;\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountsCommand = serializeAws_restJson1ListAccountsCommand;\nconst serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = \"/logout\";\n    let body;\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1LogoutCommand = serializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        roleCredentials: undefined,\n    };\n    const data = await parseBody(output.body, context);\n    if (data.roleCredentials !== undefined && data.roleCredentials !== null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetRoleCredentialsCommand = deserializeAws_restJson1GetRoleCredentialsCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        nextToken: undefined,\n        roleList: undefined,\n    };\n    const data = await parseBody(output.body, context);\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = data.nextToken;\n    }\n    if (data.roleList !== undefined && data.roleList !== null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountRolesCommand = deserializeAws_restJson1ListAccountRolesCommand;\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        accountList: undefined,\n        nextToken: undefined,\n    };\n    const data = await parseBody(output.body, context);\n    if (data.accountList !== undefined && data.accountList !== null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = data.nextToken;\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountsCommand = deserializeAws_restJson1ListAccountsCommand;\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1LogoutCommand = deserializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n    }\n    return contents;\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"UnauthorizedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n    }\n    return contents;\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: output.accountId !== undefined && output.accountId !== null ? output.accountId : undefined,\n        accountName: output.accountName !== undefined && output.accountName !== null ? output.accountName : undefined,\n        emailAddress: output.emailAddress !== undefined && output.emailAddress !== null ? output.emailAddress : undefined,\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: output.accessKeyId !== undefined && output.accessKeyId !== null ? output.accessKeyId : undefined,\n        expiration: output.expiration !== undefined && output.expiration !== null ? output.expiration : undefined,\n        secretAccessKey: output.secretAccessKey !== undefined && output.secretAccessKey !== null ? output.secretAccessKey : undefined,\n        sessionToken: output.sessionToken !== undefined && output.sessionToken !== null ? output.sessionToken : undefined,\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: output.accountId !== undefined && output.accountId !== null ? output.accountId : undefined,\n        roleName: output.roleName !== undefined && output.roleName !== null ? output.roleName : undefined,\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDefaultValues = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"./package.json\"));\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\n/**\n * @internal\n */\nexports.ClientDefaultValues = {\n    ...runtimeConfig_shared_1.ClientSharedValues,\n    runtime: \"node\",\n    base64Decoder: util_base64_node_1.fromBase64,\n    base64Encoder: util_base64_node_1.toBase64,\n    bodyLengthChecker: util_body_length_node_1.calculateBodyLength,\n    defaultUserAgentProvider: util_user_agent_node_1.defaultUserAgent({\n        serviceId: runtimeConfig_shared_1.ClientSharedValues.serviceId,\n        clientVersion: package_json_1.default.version,\n    }),\n    maxAttempts: node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n    region: node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n    requestHandler: new node_http_handler_1.NodeHttpHandler(),\n    retryModeProvider: node_config_provider_1.loadConfig(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n    sha256: hash_node_1.Hash.bind(null, \"sha256\"),\n    streamCollector: node_http_handler_1.streamCollector,\n    utf8Decoder: util_utf8_node_1.fromUtf8,\n    utf8Encoder: util_utf8_node_1.toUtf8,\n};\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientSharedValues = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nexports.ClientSharedValues = {\n    apiVersion: \"2019-06-10\",\n    disableHostPrefix: false,\n    logger: {},\n    regionInfoProvider: endpoints_1.defaultRegionInfoProvider,\n    serviceId: \"SSO\",\n    urlParser: url_parser_1.parseUrl,\n};\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst STSClient_1 = require(\"./STSClient\");\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\n/**\n * <fullname>AWS Security Token Service</fullname>\n *          <p>AWS Security Token Service (STS) enables you to request temporary, limited-privilege\n *       credentials for AWS Identity and Access Management (IAM) users or for users that you\n *       authenticate (federated users). This guide provides descriptions of the STS API. For\n *       more information about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a>.</p>\n */\nclass STS extends STSClient_1.STSClient {\n    assumeRole(args, optionsOrCb, cb) {\n        const command = new AssumeRoleCommand_1.AssumeRoleCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithSAML(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithWebIdentity(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    decodeAuthorizationMessage(args, optionsOrCb, cb) {\n        const command = new DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccessKeyInfo(args, optionsOrCb, cb) {\n        const command = new GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCallerIdentity(args, optionsOrCb, cb) {\n        const command = new GetCallerIdentityCommand_1.GetCallerIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFederationToken(args, optionsOrCb, cb) {\n        const command = new GetFederationTokenCommand_1.GetFederationTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSessionToken(args, optionsOrCb, cb) {\n        const command = new GetSessionTokenCommand_1.GetSessionTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.STS = STS;\n//# sourceMappingURL=STS.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <fullname>AWS Security Token Service</fullname>\n *          <p>AWS Security Token Service (STS) enables you to request temporary, limited-privilege\n *       credentials for AWS Identity and Access Management (IAM) users or for users that you\n *       authenticate (federated users). This guide provides descriptions of the STS API. For\n *       more information about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a>.</p>\n */\nclass STSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = {\n            ...runtimeConfig_1.ClientDefaultValues,\n            ...configuration,\n        };\n        let _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        let _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        let _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        let _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        let _config_5 = middleware_sdk_sts_1.resolveStsAuthConfig(_config_4, STSClient);\n        let _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n//# sourceMappingURL=STSClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials that you can use to access AWS\n *             resources that you might not normally have access to. These temporary credentials\n *             consist of an access key ID, a secret access key, and a security token. Typically, you\n *             use <code>AssumeRole</code> within your account or for cross-account access. For a\n *             comparison of <code>AssumeRole</code> with other API operations that produce temporary\n *             credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *                 Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n *                 the AWS STS API operations</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRole</code> can be used to\n *          make API calls to any AWS service with the following exception: You cannot call the\n *          AWS STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent AWS API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>To assume a role from a different account, your AWS account must be trusted by the\n *          role. The trust relationship is defined in the role's trust policy when the role is\n *          created. That trust policy states which accounts are allowed to delegate that access to\n *          users in the account. </p>\n *          <p>A user who wants to access a role in a different account must also have permissions that\n *          are delegated from the user account administrator. The administrator must attach a policy\n *          that allows the user to call <code>AssumeRole</code> for the ARN of the role in the other\n *          account. If the user is in the same account as the role, then you can do either of the\n *          following:</p>\n *          <ul>\n *             <li>\n *                <p>Attach a policy to the user (identical to the previous user in a different\n *                account).</p>\n *             </li>\n *             <li>\n *                <p>Add the user as a principal directly in the role's trust policy.</p>\n *             </li>\n *          </ul>\n *          <p>In this case, the trust policy acts as an IAM resource-based policy. Users in the same\n *          account as the role do not need explicit permission to assume the role. For more\n *          information about trust policies and resource-based policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">IAM Policies</a> in\n *          the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can pass tag key-value pairs to your session. These tags are called\n *          session tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Using MFA with AssumeRole</b>\n *          </p>\n *          <p>(Optional) You can include multi-factor authentication (MFA) information when you call\n *             <code>AssumeRole</code>. This is useful for cross-account scenarios to ensure that the\n *          user that assumes the role has been authenticated with an AWS MFA device. In that\n *          scenario, the trust policy of the role being assumed includes a condition that tests for\n *          MFA authentication. If the caller does not include valid MFA information, the request to\n *          assume the role is denied. The condition in a trust policy that tests for MFA\n *          authentication might look like the following example.</p>\n *          <p>\n *             <code>\"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": true}}</code>\n *          </p>\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\">Configuring MFA-Protected API Access</a>\n *          in the <i>IAM User Guide</i> guide.</p>\n *          <p>To use MFA with <code>AssumeRole</code>, you pass values for the\n *             <code>SerialNumber</code> and <code>TokenCode</code> parameters. The\n *             <code>SerialNumber</code> value identifies the user's hardware or virtual MFA device.\n *          The <code>TokenCode</code> is the time-based one-time password (TOTP) that the MFA device\n *          produces. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleCommand(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n//# sourceMappingURL=AssumeRoleCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials for users who have been authenticated\n *          via a SAML authentication response. This operation provides a mechanism for tying an\n *          enterprise identity store or directory to role-based AWS access without user-specific\n *          credentials or configuration. For a comparison of <code>AssumeRoleWithSAML</code> with the\n *          other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             AWS STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>The temporary security credentials returned by this operation consist of an access key\n *          ID, a secret access key, and a security token. Applications can use these temporary\n *          security credentials to sign calls to AWS services.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>By default, the temporary security credentials created by\n *             <code>AssumeRoleWithSAML</code> last for one hour. However, you can use the optional\n *             <code>DurationSeconds</code> parameter to specify the duration of your session. Your\n *          role session lasts for the duration that you specify, or until the time specified in the\n *          SAML authentication response's <code>SessionNotOnOrAfter</code> value, whichever is\n *          shorter. You can provide a <code>DurationSeconds</code> value from 900 seconds (15 minutes)\n *          up to the maximum session duration setting for the role. This setting can have a value from\n *          1 hour to 12 hours. To learn how to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View the\n *             Maximum Session Duration Setting for a Role</a> in the\n *             <i>IAM User Guide</i>. The maximum session duration limit applies when\n *          you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI\n *          commands. However the limit does not apply when you use those operations to create a\n *          console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <note>\n *            <p>\n *                <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-role-chaining\">Role chaining</a> limits your AWS CLI or AWS API\n *                role session to a maximum of one hour. When you use the <code>AssumeRole</code> API\n *                operation to assume a role, you can specify the duration of your role session with\n *                the <code>DurationSeconds</code> parameter. You can specify a parameter value of up\n *                to 43200 seconds (12 hours), depending on the maximum session duration setting for\n *                your role. However, if you assume a role using role chaining and provide a\n *                <code>DurationSeconds</code> parameter value greater than one hour, the\n *                operation fails.</p>\n *          </note>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRoleWithSAML</code> can be\n *          used to make API calls to any AWS service with the following exception: you cannot call\n *          the STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent AWS API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>Calling <code>AssumeRoleWithSAML</code> does not require the use of AWS security\n *          credentials. The identity of the caller is validated by using keys in the metadata document\n *          that is uploaded for the SAML provider entity for your identity provider. </p>\n *          <important>\n *             <p>Calling <code>AssumeRoleWithSAML</code> can result in an entry in your AWS CloudTrail logs.\n *             The entry includes the value in the <code>NameID</code> element of the SAML assertion.\n *             We recommend that you use a <code>NameIDType</code> that is not associated with any\n *             personally identifiable information (PII). For example, you could instead use the\n *             persistent identifier\n *             (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\n *          </important>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can configure your IdP to pass attributes into your SAML assertion as\n *          session tags. Each session tag consists of a key name and an associated value. For more\n *          information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128\n *          characters and the values can’t exceed 256 characters. For these and additional limits, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\">IAM\n *             and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\n *\n *          <note>\n *             <p>An AWS conversion compresses the passed session policies and session tags into a\n *             packed binary format that has a separate limit. Your request can fail for this limit\n *             even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\n *             response element indicates by percentage how close the policies and tags for your\n *             request are to the upper size limit.\n *             </p>\n *          </note>\n *          <p>You can pass a session tag with the same key as a tag that is\n *          attached to the role. When you do, session tags override the role's tags with the same\n *          key.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>SAML Configuration</b>\n *          </p>\n *          <p>Before your application can call <code>AssumeRoleWithSAML</code>, you must configure\n *          your SAML identity provider (IdP) to issue the claims required by AWS. Additionally, you\n *          must use AWS Identity and Access Management (IAM) to create a SAML provider entity in your AWS account that\n *          represents your identity provider. You must also create an IAM role that specifies this\n *          SAML provider in its trust policy. </p>\n *          <p>For more information, see the following resources:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About\n *                   SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html\">Creating SAML Identity Providers</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html\">Configuring\n *                   a Relying Party and Claims</a> in the <i>IAM User Guide</i>.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html\">Creating a Role for SAML 2.0 Federation</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleWithSAMLCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleWithSAMLCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleWithSAMLCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleWithSAMLCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleWithSAMLCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithSAMLCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithSAMLCommand(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n//# sourceMappingURL=AssumeRoleWithSAMLCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials for users who have been authenticated in\n *          a mobile or web application with a web identity provider. Example providers include Amazon Cognito,\n *          Login with Amazon, Facebook, Google, or any OpenID Connect-compatible identity\n *          provider.</p>\n *          <note>\n *             <p>For mobile applications, we recommend that you use Amazon Cognito. You can use Amazon Cognito with the\n *                <a href=\"http://aws.amazon.com/sdkforios/\">AWS SDK for iOS Developer Guide</a> and the <a href=\"http://aws.amazon.com/sdkforandroid/\">AWS SDK for Android Developer Guide</a> to uniquely\n *             identify a user. You can also supply the user with a consistent identity throughout the\n *             lifetime of an application.</p>\n *             <p>To learn more about Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840\">Amazon Cognito Overview</a> in\n *                <i>AWS SDK for Android Developer Guide</i> and <a href=\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664\">Amazon Cognito Overview</a> in the\n *                <i>AWS SDK for iOS Developer Guide</i>.</p>\n *          </note>\n *          <p>Calling <code>AssumeRoleWithWebIdentity</code> does not require the use of AWS\n *          security credentials. Therefore, you can distribute an application (for example, on mobile\n *          devices) that requests temporary security credentials without including long-term AWS\n *          credentials in the application. You also don't need to deploy server-based proxy services\n *          that use long-term AWS credentials. Instead, the identity of the caller is validated by\n *          using a token from the web identity provider. For a comparison of\n *             <code>AssumeRoleWithWebIdentity</code> with the other API operations that produce\n *          temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             AWS STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>The temporary security credentials returned by this API consist of an access key ID, a\n *          secret access key, and a security token. Applications can use these temporary security\n *          credentials to sign calls to AWS service API operations.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>By default, the temporary security credentials created by\n *             <code>AssumeRoleWithWebIdentity</code> last for one hour. However, you can use the\n *          optional <code>DurationSeconds</code> parameter to specify the duration of your session.\n *          You can provide a value from 900 seconds (15 minutes) up to the maximum session duration\n *          setting for the role. This setting can have a value from 1 hour to 12 hours. To learn how\n *          to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View the\n *             Maximum Session Duration Setting for a Role</a> in the\n *             <i>IAM User Guide</i>. The maximum session duration limit applies when\n *          you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI\n *          commands. However the limit does not apply when you use those operations to create a\n *          console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the\n *             <i>IAM User Guide</i>. </p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRoleWithWebIdentity</code> can\n *          be used to make API calls to any AWS service with the following exception: you cannot\n *          call the STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent AWS API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can configure your IdP to pass attributes into your web identity token as\n *          session tags. Each session tag consists of a key name and an associated value. For more\n *          information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128\n *          characters and the values can’t exceed 256 characters. For these and additional limits, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\">IAM\n *             and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\n *\n *          <note>\n *             <p>An AWS conversion compresses the passed session policies and session tags into a\n *             packed binary format that has a separate limit. Your request can fail for this limit\n *             even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\n *             response element indicates by percentage how close the policies and tags for your\n *             request are to the upper size limit.\n *             </p>\n *          </note>\n *          <p>You can pass a session tag with the same key as a tag that is\n *          attached to the role. When you do, the session tag overrides the role tag with the same\n *          key.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Identities</b>\n *          </p>\n *          <p>Before your application can call <code>AssumeRoleWithWebIdentity</code>, you must have\n *          an identity token from a supported identity provider and create a role that the application\n *          can assume. The role that your application assumes must trust the identity provider that is\n *          associated with the identity token. In other words, the identity provider must be specified\n *          in the role's trust policy. </p>\n *          <important>\n *             <p>Calling <code>AssumeRoleWithWebIdentity</code> can result in an entry in your\n *             AWS CloudTrail logs. The entry includes the <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\">Subject</a> of\n *             the provided web identity token. We recommend that you avoid using any personally\n *             identifiable information (PII) in this field. For example, you could instead use a GUID\n *             or a pairwise identifier, as <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes\">suggested\n *                in the OIDC specification</a>.</p>\n *          </important>\n *          <p>For more information about how to use web identity federation and the\n *             <code>AssumeRoleWithWebIdentity</code> API, see the following resources: </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual.html\">Using Web Identity Federation API Operations for Mobile Apps</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a>. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://aws.amazon.com/blogs/aws/the-aws-web-identity-federation-playground/\"> Web Identity Federation Playground</a>. Walk through the process of\n *                authenticating through Login with Amazon, Facebook, or Google, getting temporary\n *                security credentials, and then using those credentials to make a request to AWS.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"http://aws.amazon.com/sdkforios/\">AWS SDK for iOS Developer Guide</a> and <a href=\"http://aws.amazon.com/sdkforandroid/\">AWS SDK for Android Developer Guide</a>. These toolkits\n *                contain sample apps that show how to invoke the identity providers. The toolkits then\n *                show how to use the information from these providers to get and use temporary\n *                security credentials. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"http://aws.amazon.com/articles/web-identity-federation-with-mobile-applications\">Web Identity\n *                   Federation with Mobile Applications</a>. This article discusses web identity\n *                federation and shows an example of how to use web identity federation to get access\n *                to content in Amazon S3. </p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleWithWebIdentityCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleWithWebIdentityCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleWithWebIdentityCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleWithWebIdentityCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleWithWebIdentityCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n//# sourceMappingURL=AssumeRoleWithWebIdentityCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Decodes additional information about the authorization status of a request from an\n *          encoded message returned in response to an AWS request.</p>\n *          <p>For example, if a user is not authorized to perform an operation that he or she has\n *          requested, the request returns a <code>Client.UnauthorizedOperation</code> response (an\n *          HTTP 403 response). Some AWS operations additionally return an encoded message that can\n *          provide details about this authorization failure. </p>\n *          <note>\n *             <p>Only certain AWS operations return an encoded authorization message. The\n *             documentation for an individual operation indicates whether that operation returns an\n *             encoded message in addition to returning an HTTP code.</p>\n *          </note>\n *          <p>The message is encoded because the details of the authorization status can constitute\n *          privileged information that the user who requested the operation should not see. To decode\n *          an authorization status message, a user must be granted permissions via an IAM policy to\n *          request the <code>DecodeAuthorizationMessage</code>\n *             (<code>sts:DecodeAuthorizationMessage</code>) action. </p>\n *          <p>The decoded message includes the following type of information:</p>\n *          <ul>\n *             <li>\n *                <p>Whether the request was denied due to an explicit deny or due to the absence of an\n *                explicit allow. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\">Determining Whether a Request is Allowed or Denied</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *             <li>\n *                <p>The principal who made the request.</p>\n *             </li>\n *             <li>\n *                <p>The requested action.</p>\n *             </li>\n *             <li>\n *                <p>The requested resource.</p>\n *             </li>\n *             <li>\n *                <p>The values of condition keys in the context of the user's request.</p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, DecodeAuthorizationMessageCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, DecodeAuthorizationMessageCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new DecodeAuthorizationMessageCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DecodeAuthorizationMessageCommandInput} for command's `input` shape.\n * @see {@link DecodeAuthorizationMessageCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDecodeAuthorizationMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDecodeAuthorizationMessageCommand(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n//# sourceMappingURL=DecodeAuthorizationMessageCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the account identifier for the specified access key ID.</p>\n *         <p>Access keys consist of two parts: an access key ID (for example,\n *                 <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\n *                 <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more information about\n *             access keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html\">Managing Access Keys for IAM\n *                 Users</a> in the <i>IAM User Guide</i>.</p>\n *         <p>When you pass an access key ID to this operation, it returns the ID of the AWS\n *             account to which the keys belong. Access key IDs beginning with <code>AKIA</code> are\n *             long-term credentials for an IAM user or the AWS account root user. Access key IDs\n *             beginning with <code>ASIA</code> are temporary credentials that are created using STS\n *             operations. If the account in the response belongs to you, you can sign in as the root\n *             user and review your root user access keys. Then, you can pull a <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\">credentials report</a> to learn which IAM user owns the keys. To learn who\n *             requested the temporary credentials for an <code>ASIA</code> access key, view the STS\n *             events in your <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">CloudTrail logs</a> in the\n *                 <i>IAM User Guide</i>.</p>\n *         <p>This operation does not indicate the state of the access key. The key might be active,\n *             inactive, or deleted. Active keys might not have permissions to perform an operation.\n *             Providing a deleted access key might return an error that the key doesn't exist.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetAccessKeyInfoCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetAccessKeyInfoCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetAccessKeyInfoCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetAccessKeyInfoCommandInput} for command's `input` shape.\n * @see {@link GetAccessKeyInfoCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccessKeyInfoRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccessKeyInfoResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetAccessKeyInfoCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetAccessKeyInfoCommand(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n//# sourceMappingURL=GetAccessKeyInfoCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns details about the IAM user or role whose credentials are used to call the\n *             operation.</p>\n *         <note>\n *             <p>No permissions are required to perform this operation. If an administrator adds a\n *                 policy to your IAM user or role that explicitly denies access to the\n *                     <code>sts:GetCallerIdentity</code> action, you can still perform this operation.\n *                 Permissions are not required because the same information is returned when an IAM\n *                 user or role is denied access. To view an example response, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\">I Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a> in the\n *                     <i>IAM User Guide</i>.</p>\n *         </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetCallerIdentityCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetCallerIdentityCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetCallerIdentityCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetCallerIdentityCommandInput} for command's `input` shape.\n * @see {@link GetCallerIdentityCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCallerIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCallerIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetCallerIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetCallerIdentityCommand(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n//# sourceMappingURL=GetCallerIdentityCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials (consisting of an access key ID, a\n *          secret access key, and a security token) for a federated user. A typical use is in a proxy\n *          application that gets temporary security credentials on behalf of distributed applications\n *          inside a corporate network. You must call the <code>GetFederationToken</code> operation\n *          using the long-term security credentials of an IAM user. As a result, this call is\n *          appropriate in contexts where those credentials can be safely stored, usually in a\n *          server-based application. For a comparison of <code>GetFederationToken</code> with the\n *          other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             AWS STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <note>\n *             <p>You can create a mobile-based or browser-based app that can authenticate users using\n *             a web identity provider like Login with Amazon, Facebook, Google, or an OpenID\n *             Connect-compatible identity provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n *                <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a> in the\n *                <i>IAM User Guide</i>.</p>\n *          </note>\n *          <p>You can also call <code>GetFederationToken</code> using the security credentials of an\n *          AWS account root user, but we do not recommend it. Instead, we recommend that you create\n *          an IAM user for the purpose of the proxy application. Then attach a policy to the IAM\n *          user that limits federated users to only the actions and resources that they need to\n *          access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM Best Practices</a> in the\n *             <i>IAM User Guide</i>. </p>\n *          <p>\n *             <b>Session duration</b>\n *          </p>\n *          <p>The temporary credentials are valid for the specified duration, from 900 seconds (15\n *          minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is\n *          43,200 seconds (12 hours). Temporary credentials that are obtained by using AWS account\n *          root user credentials have a maximum duration of 3,600 seconds (1 hour).</p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>You can use the temporary credentials created by <code>GetFederationToken</code> in any\n *          AWS service except the following:</p>\n *          <ul>\n *             <li>\n *                <p>You cannot call any IAM operations using the AWS CLI or the AWS API. </p>\n *             </li>\n *             <li>\n *                <p>You cannot call any STS operations except <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *          <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policy</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters.</p>\n *          <p>Though the session policy parameters are optional, if you do not pass a policy, then the\n *          resulting federated user session has no permissions. When you pass session policies, the\n *          session permissions are the intersection of the IAM user policies and the session\n *          policies that you pass. This gives you a way to further restrict the permissions for a\n *          federated user. You cannot use session policies to grant more permissions than those that\n *          are defined in the permissions policy of the IAM user. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>. For information about\n *          using <code>GetFederationToken</code> to create temporary security credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation Through a Custom Identity Broker</a>. </p>\n *          <p>You can use the credentials to access a resource that has a resource-based policy. If\n *          that policy specifically references the federated user session in the\n *             <code>Principal</code> element of the policy, the session has the permissions allowed by\n *          the policy. These permissions are granted in addition to the permissions granted by the\n *          session policies.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can pass tag key-value pairs to your session. These are called session\n *          tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *         <note>\n *             <p>You can create a mobile-based or browser-based app that can authenticate users\n *                 using a web identity provider like Login with Amazon, Facebook, Google, or an OpenID\n *                 Connect-compatible identity provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n *                     <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a> in the\n *                     <i>IAM User Guide</i>.</p>\n *         </note>\n *         <p>You can also call <code>GetFederationToken</code> using the security credentials of an\n *             AWS account root user, but we do not recommend it. Instead, we recommend that you\n *             create an IAM user for the purpose of the proxy application. Then attach a policy to\n *             the IAM user that limits federated users to only the actions and resources that they\n *             need to access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM Best Practices</a> in the\n *                 <i>IAM User Guide</i>. </p>\n *         <p>\n *             <b>Session duration</b>\n *          </p>\n *         <p>The temporary credentials are valid for the specified duration, from 900 seconds (15\n *             minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is\n *             43,200 seconds (12 hours). Temporary credentials that are obtained by using AWS\n *             account root user credentials have a maximum duration of 3,600 seconds (1 hour).</p>\n *         <p>\n *             <b>Permissions</b>\n *         </p>\n *         <p>You can use the temporary credentials created by <code>GetFederationToken</code> in\n *             any AWS service except the following:</p>\n *         <ul>\n *             <li>\n *                 <p>You cannot call any IAM operations using the AWS CLI or the AWS API.\n *                 </p>\n *             </li>\n *             <li>\n *                 <p>You cannot call any STS operations except\n *                     <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *         <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policy</a> to\n *             this operation. You can pass a single JSON policy document to use as an inline session\n *             policy. You can also specify up to 10 managed policies to use as managed session\n *             policies. The plain text that you use for both inline and managed session policies can't\n *             exceed 2,048 characters.</p>\n *         <p>Though the session policy parameters are optional, if you do not pass a policy, then\n *             the resulting federated user session has no permissions. When you pass session policies,\n *             the session permissions are the intersection of the IAM user policies and the session\n *             policies that you pass. This gives you a way to further restrict the permissions for a\n *             federated user. You cannot use session policies to grant more permissions than those\n *             that are defined in the permissions policy of the IAM user. For more information, see\n *                 <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session Policies</a>\n *             in the <i>IAM User Guide</i>. For information about using\n *                 <code>GetFederationToken</code> to create temporary security credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation Through a Custom Identity Broker</a>. </p>\n *         <p>You can use the credentials to access a resource that has a resource-based policy. If\n *             that policy specifically references the federated user session in the\n *                 <code>Principal</code> element of the policy, the session has the permissions\n *             allowed by the policy. These permissions are granted in addition to the permissions\n *             granted by the session policies.</p>\n *         <p>\n *             <b>Tags</b>\n *          </p>\n *         <p>(Optional) You can pass tag key-value pairs to your session. These are called session\n *             tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in\n *             the <i>IAM User Guide</i>.</p>\n *         <p>An administrator must grant you the permissions necessary to pass session tags. The\n *             administrator can also create granular permissions to allow you to pass only specific\n *             session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using\n *                 Tags for Attribute-Based Access Control</a> in the\n *                 <i>IAM User Guide</i>.</p>\n *         <p>Tag key–value pairs are not case sensitive, but case is preserved. This means that you\n *             cannot have separate <code>Department</code> and <code>department</code> tag keys.\n *             Assume that the user that you are federating has the\n *                 <code>Department</code>=<code>Marketing</code> tag and you pass the\n *                 <code>department</code>=<code>engineering</code> session tag.\n *                 <code>Department</code> and <code>department</code> are not saved as separate tags,\n *             and the session tag passed in the request takes precedence over the user tag.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetFederationTokenCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetFederationTokenCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetFederationTokenCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFederationTokenCommandInput} for command's `input` shape.\n * @see {@link GetFederationTokenCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFederationTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetFederationTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetFederationTokenCommand(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n//# sourceMappingURL=GetFederationTokenCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary credentials for an AWS account or IAM user. The\n *          credentials consist of an access key ID, a secret access key, and a security token.\n *          Typically, you use <code>GetSessionToken</code> if you want to use MFA to protect\n *          programmatic calls to specific AWS API operations like Amazon EC2 <code>StopInstances</code>.\n *          MFA-enabled IAM users would need to call <code>GetSessionToken</code> and submit an MFA\n *          code that is associated with their MFA device. Using the temporary security credentials\n *          that are returned from the call, IAM users can then make programmatic calls to API\n *          operations that require MFA authentication. If you do not supply a correct MFA code, then\n *          the API returns an access denied error. For a comparison of <code>GetSessionToken</code>\n *          with the other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n *             Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             AWS STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>The <code>GetSessionToken</code> operation must be called by using the long-term AWS\n *          security credentials of the AWS account root user or an IAM user. Credentials that are\n *          created by IAM users are valid for the duration that you specify. This duration can range\n *          from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours), with a default\n *          of 43,200 seconds (12 hours). Credentials based on account credentials can range from 900\n *          seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1 hour. </p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>GetSessionToken</code> can be used\n *          to make API calls to any AWS service with the following exceptions:</p>\n *          <ul>\n *             <li>\n *                <p>You cannot call any IAM API operations unless MFA authentication information is\n *                included in the request.</p>\n *             </li>\n *             <li>\n *                <p>You cannot call any STS API <i>except</i>\n *                   <code>AssumeRole</code> or <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *          <note>\n *             <p>We recommend that you do not call <code>GetSessionToken</code> with AWS account\n *             root user credentials. Instead, follow our <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\">best practices</a> by\n *             creating one or more IAM users, giving them the necessary permissions, and using IAM\n *             users for everyday interaction with AWS. </p>\n *          </note>\n *          <p>The credentials that are returned by <code>GetSessionToken</code> are based on\n *          permissions associated with the user whose credentials were used to call the operation. If\n *             <code>GetSessionToken</code> is called using AWS account root user credentials, the\n *          temporary credentials have root user permissions. Similarly, if\n *             <code>GetSessionToken</code> is called using the credentials of an IAM user, the\n *          temporary credentials have the same permissions as the IAM user. </p>\n *          <p>For more information about using <code>GetSessionToken</code> to create temporary\n *          credentials, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\">Temporary\n *             Credentials for Users in Untrusted Environments</a> in the\n *             <i>IAM User Guide</i>. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetSessionTokenCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetSessionTokenCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetSessionTokenCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetSessionTokenCommandInput} for command's `input` shape.\n * @see {@link GetSessionTokenCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSessionTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSessionTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSessionTokenCommand(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n//# sourceMappingURL=GetSessionTokenCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\n// Please do not touch this file. It's generated from template in:\n// https://github.com/aws/aws-sdk-js-v3/blob/main/codegen/smithy-aws-typescript-codegen/src/main/resources/software/amazon/smithy/aws/typescript/codegen/sts-client-defaultRoleAssumers.ts\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\n/**\n * The default role assumer that used by credential providers when sts:AssumeRole API is needed.\n */\nconst getDefaultRoleAssumer = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumer(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\n/**\n * The default role assumer that used by credential providers when sts:AssumeRoleWithWebIdentity API is needed.\n */\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\n/**\n * The default credential providers depend STS client to assume role with desired API: sts:assumeRole,\n * sts:assumeRoleWithWebIdentity, etc. This function decorates the default credential provider with role assumers which\n * encapsulates the process of calling STS commands. This can only be imported by AWS client packages to avoid circular\n * dependencies.\n *\n * @internal\n */\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n//# sourceMappingURL=defaultRoleAssumers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\n/**\n * Inject the fallback STS region of us-east-1.\n */\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\n/**\n * The default role assumer that used by credential providers when sts:AssumeRole API is needed.\n * @internal\n */\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                // A hack to make sts client uses the credential in current closure.\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\n/**\n * The default role assumer that used by credential providers when sts:AssumeRoleWithWebIdentity API is needed.\n * @internal\n */\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\n/**\n * The default credential providers depend STS client to assume role with desired API: sts:assumeRole,\n * sts:assumeRoleWithWebIdentity, etc. This function decorates the default credential provider with role assumers which\n * encapsulates the process of calling STS commands. This can only be imported by AWS client packages to avoid circular\n * dependencies.\n *\n * @internal\n */\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n//# sourceMappingURL=defaultStsRoleAssumers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\n// Partition default templates\nconst AWS_TEMPLATE = \"sts.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"sts.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"sts.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"sts.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"sts.{region}.amazonaws.com\";\n// Partition regions\nconst AWS_REGIONS = new Set([\n    \"af-south-1\",\n    \"ap-east-1\",\n    \"ap-northeast-1\",\n    \"ap-northeast-2\",\n    \"ap-northeast-3\",\n    \"ap-south-1\",\n    \"ap-southeast-1\",\n    \"ap-southeast-2\",\n    \"ca-central-1\",\n    \"eu-central-1\",\n    \"eu-north-1\",\n    \"eu-south-1\",\n    \"eu-west-1\",\n    \"eu-west-2\",\n    \"eu-west-3\",\n    \"me-south-1\",\n    \"sa-east-1\",\n    \"us-east-1\",\n    \"us-east-2\",\n    \"us-west-1\",\n    \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nconst defaultRegionInfoProvider = (region, options) => {\n    let regionInfo = undefined;\n    switch (region) {\n        // First, try to match exact region names.\n        case \"af-south-1\":\n            regionInfo = {\n                hostname: \"sts.af-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-east-1\":\n            regionInfo = {\n                hostname: \"sts.ap-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-1\":\n            regionInfo = {\n                hostname: \"sts.ap-northeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-2\":\n            regionInfo = {\n                hostname: \"sts.ap-northeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-northeast-3\":\n            regionInfo = {\n                hostname: \"sts.ap-northeast-3.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-south-1\":\n            regionInfo = {\n                hostname: \"sts.ap-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-1\":\n            regionInfo = {\n                hostname: \"sts.ap-southeast-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"ap-southeast-2\":\n            regionInfo = {\n                hostname: \"sts.ap-southeast-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"aws-global\":\n            regionInfo = {\n                hostname: \"sts.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-1\",\n            };\n            break;\n        case \"ca-central-1\":\n            regionInfo = {\n                hostname: \"sts.ca-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"cn-north-1\":\n            regionInfo = {\n                hostname: \"sts.cn-north-1.amazonaws.com.cn\",\n                partition: \"aws-cn\",\n            };\n            break;\n        case \"cn-northwest-1\":\n            regionInfo = {\n                hostname: \"sts.cn-northwest-1.amazonaws.com.cn\",\n                partition: \"aws-cn\",\n            };\n            break;\n        case \"eu-central-1\":\n            regionInfo = {\n                hostname: \"sts.eu-central-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-north-1\":\n            regionInfo = {\n                hostname: \"sts.eu-north-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-south-1\":\n            regionInfo = {\n                hostname: \"sts.eu-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-1\":\n            regionInfo = {\n                hostname: \"sts.eu-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-2\":\n            regionInfo = {\n                hostname: \"sts.eu-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"eu-west-3\":\n            regionInfo = {\n                hostname: \"sts.eu-west-3.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"me-south-1\":\n            regionInfo = {\n                hostname: \"sts.me-south-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"sa-east-1\":\n            regionInfo = {\n                hostname: \"sts.sa-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-1\":\n            regionInfo = {\n                hostname: \"sts.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-1-fips\":\n            regionInfo = {\n                hostname: \"sts-fips.us-east-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-1\",\n            };\n            break;\n        case \"us-east-2\":\n            regionInfo = {\n                hostname: \"sts.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-east-2-fips\":\n            regionInfo = {\n                hostname: \"sts-fips.us-east-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-east-2\",\n            };\n            break;\n        case \"us-gov-east-1\":\n            regionInfo = {\n                hostname: \"sts.us-gov-east-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n            };\n            break;\n        case \"us-gov-east-1-fips\":\n            regionInfo = {\n                hostname: \"sts.us-gov-east-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n                signingRegion: \"us-gov-east-1\",\n            };\n            break;\n        case \"us-gov-west-1\":\n            regionInfo = {\n                hostname: \"sts.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n            };\n            break;\n        case \"us-gov-west-1-fips\":\n            regionInfo = {\n                hostname: \"sts.us-gov-west-1.amazonaws.com\",\n                partition: \"aws-us-gov\",\n                signingRegion: \"us-gov-west-1\",\n            };\n            break;\n        case \"us-iso-east-1\":\n            regionInfo = {\n                hostname: \"sts.us-iso-east-1.c2s.ic.gov\",\n                partition: \"aws-iso\",\n            };\n            break;\n        case \"us-isob-east-1\":\n            regionInfo = {\n                hostname: \"sts.us-isob-east-1.sc2s.sgov.gov\",\n                partition: \"aws-iso-b\",\n            };\n            break;\n        case \"us-west-1\":\n            regionInfo = {\n                hostname: \"sts.us-west-1.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-west-1-fips\":\n            regionInfo = {\n                hostname: \"sts-fips.us-west-1.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-1\",\n            };\n            break;\n        case \"us-west-2\":\n            regionInfo = {\n                hostname: \"sts.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n            };\n            break;\n        case \"us-west-2-fips\":\n            regionInfo = {\n                hostname: \"sts-fips.us-west-2.amazonaws.com\",\n                partition: \"aws\",\n                signingRegion: \"us-west-2\",\n            };\n            break;\n        // Next, try to match partition endpoints.\n        default:\n            if (AWS_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n            if (AWS_CN_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-cn\",\n                };\n            }\n            if (AWS_ISO_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso\",\n                };\n            }\n            if (AWS_ISO_B_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-iso-b\",\n                };\n            }\n            if (AWS_US_GOV_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws-us-gov\",\n                };\n            }\n            // Finally, assume it's an AWS partition endpoint.\n            if (regionInfo === undefined) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    partition: \"aws\",\n                };\n            }\n    }\n    return Promise.resolve({ signingService: \"sts\", ...regionInfo });\n};\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./STSClient\"), exports);\ntslib_1.__exportStar(require(\"./STS\"), exports);\ntslib_1.__exportStar(require(\"./commands/AssumeRoleCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/AssumeRoleWithSAMLCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/AssumeRoleWithWebIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/DecodeAuthorizationMessageCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/GetAccessKeyInfoCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/GetCallerIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/GetFederationTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./commands/GetSessionTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./defaultRoleAssumers\"), exports);\ntslib_1.__exportStar(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponse = exports.GetSessionTokenRequest = exports.GetFederationTokenResponse = exports.FederatedUser = exports.GetFederationTokenRequest = exports.GetCallerIdentityResponse = exports.GetCallerIdentityRequest = exports.GetAccessKeyInfoResponse = exports.GetAccessKeyInfoRequest = exports.InvalidAuthorizationMessageException = exports.DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageRequest = exports.IDPCommunicationErrorException = exports.AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityRequest = exports.InvalidIdentityTokenException = exports.IDPRejectedClaimException = exports.AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLRequest = exports.RegionDisabledException = exports.PackedPolicyTooLargeException = exports.MalformedPolicyDocumentException = exports.ExpiredTokenException = exports.AssumeRoleResponse = exports.Credentials = exports.AssumeRoleRequest = exports.Tag = exports.PolicyDescriptorType = exports.AssumedRoleUser = void 0;\nvar AssumedRoleUser;\n(function (AssumedRoleUser) {\n    /**\n     * @internal\n     */\n    AssumedRoleUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumedRoleUser = exports.AssumedRoleUser || (exports.AssumedRoleUser = {}));\nvar PolicyDescriptorType;\n(function (PolicyDescriptorType) {\n    /**\n     * @internal\n     */\n    PolicyDescriptorType.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PolicyDescriptorType = exports.PolicyDescriptorType || (exports.PolicyDescriptorType = {}));\nvar Tag;\n(function (Tag) {\n    /**\n     * @internal\n     */\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar AssumeRoleRequest;\n(function (AssumeRoleRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleRequest = exports.AssumeRoleRequest || (exports.AssumeRoleRequest = {}));\nvar Credentials;\n(function (Credentials) {\n    /**\n     * @internal\n     */\n    Credentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Credentials = exports.Credentials || (exports.Credentials = {}));\nvar AssumeRoleResponse;\n(function (AssumeRoleResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleResponse = exports.AssumeRoleResponse || (exports.AssumeRoleResponse = {}));\nvar ExpiredTokenException;\n(function (ExpiredTokenException) {\n    /**\n     * @internal\n     */\n    ExpiredTokenException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExpiredTokenException = exports.ExpiredTokenException || (exports.ExpiredTokenException = {}));\nvar MalformedPolicyDocumentException;\n(function (MalformedPolicyDocumentException) {\n    /**\n     * @internal\n     */\n    MalformedPolicyDocumentException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(MalformedPolicyDocumentException = exports.MalformedPolicyDocumentException || (exports.MalformedPolicyDocumentException = {}));\nvar PackedPolicyTooLargeException;\n(function (PackedPolicyTooLargeException) {\n    /**\n     * @internal\n     */\n    PackedPolicyTooLargeException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PackedPolicyTooLargeException = exports.PackedPolicyTooLargeException || (exports.PackedPolicyTooLargeException = {}));\nvar RegionDisabledException;\n(function (RegionDisabledException) {\n    /**\n     * @internal\n     */\n    RegionDisabledException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegionDisabledException = exports.RegionDisabledException || (exports.RegionDisabledException = {}));\nvar AssumeRoleWithSAMLRequest;\n(function (AssumeRoleWithSAMLRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithSAMLRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLRequest = exports.AssumeRoleWithSAMLRequest || (exports.AssumeRoleWithSAMLRequest = {}));\nvar AssumeRoleWithSAMLResponse;\n(function (AssumeRoleWithSAMLResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithSAMLResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLResponse || (exports.AssumeRoleWithSAMLResponse = {}));\nvar IDPRejectedClaimException;\n(function (IDPRejectedClaimException) {\n    /**\n     * @internal\n     */\n    IDPRejectedClaimException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(IDPRejectedClaimException = exports.IDPRejectedClaimException || (exports.IDPRejectedClaimException = {}));\nvar InvalidIdentityTokenException;\n(function (InvalidIdentityTokenException) {\n    /**\n     * @internal\n     */\n    InvalidIdentityTokenException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidIdentityTokenException = exports.InvalidIdentityTokenException || (exports.InvalidIdentityTokenException = {}));\nvar AssumeRoleWithWebIdentityRequest;\n(function (AssumeRoleWithWebIdentityRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithWebIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityRequest = exports.AssumeRoleWithWebIdentityRequest || (exports.AssumeRoleWithWebIdentityRequest = {}));\nvar AssumeRoleWithWebIdentityResponse;\n(function (AssumeRoleWithWebIdentityResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithWebIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityResponse || (exports.AssumeRoleWithWebIdentityResponse = {}));\nvar IDPCommunicationErrorException;\n(function (IDPCommunicationErrorException) {\n    /**\n     * @internal\n     */\n    IDPCommunicationErrorException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(IDPCommunicationErrorException = exports.IDPCommunicationErrorException || (exports.IDPCommunicationErrorException = {}));\nvar DecodeAuthorizationMessageRequest;\n(function (DecodeAuthorizationMessageRequest) {\n    /**\n     * @internal\n     */\n    DecodeAuthorizationMessageRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageRequest = exports.DecodeAuthorizationMessageRequest || (exports.DecodeAuthorizationMessageRequest = {}));\nvar DecodeAuthorizationMessageResponse;\n(function (DecodeAuthorizationMessageResponse) {\n    /**\n     * @internal\n     */\n    DecodeAuthorizationMessageResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageResponse || (exports.DecodeAuthorizationMessageResponse = {}));\nvar InvalidAuthorizationMessageException;\n(function (InvalidAuthorizationMessageException) {\n    /**\n     * @internal\n     */\n    InvalidAuthorizationMessageException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidAuthorizationMessageException = exports.InvalidAuthorizationMessageException || (exports.InvalidAuthorizationMessageException = {}));\nvar GetAccessKeyInfoRequest;\n(function (GetAccessKeyInfoRequest) {\n    /**\n     * @internal\n     */\n    GetAccessKeyInfoRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoRequest = exports.GetAccessKeyInfoRequest || (exports.GetAccessKeyInfoRequest = {}));\nvar GetAccessKeyInfoResponse;\n(function (GetAccessKeyInfoResponse) {\n    /**\n     * @internal\n     */\n    GetAccessKeyInfoResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoResponse = exports.GetAccessKeyInfoResponse || (exports.GetAccessKeyInfoResponse = {}));\nvar GetCallerIdentityRequest;\n(function (GetCallerIdentityRequest) {\n    /**\n     * @internal\n     */\n    GetCallerIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityRequest = exports.GetCallerIdentityRequest || (exports.GetCallerIdentityRequest = {}));\nvar GetCallerIdentityResponse;\n(function (GetCallerIdentityResponse) {\n    /**\n     * @internal\n     */\n    GetCallerIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityResponse = exports.GetCallerIdentityResponse || (exports.GetCallerIdentityResponse = {}));\nvar GetFederationTokenRequest;\n(function (GetFederationTokenRequest) {\n    /**\n     * @internal\n     */\n    GetFederationTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenRequest = exports.GetFederationTokenRequest || (exports.GetFederationTokenRequest = {}));\nvar FederatedUser;\n(function (FederatedUser) {\n    /**\n     * @internal\n     */\n    FederatedUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FederatedUser = exports.FederatedUser || (exports.FederatedUser = {}));\nvar GetFederationTokenResponse;\n(function (GetFederationTokenResponse) {\n    /**\n     * @internal\n     */\n    GetFederationTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenResponse = exports.GetFederationTokenResponse || (exports.GetFederationTokenResponse = {}));\nvar GetSessionTokenRequest;\n(function (GetSessionTokenRequest) {\n    /**\n     * @internal\n     */\n    GetSessionTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenRequest = exports.GetSessionTokenRequest || (exports.GetSessionTokenRequest = {}));\nvar GetSessionTokenResponse;\n(function (GetSessionTokenResponse) {\n    /**\n     * @internal\n     */\n    GetSessionTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenResponse = exports.GetSessionTokenResponse || (exports.GetSessionTokenResponse = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryGetSessionTokenCommand = exports.deserializeAws_queryGetFederationTokenCommand = exports.deserializeAws_queryGetCallerIdentityCommand = exports.deserializeAws_queryGetAccessKeyInfoCommand = exports.deserializeAws_queryDecodeAuthorizationMessageCommand = exports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = exports.deserializeAws_queryAssumeRoleWithSAMLCommand = exports.deserializeAws_queryAssumeRoleCommand = exports.serializeAws_queryGetSessionTokenCommand = exports.serializeAws_queryGetFederationTokenCommand = exports.serializeAws_queryGetCallerIdentityCommand = exports.serializeAws_queryGetAccessKeyInfoCommand = exports.serializeAws_queryDecodeAuthorizationMessageCommand = exports.serializeAws_queryAssumeRoleWithWebIdentityCommand = exports.serializeAws_queryAssumeRoleWithSAMLCommand = exports.serializeAws_queryAssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleCommand = serializeAws_queryAssumeRoleCommand;\nconst serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithSAMLCommand = serializeAws_queryAssumeRoleWithSAMLCommand;\nconst serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithWebIdentityCommand = serializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDecodeAuthorizationMessageCommand = serializeAws_queryDecodeAuthorizationMessageCommand;\nconst serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetAccessKeyInfoCommand = serializeAws_queryGetAccessKeyInfoCommand;\nconst serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetCallerIdentityCommand = serializeAws_queryGetCallerIdentityCommand;\nconst serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetFederationTokenCommand = serializeAws_queryGetFederationTokenCommand;\nconst serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSessionTokenCommand = serializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleCommand = deserializeAws_queryAssumeRoleCommand;\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithSAMLCommand = deserializeAws_queryAssumeRoleWithSAMLCommand;\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = deserializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPCommunicationErrorException\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            response = {\n                ...(await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDecodeAuthorizationMessageCommand = deserializeAws_queryDecodeAuthorizationMessageCommand;\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            response = {\n                ...(await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetAccessKeyInfoCommand = deserializeAws_queryGetAccessKeyInfoCommand;\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetCallerIdentityCommand = deserializeAws_queryGetCallerIdentityCommand;\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetFederationTokenCommand = deserializeAws_queryGetFederationTokenCommand;\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSessionTokenCommand = deserializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const contents = {\n        name: \"ExpiredTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const contents = {\n        name: \"IDPCommunicationErrorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const contents = {\n        name: \"IDPRejectedClaimException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const contents = {\n        name: \"InvalidAuthorizationMessageException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const contents = {\n        name: \"InvalidIdentityTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const contents = {\n        name: \"MalformedPolicyDocumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const contents = {\n        name: \"PackedPolicyTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const contents = {\n        name: \"RegionDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys !== undefined && input.TransitiveTagKeys !== null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId !== undefined && input.ExternalId !== null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity !== undefined && input.SourceIdentity !== null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn !== undefined && input.PrincipalArn !== null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion !== undefined && input.SAMLAssertion !== null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken !== undefined && input.WebIdentityToken !== null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId !== undefined && input.ProviderId !== null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage !== undefined && input.EncodedMessage !== null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId !== undefined && input.AccessKeyId !== null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn !== undefined && input.arn !== null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    let contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = output[\"AssumedRoleId\"];\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = output[\"Arn\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = parseInt(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = output[\"SourceIdentity\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = parseInt(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = output[\"Subject\"];\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = output[\"SubjectType\"];\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = output[\"Issuer\"];\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = output[\"Audience\"];\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = output[\"NameQualifier\"];\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = output[\"SourceIdentity\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = output[\"SubjectFromWebIdentityToken\"];\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = parseInt(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = output[\"Provider\"];\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = output[\"Audience\"];\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = output[\"SourceIdentity\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    let contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = output[\"AccessKeyId\"];\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = output[\"SecretAccessKey\"];\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = output[\"SessionToken\"];\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = new Date(output[\"Expiration\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    let contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = output[\"DecodedMessage\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    let contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = output[\"FederatedUserId\"];\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = output[\"Arn\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    let contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = output[\"Account\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    let contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = output[\"UserId\"];\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = output[\"Account\"];\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = output[\"Arn\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = parseInt(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = output[\"message\"];\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = fast_xml_parser_1.parse(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val, tagName) => (val.trim() === \"\" ? \"\" : entities_1.decodeHTML(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return smithy_client_1.getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithy_client_1.extendedEncodeURIComponent(key) + \"=\" + smithy_client_1.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDefaultValues = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"./package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\n/**\n * @internal\n */\nexports.ClientDefaultValues = {\n    ...runtimeConfig_shared_1.ClientSharedValues,\n    runtime: \"node\",\n    base64Decoder: util_base64_node_1.fromBase64,\n    base64Encoder: util_base64_node_1.toBase64,\n    bodyLengthChecker: util_body_length_node_1.calculateBodyLength,\n    credentialDefaultProvider: defaultStsRoleAssumers_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n    defaultUserAgentProvider: util_user_agent_node_1.defaultUserAgent({\n        serviceId: runtimeConfig_shared_1.ClientSharedValues.serviceId,\n        clientVersion: package_json_1.default.version,\n    }),\n    maxAttempts: node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n    region: node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n    requestHandler: new node_http_handler_1.NodeHttpHandler(),\n    retryModeProvider: node_config_provider_1.loadConfig(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n    sha256: hash_node_1.Hash.bind(null, \"sha256\"),\n    streamCollector: node_http_handler_1.streamCollector,\n    utf8Decoder: util_utf8_node_1.fromUtf8,\n    utf8Encoder: util_utf8_node_1.toUtf8,\n};\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientSharedValues = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nexports.ClientSharedValues = {\n    apiVersion: \"2011-06-15\",\n    disableHostPrefix: false,\n    logger: {},\n    regionInfoProvider: endpoints_1.defaultRegionInfoProvider,\n    serviceId: \"STS\",\n    urlParser: url_parser_1.parseUrl,\n};\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: normalizeEndpoint(input),\n        isCustomEndpoint: true,\n    });\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\nconst normalizeEndpoint = (input) => {\n    const { endpoint, urlParser } = input;\n    if (typeof endpoint === \"string\") {\n        const promisified = Promise.resolve(urlParser(endpoint));\n        return () => promisified;\n    }\n    else if (typeof endpoint === \"object\") {\n        const promisified = Promise.resolve(endpoint);\n        return () => promisified;\n    }\n    return endpoint;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tRW5kcG9pbnRzQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0N1c3RvbUVuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUE4Qk8sTUFBTSw0QkFBNEIsR0FBRyxDQUMxQyxLQUEwRCxFQUN2QixFQUFFOztJQUFDLE9BQUEsQ0FBQztRQUN2QyxHQUFHLEtBQUs7UUFDUixHQUFHLEVBQUUsTUFBQSxLQUFLLENBQUMsR0FBRyxtQ0FBSSxJQUFJO1FBQ3RCLFFBQVEsRUFBRSxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7UUFDbEMsZ0JBQWdCLEVBQUUsSUFBSTtLQUN2QixDQUFDLENBQUE7Q0FBQSxDQUFDO0FBUFUsUUFBQSw0QkFBNEIsZ0NBT3RDO0FBRUgsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEtBQXNELEVBQXNCLEVBQUU7SUFDdkcsTUFBTSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDdEMsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDaEMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUN6RCxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtTQUFNLElBQUksT0FBTyxRQUFRLEtBQUssUUFBUSxFQUFFO1FBQ3ZDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmRwb2ludCwgUHJvdmlkZXIsIFVybFBhcnNlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbUVuZHBvaW50c0lucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBmdWxseSBxdWFsaWZpZWQgZW5kcG9pbnQgb2YgdGhlIHdlYnNlcnZpY2UuXG4gICAqL1xuICBlbmRwb2ludDogc3RyaW5nIHwgRW5kcG9pbnQgfCBQcm92aWRlcjxFbmRwb2ludD47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgVExTIGlzIGVuYWJsZWQgZm9yIHJlcXVlc3RzLlxuICAgKi9cbiAgdGxzPzogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIHVybFBhcnNlcjogVXJsUGFyc2VyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbUVuZHBvaW50c1Jlc29sdmVkQ29uZmlnIGV4dGVuZHMgUmVxdWlyZWQ8Q3VzdG9tRW5kcG9pbnRzSW5wdXRDb25maWc+IHtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCB7QGxpbmsgQ3VzdG9tRW5kcG9pbnRzSW5wdXRDb25maWcuZW5kcG9pbnR9XG4gICAqL1xuICBlbmRwb2ludDogUHJvdmlkZXI8RW5kcG9pbnQ+O1xuICAvKipcbiAgICogV2hldGhlciB0aGUgZW5kcG9pbnQgaXMgc3BlY2lmaWVkIGJ5IGNhbGxlci5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBpc0N1c3RvbUVuZHBvaW50OiB0cnVlO1xufVxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZUN1c3RvbUVuZHBvaW50c0NvbmZpZyA9IDxUPihcbiAgaW5wdXQ6IFQgJiBDdXN0b21FbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZFxuKTogVCAmIEN1c3RvbUVuZHBvaW50c1Jlc29sdmVkQ29uZmlnID0+ICh7XG4gIC4uLmlucHV0LFxuICB0bHM6IGlucHV0LnRscyA/PyB0cnVlLFxuICBlbmRwb2ludDogbm9ybWFsaXplRW5kcG9pbnQoaW5wdXQpLFxuICBpc0N1c3RvbUVuZHBvaW50OiB0cnVlLFxufSk7XG5cbmNvbnN0IG5vcm1hbGl6ZUVuZHBvaW50ID0gKGlucHV0OiBDdXN0b21FbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZCk6IFByb3ZpZGVyPEVuZHBvaW50PiA9PiB7XG4gIGNvbnN0IHsgZW5kcG9pbnQsIHVybFBhcnNlciB9ID0gaW5wdXQ7XG4gIGlmICh0eXBlb2YgZW5kcG9pbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICBjb25zdCBwcm9taXNpZmllZCA9IFByb21pc2UucmVzb2x2ZSh1cmxQYXJzZXIoZW5kcG9pbnQpKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUoZW5kcG9pbnQpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfVxuICByZXR1cm4gZW5kcG9pbnQ7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst resolveEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: input.endpoint ? normalizeEndpoint(input) : () => getEndPointFromRegion(input),\n        isCustomEndpoint: input.endpoint ? true : false,\n    });\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\nconst normalizeEndpoint = (input) => {\n    const { endpoint, urlParser } = input;\n    if (typeof endpoint === \"string\") {\n        const promisified = Promise.resolve(urlParser(endpoint));\n        return () => promisified;\n    }\n    else if (typeof endpoint === \"object\") {\n        const promisified = Promise.resolve(endpoint);\n        return () => promisified;\n    }\n    return endpoint;\n};\nconst getEndPointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const { hostname } = (_a = (await input.regionInfoProvider(region))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRzQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0VuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFnQ08sTUFBTSxzQkFBc0IsR0FBRyxDQUNwQyxLQUFvRCxFQUN2QixFQUFFOztJQUFDLE9BQUEsQ0FBQztRQUNqQyxHQUFHLEtBQUs7UUFDUixHQUFHLEVBQUUsTUFBQSxLQUFLLENBQUMsR0FBRyxtQ0FBSSxJQUFJO1FBQ3RCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ3hGLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSztLQUNoRCxDQUFDLENBQUE7Q0FBQSxDQUFDO0FBUFUsUUFBQSxzQkFBc0IsMEJBT2hDO0FBRUgsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEtBQWdELEVBQXNCLEVBQUU7SUFDakcsTUFBTSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDdEMsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDaEMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUN6RCxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtTQUFNLElBQUksT0FBTyxRQUFRLEtBQUssUUFBUSxFQUFFO1FBQ3ZDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFFBQVMsQ0FBQztBQUNuQixDQUFDLENBQUM7QUFFRixNQUFNLHFCQUFxQixHQUFHLEtBQUssRUFBRSxLQUFnRCxFQUFFLEVBQUU7O0lBQ3ZGLE1BQU0sRUFBRSxHQUFHLEdBQUcsSUFBSSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQzdCLE1BQU0sTUFBTSxHQUFHLE1BQU0sS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBRXBDLE1BQU0sWUFBWSxHQUFHLElBQUksTUFBTSxDQUFDLDBEQUEwRCxDQUFDLENBQUM7SUFDNUYsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDOUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0tBQ3BEO0lBRUQsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLE1BQUEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxtQ0FBSSxFQUFFLENBQUM7SUFDcEUsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNiLE1BQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztLQUMvRDtJQUVELE9BQU8sS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxPQUFPLEtBQUssUUFBUSxFQUFFLENBQUMsQ0FBQztBQUNyRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmRwb2ludCwgUHJvdmlkZXIsIFJlZ2lvbkluZm9Qcm92aWRlciwgVXJsUGFyc2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5kcG9pbnRzSW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIGZ1bGx5IHF1YWxpZmllZCBlbmRwb2ludCBvZiB0aGUgd2Vic2VydmljZS4gVGhpcyBpcyBvbmx5IHJlcXVpcmVkIHdoZW4gdXNpbmcgYSBjdXN0b20gZW5kcG9pbnQgKGZvciBleGFtcGxlLCB3aGVuIHVzaW5nIGEgbG9jYWwgdmVyc2lvbiBvZiBTMykuXG4gICAqL1xuICBlbmRwb2ludD86IHN0cmluZyB8IEVuZHBvaW50IHwgUHJvdmlkZXI8RW5kcG9pbnQ+O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIFRMUyBpcyBlbmFibGVkIGZvciByZXF1ZXN0cy5cbiAgICovXG4gIHRscz86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBQcmV2aW91c2x5UmVzb2x2ZWQge1xuICByZWdpb25JbmZvUHJvdmlkZXI6IFJlZ2lvbkluZm9Qcm92aWRlcjtcbiAgdXJsUGFyc2VyOiBVcmxQYXJzZXI7XG4gIHJlZ2lvbjogUHJvdmlkZXI8c3RyaW5nPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbmRwb2ludHNSZXNvbHZlZENvbmZpZyBleHRlbmRzIFJlcXVpcmVkPEVuZHBvaW50c0lucHV0Q29uZmlnPiB7XG4gIC8qKlxuICAgKiBSZXNvbHZlZCB2YWx1ZSBmb3IgaW5wdXQge0BsaW5rIEVuZHBvaW50c1Jlc29sdmVkQ29uZmlnLmVuZHBvaW50fVxuICAgKi9cbiAgZW5kcG9pbnQ6IFByb3ZpZGVyPEVuZHBvaW50PjtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGVuZHBvaW50IGlzIHNwZWNpZmllZCBieSBjYWxsZXIuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgaXNDdXN0b21FbmRwb2ludDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc29sdmVFbmRwb2ludHNDb25maWcgPSA8VD4oXG4gIGlucHV0OiBUICYgRW5kcG9pbnRzSW5wdXRDb25maWcgJiBQcmV2aW91c2x5UmVzb2x2ZWRcbik6IFQgJiBFbmRwb2ludHNSZXNvbHZlZENvbmZpZyA9PiAoe1xuICAuLi5pbnB1dCxcbiAgdGxzOiBpbnB1dC50bHMgPz8gdHJ1ZSxcbiAgZW5kcG9pbnQ6IGlucHV0LmVuZHBvaW50ID8gbm9ybWFsaXplRW5kcG9pbnQoaW5wdXQpIDogKCkgPT4gZ2V0RW5kUG9pbnRGcm9tUmVnaW9uKGlucHV0KSxcbiAgaXNDdXN0b21FbmRwb2ludDogaW5wdXQuZW5kcG9pbnQgPyB0cnVlIDogZmFsc2UsXG59KTtcblxuY29uc3Qgbm9ybWFsaXplRW5kcG9pbnQgPSAoaW5wdXQ6IEVuZHBvaW50c0lucHV0Q29uZmlnICYgUHJldmlvdXNseVJlc29sdmVkKTogUHJvdmlkZXI8RW5kcG9pbnQ+ID0+IHtcbiAgY29uc3QgeyBlbmRwb2ludCwgdXJsUGFyc2VyIH0gPSBpbnB1dDtcbiAgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gXCJzdHJpbmdcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKHVybFBhcnNlcihlbmRwb2ludCkpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZW5kcG9pbnQgPT09IFwib2JqZWN0XCIpIHtcbiAgICBjb25zdCBwcm9taXNpZmllZCA9IFByb21pc2UucmVzb2x2ZShlbmRwb2ludCk7XG4gICAgcmV0dXJuICgpID0+IHByb21pc2lmaWVkO1xuICB9XG4gIHJldHVybiBlbmRwb2ludCE7XG59O1xuXG5jb25zdCBnZXRFbmRQb2ludEZyb21SZWdpb24gPSBhc3luYyAoaW5wdXQ6IEVuZHBvaW50c0lucHV0Q29uZmlnICYgUHJldmlvdXNseVJlc29sdmVkKSA9PiB7XG4gIGNvbnN0IHsgdGxzID0gdHJ1ZSB9ID0gaW5wdXQ7XG4gIGNvbnN0IHJlZ2lvbiA9IGF3YWl0IGlucHV0LnJlZ2lvbigpO1xuXG4gIGNvbnN0IGRuc0hvc3RSZWdleCA9IG5ldyBSZWdFeHAoL14oW2EtekEtWjAtOV18W2EtekEtWjAtOV1bYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSkkLyk7XG4gIGlmICghZG5zSG9zdFJlZ2V4LnRlc3QocmVnaW9uKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcmVnaW9uIGluIGNsaWVudCBjb25maWdcIik7XG4gIH1cblxuICBjb25zdCB7IGhvc3RuYW1lIH0gPSAoYXdhaXQgaW5wdXQucmVnaW9uSW5mb1Byb3ZpZGVyKHJlZ2lvbikpID8/IHt9O1xuICBpZiAoIWhvc3RuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHJlc29sdmUgaG9zdG5hbWUgZnJvbSBjbGllbnQgY29uZmlnXCIpO1xuICB9XG5cbiAgcmV0dXJuIGlucHV0LnVybFBhcnNlcihgJHt0bHMgPyBcImh0dHBzOlwiIDogXCJodHRwOlwifS8vJHtob3N0bmFtZX1gKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = exports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\nconst resolveRegionConfig = (input) => {\n    if (!input.region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: normalizeRegion(input.region),\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\nconst normalizeRegion = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    return region;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVnaW9uQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL1JlZ2lvbkNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHYSxRQUFBLGVBQWUsR0FBRyxZQUFZLENBQUM7QUFDL0IsUUFBQSxlQUFlLEdBQUcsUUFBUSxDQUFDO0FBRTNCLFFBQUEsMEJBQTBCLEdBQWtDO0lBQ3ZFLDJCQUEyQixFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsdUJBQWUsQ0FBQztJQUMxRCxrQkFBa0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLHVCQUFlLENBQUM7SUFDekQsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0YsQ0FBQztBQUVXLFFBQUEsK0JBQStCLEdBQXVCO0lBQ2pFLGFBQWEsRUFBRSxhQUFhO0NBQzdCLENBQUM7QUFrQkssTUFBTSxtQkFBbUIsR0FBRyxDQUFJLEtBQWlELEVBQTRCLEVBQUU7SUFDcEgsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7UUFDakIsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0tBQ3RDO0lBQ0QsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLE1BQU0sRUFBRSxlQUFlLENBQUMsS0FBSyxDQUFDLE1BQU8sQ0FBQztLQUN2QyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBUlcsUUFBQSxtQkFBbUIsdUJBUTlCO0FBRUYsTUFBTSxlQUFlLEdBQUcsQ0FBQyxNQUFpQyxFQUFvQixFQUFFO0lBQzlFLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLE1BQTBCLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzLCBMb2NhbENvbmZpZ09wdGlvbnMgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBSRUdJT05fRU5WX05BTUUgPSBcIkFXU19SRUdJT05cIjtcbmV4cG9ydCBjb25zdCBSRUdJT05fSU5JX05BTUUgPSBcInJlZ2lvblwiO1xuXG5leHBvcnQgY29uc3QgTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlM6IExvYWRlZENvbmZpZ1NlbGVjdG9yczxzdHJpbmc+ID0ge1xuICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IChlbnYpID0+IGVudltSRUdJT05fRU5WX05BTUVdLFxuICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBwcm9maWxlW1JFR0lPTl9JTklfTkFNRV0sXG4gIGRlZmF1bHQ6ICgpID0+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWdpb24gaXMgbWlzc2luZ1wiKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TOiBMb2NhbENvbmZpZ09wdGlvbnMgPSB7XG4gIHByZWZlcnJlZEZpbGU6IFwiY3JlZGVudGlhbHNcIixcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaW9uSW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIEFXUyByZWdpb24gdG8gd2hpY2ggdGhpcyBjbGllbnQgd2lsbCBzZW5kIHJlcXVlc3RzXG4gICAqL1xuICByZWdpb24/OiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+O1xufVxuXG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaW9uUmVzb2x2ZWRDb25maWcge1xuICAvKipcbiAgICogUmVzb2x2ZWQgdmFsdWUgZm9yIGlucHV0IGNvbmZpZyB7QGxpbmsgUmVnaW9uSW5wdXRDb25maWcucmVnaW9ufVxuICAgKi9cbiAgcmVnaW9uOiBQcm92aWRlcjxzdHJpbmc+O1xufVxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZVJlZ2lvbkNvbmZpZyA9IDxUPihpbnB1dDogVCAmIFJlZ2lvbklucHV0Q29uZmlnICYgUHJldmlvdXNseVJlc29sdmVkKTogVCAmIFJlZ2lvblJlc29sdmVkQ29uZmlnID0+IHtcbiAgaWYgKCFpbnB1dC5yZWdpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWdpb24gaXMgbWlzc2luZ1wiKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIC4uLmlucHV0LFxuICAgIHJlZ2lvbjogbm9ybWFsaXplUmVnaW9uKGlucHV0LnJlZ2lvbiEpLFxuICB9O1xufTtcblxuY29uc3Qgbm9ybWFsaXplUmVnaW9uID0gKHJlZ2lvbjogc3RyaW5nIHwgUHJvdmlkZXI8c3RyaW5nPik6IFByb3ZpZGVyPHN0cmluZz4gPT4ge1xuICBpZiAodHlwZW9mIHJlZ2lvbiA9PT0gXCJzdHJpbmdcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKHJlZ2lvbik7XG4gICAgcmV0dXJuICgpID0+IHByb21pc2lmaWVkO1xuICB9XG4gIHJldHVybiByZWdpb24gYXMgUHJvdmlkZXI8c3RyaW5nPjtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CustomEndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./EndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./RegionConfig\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXdDO0FBQ3hDLDREQUFrQztBQUNsQyx5REFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9DdXN0b21FbmRwb2ludHNDb25maWdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0VuZHBvaW50c0NvbmZpZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUmVnaW9uQ29uZmlnXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\n/**\n * Source AWS credentials from known environment variables. If either the\n * `AWS_ACCESS_KEY_ID` or `AWS_SECRET_ACCESS_KEY` environment variable is not\n * set in this process, the provider will return a rejected promise.\n */\nfunction fromEnv() {\n    return () => {\n        const accessKeyId = process.env[exports.ENV_KEY];\n        const secretAccessKey = process.env[exports.ENV_SECRET];\n        const expiry = process.env[exports.ENV_EXPIRATION];\n        if (accessKeyId && secretAccessKey) {\n            return Promise.resolve({\n                accessKeyId,\n                secretAccessKey,\n                sessionToken: process.env[exports.ENV_SESSION],\n                expiration: expiry ? new Date(expiry) : undefined,\n            });\n        }\n        return Promise.reject(new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\"));\n    };\n}\nexports.fromEnv = fromEnv;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXNFO0FBR3pELFFBQUEsT0FBTyxHQUFHLG1CQUFtQixDQUFDO0FBQzlCLFFBQUEsVUFBVSxHQUFHLHVCQUF1QixDQUFDO0FBQ3JDLFFBQUEsV0FBVyxHQUFHLG1CQUFtQixDQUFDO0FBQ2xDLFFBQUEsY0FBYyxHQUFHLDJCQUEyQixDQUFDO0FBRTFEOzs7O0dBSUc7QUFDSCxTQUFnQixPQUFPO0lBQ3JCLE9BQU8sR0FBRyxFQUFFO1FBQ1YsTUFBTSxXQUFXLEdBQXVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBTyxDQUFDLENBQUM7UUFDN0QsTUFBTSxlQUFlLEdBQXVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQVUsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sTUFBTSxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFjLENBQUMsQ0FBQztRQUMvRCxJQUFJLFdBQVcsSUFBSSxlQUFlLEVBQUU7WUFDbEMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDO2dCQUNyQixXQUFXO2dCQUNYLGVBQWU7Z0JBQ2YsWUFBWSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQVcsQ0FBQztnQkFDdEMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7YUFDbEQsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSw0Q0FBd0IsQ0FBQyxrREFBa0QsQ0FBQyxDQUFDLENBQUM7SUFDMUcsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQWhCRCwwQkFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgRU5WX0tFWSA9IFwiQVdTX0FDQ0VTU19LRVlfSURcIjtcbmV4cG9ydCBjb25zdCBFTlZfU0VDUkVUID0gXCJBV1NfU0VDUkVUX0FDQ0VTU19LRVlcIjtcbmV4cG9ydCBjb25zdCBFTlZfU0VTU0lPTiA9IFwiQVdTX1NFU1NJT05fVE9LRU5cIjtcbmV4cG9ydCBjb25zdCBFTlZfRVhQSVJBVElPTiA9IFwiQVdTX0NSRURFTlRJQUxfRVhQSVJBVElPTlwiO1xuXG4vKipcbiAqIFNvdXJjZSBBV1MgY3JlZGVudGlhbHMgZnJvbSBrbm93biBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIElmIGVpdGhlciB0aGVcbiAqIGBBV1NfQUNDRVNTX0tFWV9JRGAgb3IgYEFXU19TRUNSRVRfQUNDRVNTX0tFWWAgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90XG4gKiBzZXQgaW4gdGhpcyBwcm9jZXNzLCB0aGUgcHJvdmlkZXIgd2lsbCByZXR1cm4gYSByZWplY3RlZCBwcm9taXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUVudigpOiBDcmVkZW50aWFsUHJvdmlkZXIge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNvbnN0IGFjY2Vzc0tleUlkOiBzdHJpbmcgfCB1bmRlZmluZWQgPSBwcm9jZXNzLmVudltFTlZfS0VZXTtcbiAgICBjb25zdCBzZWNyZXRBY2Nlc3NLZXk6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHByb2Nlc3MuZW52W0VOVl9TRUNSRVRdO1xuICAgIGNvbnN0IGV4cGlyeTogc3RyaW5nIHwgdW5kZWZpbmVkID0gcHJvY2Vzcy5lbnZbRU5WX0VYUElSQVRJT05dO1xuICAgIGlmIChhY2Nlc3NLZXlJZCAmJiBzZWNyZXRBY2Nlc3NLZXkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICBhY2Nlc3NLZXlJZCxcbiAgICAgICAgc2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICBzZXNzaW9uVG9rZW46IHByb2Nlc3MuZW52W0VOVl9TRVNTSU9OXSxcbiAgICAgICAgZXhwaXJhdGlvbjogZXhwaXJ5ID8gbmV3IERhdGUoZXhwaXJ5KSA6IHVuZGVmaW5lZCxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiVW5hYmxlIHRvIGZpbmQgZW52aXJvbm1lbnQgdmFyaWFibGUgY3JlZGVudGlhbHMuXCIpKTtcbiAgfTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\n/**\n * Creates a credential provider that will source credentials from the ECS\n * Container Metadata Service\n */\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    return () => retry_1.retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest_1.httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = url_1.parse(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUNvbnRhaW5lck1ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21Db250YWluZXJNZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBc0U7QUFHdEUsNkJBQTRCO0FBRTVCLDhEQUEyRDtBQUMzRCxzRUFBMEY7QUFDMUYsNEVBQWlHO0FBQ2pHLGtEQUErQztBQUVsQyxRQUFBLGlCQUFpQixHQUFHLG9DQUFvQyxDQUFDO0FBQ3pELFFBQUEscUJBQXFCLEdBQUcsd0NBQXdDLENBQUM7QUFDakUsUUFBQSxtQkFBbUIsR0FBRyxtQ0FBbUMsQ0FBQztBQUV2RTs7O0dBR0c7QUFDSSxNQUFNLHFCQUFxQixHQUFHLENBQUMsT0FBMkIsRUFBRSxFQUFzQixFQUFFO0lBQ3pGLE1BQU0sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsMkNBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsT0FBTyxHQUFHLEVBQUUsQ0FDVixhQUFLLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDZixNQUFNLGNBQWMsR0FBRyxNQUFNLFVBQVUsRUFBRSxDQUFDO1FBQzFDLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsbUNBQWlCLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDckMsTUFBTSxJQUFJLDRDQUF3QixDQUFDLDJEQUEyRCxDQUFDLENBQUM7U0FDakc7UUFDRCxPQUFPLHFDQUFtQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzVDLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNuQixDQUFDLENBQUM7QUFYVyxRQUFBLHFCQUFxQix5QkFXaEM7QUFFRixNQUFNLGtCQUFrQixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQUUsT0FBdUIsRUFBbUIsRUFBRTtJQUM3RixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQW1CLENBQUMsRUFBRTtRQUNwQyxPQUFPLENBQUMsT0FBTyxHQUFHO1lBQ2hCLEdBQUcsT0FBTyxDQUFDLE9BQU87WUFDbEIsYUFBYSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQW1CLENBQUM7U0FDaEQsQ0FBQztLQUNIO0lBRUQsTUFBTSxNQUFNLEdBQUcsTUFBTSx5QkFBVyxDQUFDO1FBQy9CLEdBQUcsT0FBTztRQUNWLE9BQU87S0FDUixDQUFDLENBQUM7SUFDSCxPQUFPLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUMzQixDQUFDLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRyxlQUFlLENBQUM7QUFDaEMsTUFBTSxnQkFBZ0IsR0FBRztJQUN2QixTQUFTLEVBQUUsSUFBSTtJQUNmLFdBQVcsRUFBRSxJQUFJO0NBQ2xCLENBQUM7QUFDRixNQUFNLG9CQUFvQixHQUFHO0lBQzNCLE9BQU8sRUFBRSxJQUFJO0lBQ2IsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUYsTUFBTSxVQUFVLEdBQUcsS0FBSyxJQUE2QixFQUFFO0lBQ3JELElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBcUIsQ0FBQyxFQUFFO1FBQ3RDLE9BQU87WUFDTCxRQUFRLEVBQUUsT0FBTztZQUNqQixJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBcUIsQ0FBQztTQUN6QyxDQUFDO0tBQ0g7SUFFRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQWlCLENBQUMsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBRyxXQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBaUIsQ0FBRSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksZ0JBQWdCLENBQUMsRUFBRTtZQUM5RCxNQUFNLElBQUksNENBQXdCLENBQ2hDLEdBQUcsTUFBTSxDQUFDLFFBQVEscURBQXFELEVBQ3ZFLEtBQUssQ0FDTixDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxvQkFBb0IsQ0FBQyxFQUFFO1lBQ2xFLE1BQU0sSUFBSSw0Q0FBd0IsQ0FDaEMsR0FBRyxNQUFNLENBQUMsUUFBUSxxREFBcUQsRUFDdkUsS0FBSyxDQUNOLENBQUM7U0FDSDtRQUVELE9BQU87WUFDTCxHQUFHLE1BQU07WUFDVCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7U0FDMUQsQ0FBQztLQUNIO0lBRUQsTUFBTSxJQUFJLDRDQUF3QixDQUNoQyxrRUFBa0U7UUFDaEUsUUFBUSw2QkFBcUIsT0FBTyx5QkFBaUIsY0FBYztRQUNuRSxrQkFBa0IsRUFDcEIsS0FBSyxDQUNOLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwidXJsXCI7XG5cbmltcG9ydCB7IGh0dHBSZXF1ZXN0IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3RcIjtcbmltcG9ydCB7IGZyb21JbWRzQ3JlZGVudGlhbHMsIGlzSW1kc0NyZWRlbnRpYWxzIH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvSW1kc0NyZWRlbnRpYWxzXCI7XG5pbXBvcnQgeyBwcm92aWRlckNvbmZpZ0Zyb21Jbml0LCBSZW1vdGVQcm92aWRlckluaXQgfSBmcm9tIFwiLi9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXRcIjtcbmltcG9ydCB7IHJldHJ5IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvcmV0cnlcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9DTURTX0ZVTExfVVJJID0gXCJBV1NfQ09OVEFJTkVSX0NSRURFTlRJQUxTX0ZVTExfVVJJXCI7XG5leHBvcnQgY29uc3QgRU5WX0NNRFNfUkVMQVRJVkVfVVJJID0gXCJBV1NfQ09OVEFJTkVSX0NSRURFTlRJQUxTX1JFTEFUSVZFX1VSSVwiO1xuZXhwb3J0IGNvbnN0IEVOVl9DTURTX0FVVEhfVE9LRU4gPSBcIkFXU19DT05UQUlORVJfQVVUSE9SSVpBVElPTl9UT0tFTlwiO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjcmVkZW50aWFsIHByb3ZpZGVyIHRoYXQgd2lsbCBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbSB0aGUgRUNTXG4gKiBDb250YWluZXIgTWV0YWRhdGEgU2VydmljZVxuICovXG5leHBvcnQgY29uc3QgZnJvbUNvbnRhaW5lck1ldGFkYXRhID0gKGluaXQ6IFJlbW90ZVByb3ZpZGVySW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgY29uc3QgeyB0aW1lb3V0LCBtYXhSZXRyaWVzIH0gPSBwcm92aWRlckNvbmZpZ0Zyb21Jbml0KGluaXQpO1xuICByZXR1cm4gKCkgPT5cbiAgICByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXF1ZXN0T3B0aW9ucyA9IGF3YWl0IGdldENtZHNVcmkoKTtcbiAgICAgIGNvbnN0IGNyZWRzUmVzcG9uc2UgPSBKU09OLnBhcnNlKGF3YWl0IHJlcXVlc3RGcm9tRWNzSW1kcyh0aW1lb3V0LCByZXF1ZXN0T3B0aW9ucykpO1xuICAgICAgaWYgKCFpc0ltZHNDcmVkZW50aWFscyhjcmVkc1Jlc3BvbnNlKSkge1xuICAgICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiSW52YWxpZCByZXNwb25zZSByZWNlaXZlZCBmcm9tIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2UuXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZyb21JbWRzQ3JlZGVudGlhbHMoY3JlZHNSZXNwb25zZSk7XG4gICAgfSwgbWF4UmV0cmllcyk7XG59O1xuXG5jb25zdCByZXF1ZXN0RnJvbUVjc0ltZHMgPSBhc3luYyAodGltZW91dDogbnVtYmVyLCBvcHRpb25zOiBSZXF1ZXN0T3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIGlmIChwcm9jZXNzLmVudltFTlZfQ01EU19BVVRIX1RPS0VOXSkge1xuICAgIG9wdGlvbnMuaGVhZGVycyA9IHtcbiAgICAgIC4uLm9wdGlvbnMuaGVhZGVycyxcbiAgICAgIEF1dGhvcml6YXRpb246IHByb2Nlc3MuZW52W0VOVl9DTURTX0FVVEhfVE9LRU5dLFxuICAgIH07XG4gIH1cblxuICBjb25zdCBidWZmZXIgPSBhd2FpdCBodHRwUmVxdWVzdCh7XG4gICAgLi4ub3B0aW9ucyxcbiAgICB0aW1lb3V0LFxuICB9KTtcbiAgcmV0dXJuIGJ1ZmZlci50b1N0cmluZygpO1xufTtcblxuY29uc3QgQ01EU19JUCA9IFwiMTY5LjI1NC4xNzAuMlwiO1xuY29uc3QgR1JFRU5HUkFTU19IT1NUUyA9IHtcbiAgbG9jYWxob3N0OiB0cnVlLFxuICBcIjEyNy4wLjAuMVwiOiB0cnVlLFxufTtcbmNvbnN0IEdSRUVOR1JBU1NfUFJPVE9DT0xTID0ge1xuICBcImh0dHA6XCI6IHRydWUsXG4gIFwiaHR0cHM6XCI6IHRydWUsXG59O1xuXG5jb25zdCBnZXRDbWRzVXJpID0gYXN5bmMgKCk6IFByb21pc2U8UmVxdWVzdE9wdGlvbnM+ID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9DTURTX1JFTEFUSVZFX1VSSV0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgaG9zdG5hbWU6IENNRFNfSVAsXG4gICAgICBwYXRoOiBwcm9jZXNzLmVudltFTlZfQ01EU19SRUxBVElWRV9VUkldLFxuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfRlVMTF9VUkldKSB7XG4gICAgY29uc3QgcGFyc2VkID0gcGFyc2UocHJvY2Vzcy5lbnZbRU5WX0NNRFNfRlVMTF9VUkldISk7XG4gICAgaWYgKCFwYXJzZWQuaG9zdG5hbWUgfHwgIShwYXJzZWQuaG9zdG5hbWUgaW4gR1JFRU5HUkFTU19IT1NUUykpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGAke3BhcnNlZC5ob3N0bmFtZX0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgaG9zdG5hbWVgLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIXBhcnNlZC5wcm90b2NvbCB8fCAhKHBhcnNlZC5wcm90b2NvbCBpbiBHUkVFTkdSQVNTX1BST1RPQ09MUykpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGAke3BhcnNlZC5wcm90b2NvbH0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgcHJvdG9jb2xgLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4ucGFyc2VkLFxuICAgICAgcG9ydDogcGFyc2VkLnBvcnQgPyBwYXJzZUludChwYXJzZWQucG9ydCwgMTApIDogdW5kZWZpbmVkLFxuICAgIH07XG4gIH1cblxuICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFxuICAgIFwiVGhlIGNvbnRhaW5lciBtZXRhZGF0YSBjcmVkZW50aWFsIHByb3ZpZGVyIGNhbm5vdCBiZSB1c2VkIHVubGVzc1wiICtcbiAgICAgIGAgdGhlICR7RU5WX0NNRFNfUkVMQVRJVkVfVVJJfSBvciAke0VOVl9DTURTX0ZVTExfVVJJfSBlbnZpcm9ubWVudGAgK1xuICAgICAgXCIgdmFyaWFibGUgaXMgc2V0XCIsXG4gICAgZmFsc2VcbiAgKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst IMDS_IP = \"169.254.169.254\";\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\n/**\n * Creates a credential provider that will source credentials from the EC2\n * Instance Metadata Service\n */\nconst fromInstanceMetadata = (init = {}) => {\n    // when set to true, metadata service will not fetch token\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry_1.retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry_1.retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { timeout });\n            }\n            return getCredentials(maxRetries, {\n                timeout,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n            });\n        }\n    };\n};\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getMetadataToken = async (options) => httpRequest_1.httpRequest({\n    ...options,\n    host: IMDS_IP,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest_1.httpRequest({ ...options, host: IMDS_IP, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest_1.httpRequest({\n        ...options,\n        host: IMDS_IP,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUluc3RhbmNlTWV0YWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZnJvbUluc3RhbmNlTWV0YWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXNFO0FBSXRFLDhEQUEyRDtBQUMzRCxzRUFBMEY7QUFDMUYsNEVBQWlHO0FBQ2pHLGtEQUErQztBQUUvQyxNQUFNLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQztBQUNsQyxNQUFNLFNBQVMsR0FBRyw2Q0FBNkMsQ0FBQztBQUNoRSxNQUFNLGVBQWUsR0FBRyxtQkFBbUIsQ0FBQztBQUU1Qzs7O0dBR0c7QUFDSSxNQUFNLG9CQUFvQixHQUFHLENBQUMsT0FBMkIsRUFBRSxFQUFzQixFQUFFO0lBQ3hGLDBEQUEwRDtJQUMxRCxJQUFJLGlCQUFpQixHQUFHLEtBQUssQ0FBQztJQUM5QixNQUFNLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxHQUFHLDJDQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTdELE1BQU0sY0FBYyxHQUFHLEtBQUssRUFBRSxVQUFrQixFQUFFLE9BQXVCLEVBQUUsRUFBRTtRQUMzRSxNQUFNLE9BQU8sR0FBRyxDQUNkLE1BQU0sYUFBSyxDQUFTLEtBQUssSUFBSSxFQUFFO1lBQzdCLElBQUksT0FBZSxDQUFDO1lBQ3BCLElBQUk7Z0JBQ0YsT0FBTyxHQUFHLE1BQU0sVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ3JDO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osSUFBSSxHQUFHLENBQUMsVUFBVSxLQUFLLEdBQUcsRUFBRTtvQkFDMUIsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO2lCQUMzQjtnQkFDRCxNQUFNLEdBQUcsQ0FBQzthQUNYO1lBQ0QsT0FBTyxPQUFPLENBQUM7UUFDakIsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUNmLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFVCxPQUFPLGFBQUssQ0FBQyxLQUFLLElBQUksRUFBRTtZQUN0QixJQUFJLEtBQWtCLENBQUM7WUFDdkIsSUFBSTtnQkFDRixLQUFLLEdBQUcsTUFBTSx5QkFBeUIsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDM0Q7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixJQUFJLEdBQUcsQ0FBQyxVQUFVLEtBQUssR0FBRyxFQUFFO29CQUMxQixpQkFBaUIsR0FBRyxLQUFLLENBQUM7aUJBQzNCO2dCQUNELE1BQU0sR0FBRyxDQUFDO2FBQ1g7WUFDRCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNqQixDQUFDLENBQUM7SUFFRixPQUFPLEtBQUssSUFBSSxFQUFFO1FBQ2hCLElBQUksaUJBQWlCLEVBQUU7WUFDckIsT0FBTyxjQUFjLENBQUMsVUFBVSxFQUFFLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztTQUNoRDthQUFNO1lBQ0wsSUFBSSxLQUFhLENBQUM7WUFDbEIsSUFBSTtnQkFDRixLQUFLLEdBQUcsQ0FBQyxNQUFNLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQzFEO1lBQUMsT0FBTyxLQUFLLEVBQUU7Z0JBQ2QsSUFBSSxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxVQUFVLE1BQUssR0FBRyxFQUFFO29CQUM3QixNQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFO3dCQUN6QixPQUFPLEVBQUUsMkNBQTJDO3FCQUNyRCxDQUFDLENBQUM7aUJBQ0o7cUJBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLGNBQWMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtvQkFDekYsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO2lCQUMxQjtnQkFDRCxPQUFPLGNBQWMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO2FBQ2hEO1lBQ0QsT0FBTyxjQUFjLENBQUMsVUFBVSxFQUFFO2dCQUNoQyxPQUFPO2dCQUNQLE9BQU8sRUFBRTtvQkFDUCwwQkFBMEIsRUFBRSxLQUFLO2lCQUNsQzthQUNGLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBNURXLFFBQUEsb0JBQW9CLHdCQTREL0I7QUFFRixNQUFNLGdCQUFnQixHQUFHLEtBQUssRUFBRSxPQUF1QixFQUFFLEVBQUUsQ0FDekQseUJBQVcsQ0FBQztJQUNWLEdBQUcsT0FBTztJQUNWLElBQUksRUFBRSxPQUFPO0lBQ2IsSUFBSSxFQUFFLGVBQWU7SUFDckIsTUFBTSxFQUFFLEtBQUs7SUFDYixPQUFPLEVBQUU7UUFDUCxzQ0FBc0MsRUFBRSxPQUFPO0tBQ2hEO0NBQ0YsQ0FBQyxDQUFDO0FBRUwsTUFBTSxVQUFVLEdBQUcsS0FBSyxFQUFFLE9BQXVCLEVBQUUsRUFBRSxDQUNuRCxDQUFDLE1BQU0seUJBQVcsQ0FBQyxFQUFFLEdBQUcsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUVqRixNQUFNLHlCQUF5QixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQUUsT0FBdUIsRUFBRSxFQUFFO0lBQ25GLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQzlCLENBQ0UsTUFBTSx5QkFBVyxDQUFDO1FBQ2hCLEdBQUcsT0FBTztRQUNWLElBQUksRUFBRSxPQUFPO1FBQ2IsSUFBSSxFQUFFLFNBQVMsR0FBRyxPQUFPO0tBQzFCLENBQUMsQ0FDSCxDQUFDLFFBQVEsRUFBRSxDQUNiLENBQUM7SUFFRixJQUFJLENBQUMsbUNBQWlCLENBQUMsYUFBYSxDQUFDLEVBQUU7UUFDckMsTUFBTSxJQUFJLDRDQUF3QixDQUFDLDJEQUEyRCxDQUFDLENBQUM7S0FDakc7SUFFRCxPQUFPLHFDQUFtQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbFByb3ZpZGVyLCBDcmVkZW50aWFscyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiaHR0cFwiO1xuXG5pbXBvcnQgeyBodHRwUmVxdWVzdCB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL2h0dHBSZXF1ZXN0XCI7XG5pbXBvcnQgeyBmcm9tSW1kc0NyZWRlbnRpYWxzLCBpc0ltZHNDcmVkZW50aWFscyB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFsc1wiO1xuaW1wb3J0IHsgcHJvdmlkZXJDb25maWdGcm9tSW5pdCwgUmVtb3RlUHJvdmlkZXJJbml0IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvUmVtb3RlUHJvdmlkZXJJbml0XCI7XG5pbXBvcnQgeyByZXRyeSB9IGZyb20gXCIuL3JlbW90ZVByb3ZpZGVyL3JldHJ5XCI7XG5cbmNvbnN0IElNRFNfSVAgPSBcIjE2OS4yNTQuMTY5LjI1NFwiO1xuY29uc3QgSU1EU19QQVRIID0gXCIvbGF0ZXN0L21ldGEtZGF0YS9pYW0vc2VjdXJpdHktY3JlZGVudGlhbHMvXCI7XG5jb25zdCBJTURTX1RPS0VOX1BBVEggPSBcIi9sYXRlc3QvYXBpL3Rva2VuXCI7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNyZWRlbnRpYWwgcHJvdmlkZXIgdGhhdCB3aWxsIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tIHRoZSBFQzJcbiAqIEluc3RhbmNlIE1ldGFkYXRhIFNlcnZpY2VcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21JbnN0YW5jZU1ldGFkYXRhID0gKGluaXQ6IFJlbW90ZVByb3ZpZGVySW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgLy8gd2hlbiBzZXQgdG8gdHJ1ZSwgbWV0YWRhdGEgc2VydmljZSB3aWxsIG5vdCBmZXRjaCB0b2tlblxuICBsZXQgZGlzYWJsZUZldGNoVG9rZW4gPSBmYWxzZTtcbiAgY29uc3QgeyB0aW1lb3V0LCBtYXhSZXRyaWVzIH0gPSBwcm92aWRlckNvbmZpZ0Zyb21Jbml0KGluaXQpO1xuXG4gIGNvbnN0IGdldENyZWRlbnRpYWxzID0gYXN5bmMgKG1heFJldHJpZXM6IG51bWJlciwgb3B0aW9uczogUmVxdWVzdE9wdGlvbnMpID0+IHtcbiAgICBjb25zdCBwcm9maWxlID0gKFxuICAgICAgYXdhaXQgcmV0cnk8c3RyaW5nPihhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBwcm9maWxlOiBzdHJpbmc7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcHJvZmlsZSA9IGF3YWl0IGdldFByb2ZpbGUob3B0aW9ucyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGlmIChlcnIuc3RhdHVzQ29kZSA9PT0gNDAxKSB7XG4gICAgICAgICAgICBkaXNhYmxlRmV0Y2hUb2tlbiA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByb2ZpbGU7XG4gICAgICB9LCBtYXhSZXRyaWVzKVxuICAgICkudHJpbSgpO1xuXG4gICAgcmV0dXJuIHJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBjcmVkczogQ3JlZGVudGlhbHM7XG4gICAgICB0cnkge1xuICAgICAgICBjcmVkcyA9IGF3YWl0IGdldENyZWRlbnRpYWxzRnJvbVByb2ZpbGUocHJvZmlsZSwgb3B0aW9ucyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyci5zdGF0dXNDb2RlID09PSA0MDEpIHtcbiAgICAgICAgICBkaXNhYmxlRmV0Y2hUb2tlbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjcmVkcztcbiAgICB9LCBtYXhSZXRyaWVzKTtcbiAgfTtcblxuICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgIGlmIChkaXNhYmxlRmV0Y2hUb2tlbikge1xuICAgICAgcmV0dXJuIGdldENyZWRlbnRpYWxzKG1heFJldHJpZXMsIHsgdGltZW91dCB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHRva2VuOiBzdHJpbmc7XG4gICAgICB0cnkge1xuICAgICAgICB0b2tlbiA9IChhd2FpdCBnZXRNZXRhZGF0YVRva2VuKHsgdGltZW91dCB9KSkudG9TdHJpbmcoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChlcnJvcj8uc3RhdHVzQ29kZSA9PT0gNDAwKSB7XG4gICAgICAgICAgdGhyb3cgT2JqZWN0LmFzc2lnbihlcnJvciwge1xuICAgICAgICAgICAgbWVzc2FnZTogXCJFQzIgTWV0YWRhdGEgdG9rZW4gcmVxdWVzdCByZXR1cm5lZCBlcnJvclwiLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKGVycm9yLm1lc3NhZ2UgPT09IFwiVGltZW91dEVycm9yXCIgfHwgWzQwMywgNDA0LCA0MDVdLmluY2x1ZGVzKGVycm9yLnN0YXR1c0NvZGUpKSB7XG4gICAgICAgICAgZGlzYWJsZUZldGNoVG9rZW4gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRDcmVkZW50aWFscyhtYXhSZXRyaWVzLCB7IHRpbWVvdXQgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZ2V0Q3JlZGVudGlhbHMobWF4UmV0cmllcywge1xuICAgICAgICB0aW1lb3V0LFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgXCJ4LWF3cy1lYzItbWV0YWRhdGEtdG9rZW5cIjogdG9rZW4sXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59O1xuXG5jb25zdCBnZXRNZXRhZGF0YVRva2VuID0gYXN5bmMgKG9wdGlvbnM6IFJlcXVlc3RPcHRpb25zKSA9PlxuICBodHRwUmVxdWVzdCh7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBob3N0OiBJTURTX0lQLFxuICAgIHBhdGg6IElNRFNfVE9LRU5fUEFUSCxcbiAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJ4LWF3cy1lYzItbWV0YWRhdGEtdG9rZW4tdHRsLXNlY29uZHNcIjogXCIyMTYwMFwiLFxuICAgIH0sXG4gIH0pO1xuXG5jb25zdCBnZXRQcm9maWxlID0gYXN5bmMgKG9wdGlvbnM6IFJlcXVlc3RPcHRpb25zKSA9PlxuICAoYXdhaXQgaHR0cFJlcXVlc3QoeyAuLi5vcHRpb25zLCBob3N0OiBJTURTX0lQLCBwYXRoOiBJTURTX1BBVEggfSkpLnRvU3RyaW5nKCk7XG5cbmNvbnN0IGdldENyZWRlbnRpYWxzRnJvbVByb2ZpbGUgPSBhc3luYyAocHJvZmlsZTogc3RyaW5nLCBvcHRpb25zOiBSZXF1ZXN0T3B0aW9ucykgPT4ge1xuICBjb25zdCBjcmVkc1Jlc3BvbnNlID0gSlNPTi5wYXJzZShcbiAgICAoXG4gICAgICBhd2FpdCBodHRwUmVxdWVzdCh7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGhvc3Q6IElNRFNfSVAsXG4gICAgICAgIHBhdGg6IElNRFNfUEFUSCArIHByb2ZpbGUsXG4gICAgICB9KVxuICAgICkudG9TdHJpbmcoKVxuICApO1xuXG4gIGlmICghaXNJbWRzQ3JlZGVudGlhbHMoY3JlZHNSZXNwb25zZSkpIHtcbiAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiSW52YWxpZCByZXNwb25zZSByZWNlaXZlZCBmcm9tIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2UuXCIpO1xuICB9XG5cbiAgcmV0dXJuIGZyb21JbWRzQ3JlZGVudGlhbHMoY3JlZHNSZXNwb25zZSk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromContainerMetadata\"), exports);\ntslib_1.__exportStar(require(\"./fromInstanceMetadata\"), exports);\ntslib_1.__exportStar(require(\"./remoteProvider/RemoteProviderInit\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXdDO0FBQ3hDLGlFQUF1QztBQUN2Qyw4RUFBb0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9mcm9tQ29udGFpbmVyTWV0YWRhdGFcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21JbnN0YW5jZU1ldGFkYXRhXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXRcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1kc0NyZWRlbnRpYWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFTTyxNQUFNLGlCQUFpQixHQUFHLENBQUMsR0FBUSxFQUEwQixFQUFFLENBQ3BFLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDWixPQUFPLEdBQUcsS0FBSyxRQUFRO0lBQ3ZCLE9BQU8sR0FBRyxDQUFDLFdBQVcsS0FBSyxRQUFRO0lBQ25DLE9BQU8sR0FBRyxDQUFDLGVBQWUsS0FBSyxRQUFRO0lBQ3ZDLE9BQU8sR0FBRyxDQUFDLEtBQUssS0FBSyxRQUFRO0lBQzdCLE9BQU8sR0FBRyxDQUFDLFVBQVUsS0FBSyxRQUFRLENBQUM7QUFOeEIsUUFBQSxpQkFBaUIscUJBTU87QUFFOUIsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQXNCLEVBQWUsRUFBRSxDQUFDLENBQUM7SUFDM0UsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO0lBQzlCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtJQUN0QyxZQUFZLEVBQUUsS0FBSyxDQUFDLEtBQUs7SUFDekIsVUFBVSxFQUFFLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7Q0FDdkMsQ0FBQyxDQUFDO0FBTFUsUUFBQSxtQkFBbUIsdUJBSzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHMgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbWRzQ3JlZGVudGlhbHMge1xuICBBY2Nlc3NLZXlJZDogc3RyaW5nO1xuICBTZWNyZXRBY2Nlc3NLZXk6IHN0cmluZztcbiAgVG9rZW46IHN0cmluZztcbiAgRXhwaXJhdGlvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgaXNJbWRzQ3JlZGVudGlhbHMgPSAoYXJnOiBhbnkpOiBhcmcgaXMgSW1kc0NyZWRlbnRpYWxzID0+XG4gIEJvb2xlYW4oYXJnKSAmJlxuICB0eXBlb2YgYXJnID09PSBcIm9iamVjdFwiICYmXG4gIHR5cGVvZiBhcmcuQWNjZXNzS2V5SWQgPT09IFwic3RyaW5nXCIgJiZcbiAgdHlwZW9mIGFyZy5TZWNyZXRBY2Nlc3NLZXkgPT09IFwic3RyaW5nXCIgJiZcbiAgdHlwZW9mIGFyZy5Ub2tlbiA9PT0gXCJzdHJpbmdcIiAmJlxuICB0eXBlb2YgYXJnLkV4cGlyYXRpb24gPT09IFwic3RyaW5nXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tSW1kc0NyZWRlbnRpYWxzID0gKGNyZWRzOiBJbWRzQ3JlZGVudGlhbHMpOiBDcmVkZW50aWFscyA9PiAoe1xuICBhY2Nlc3NLZXlJZDogY3JlZHMuQWNjZXNzS2V5SWQsXG4gIHNlY3JldEFjY2Vzc0tleTogY3JlZHMuU2VjcmV0QWNjZXNzS2V5LFxuICBzZXNzaW9uVG9rZW46IGNyZWRzLlRva2VuLFxuICBleHBpcmF0aW9uOiBuZXcgRGF0ZShjcmVkcy5FeHBpcmF0aW9uKSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\n// The default in AWS SDK for Python and CLI (botocore) is no retry or one attempt\n// https://github.com/boto/botocore/blob/646c61a7065933e75bab545b785e6098bc94c081/botocore/utils.py#L273\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVtb3RlUHJvdmlkZXJJbml0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL1JlbW90ZVByb3ZpZGVySW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLGVBQWUsR0FBRyxJQUFJLENBQUM7QUFFcEMsa0ZBQWtGO0FBQ2xGLHdHQUF3RztBQUMzRixRQUFBLG1CQUFtQixHQUFHLENBQUMsQ0FBQztBQWdCOUIsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLEVBQ3JDLFVBQVUsR0FBRywyQkFBbUIsRUFDaEMsT0FBTyxHQUFHLHVCQUFlLEdBQ04sRUFBd0IsRUFBRSxDQUFDLENBQUMsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUg3RCxRQUFBLHNCQUFzQiwwQkFHdUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTAwMDtcblxuLy8gVGhlIGRlZmF1bHQgaW4gQVdTIFNESyBmb3IgUHl0aG9uIGFuZCBDTEkgKGJvdG9jb3JlKSBpcyBubyByZXRyeSBvciBvbmUgYXR0ZW1wdFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90b2NvcmUvYmxvYi82NDZjNjFhNzA2NTkzM2U3NWJhYjU0NWI3ODVlNjA5OGJjOTRjMDgxL2JvdG9jb3JlL3V0aWxzLnB5I0wyNzNcbmV4cG9ydCBjb25zdCBERUZBVUxUX01BWF9SRVRSSUVTID0gMDtcblxuZXhwb3J0IGludGVyZmFjZSBSZW1vdGVQcm92aWRlckNvbmZpZyB7XG4gIC8qKlxuICAgKiBUaGUgY29ubmVjdGlvbiB0aW1lb3V0IChpbiBtaWxsaXNlY29uZHMpXG4gICAqL1xuICB0aW1lb3V0OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiB0aW1lcyB0aGUgSFRUUCBjb25uZWN0aW9uIHNob3VsZCBiZSByZXRyaWVkXG4gICAqL1xuICBtYXhSZXRyaWVzOiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIFJlbW90ZVByb3ZpZGVySW5pdCA9IFBhcnRpYWw8UmVtb3RlUHJvdmlkZXJDb25maWc+O1xuXG5leHBvcnQgY29uc3QgcHJvdmlkZXJDb25maWdGcm9tSW5pdCA9ICh7XG4gIG1heFJldHJpZXMgPSBERUZBVUxUX01BWF9SRVRSSUVTLFxuICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxufTogUmVtb3RlUHJvdmlkZXJJbml0KTogUmVtb3RlUHJvdmlkZXJDb25maWcgPT4gKHsgbWF4UmV0cmllcywgdGltZW91dCB9KTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\n/**\n * @internal\n */\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        const req = http_1.request({ method: \"GET\", ...options });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQTJEO0FBQzNELG1DQUFnQztBQUNoQywrQkFBZ0U7QUFFaEU7O0dBRUc7QUFDSCxTQUFnQixXQUFXLENBQUMsT0FBdUI7SUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUNyQyxNQUFNLEdBQUcsR0FBRyxjQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUVuRCxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ3RCLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksaUNBQWEsQ0FBQyxnREFBZ0QsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDaEcsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBRUgsR0FBRyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO1lBQ3JCLE1BQU0sQ0FBQyxJQUFJLGlDQUFhLENBQUMsNkNBQTZDLENBQUMsQ0FBQyxDQUFDO1lBQ3pFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztRQUVILEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLENBQUMsR0FBb0IsRUFBRSxFQUFFO1lBQzFDLE1BQU0sRUFBRSxVQUFVLEdBQUcsR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1lBQ2pDLElBQUksVUFBVSxHQUFHLEdBQUcsSUFBSSxHQUFHLElBQUksVUFBVSxFQUFFO2dCQUN6QyxNQUFNLENBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGlDQUFhLENBQUMsd0RBQXdELENBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQzNHLENBQUM7Z0JBQ0YsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO2FBQ2Y7WUFFRCxNQUFNLE1BQU0sR0FBa0IsRUFBRSxDQUFDO1lBQ2pDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7WUFDL0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7Z0JBQ2pCLE9BQU8sQ0FBQyxlQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQy9CLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNoQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ1osQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBbkNELGtDQW1DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IEluY29taW5nTWVzc2FnZSwgcmVxdWVzdCwgUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiaHR0cFwiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gaHR0cFJlcXVlc3Qob3B0aW9uczogUmVxdWVzdE9wdGlvbnMpOiBQcm9taXNlPEJ1ZmZlcj4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHJlcSA9IHJlcXVlc3QoeyBtZXRob2Q6IFwiR0VUXCIsIC4uLm9wdGlvbnMgfSk7XG5cbiAgICByZXEub24oXCJlcnJvclwiLCAoZXJyKSA9PiB7XG4gICAgICByZWplY3QoT2JqZWN0LmFzc2lnbihuZXcgUHJvdmlkZXJFcnJvcihcIlVuYWJsZSB0byBjb25uZWN0IHRvIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2VcIiksIGVycikpO1xuICAgICAgcmVxLmRlc3Ryb3koKTtcbiAgICB9KTtcblxuICAgIHJlcS5vbihcInRpbWVvdXRcIiwgKCkgPT4ge1xuICAgICAgcmVqZWN0KG5ldyBQcm92aWRlckVycm9yKFwiVGltZW91dEVycm9yIGZyb20gaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZVwiKSk7XG4gICAgICByZXEuZGVzdHJveSgpO1xuICAgIH0pO1xuXG4gICAgcmVxLm9uKFwicmVzcG9uc2VcIiwgKHJlczogSW5jb21pbmdNZXNzYWdlKSA9PiB7XG4gICAgICBjb25zdCB7IHN0YXR1c0NvZGUgPSA0MDAgfSA9IHJlcztcbiAgICAgIGlmIChzdGF0dXNDb2RlIDwgMjAwIHx8IDMwMCA8PSBzdGF0dXNDb2RlKSB7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBPYmplY3QuYXNzaWduKG5ldyBQcm92aWRlckVycm9yKFwiRXJyb3IgcmVzcG9uc2UgcmVjZWl2ZWQgZnJvbSBpbnN0YW5jZSBtZXRhZGF0YSBzZXJ2aWNlXCIpLCB7IHN0YXR1c0NvZGUgfSlcbiAgICAgICAgKTtcbiAgICAgICAgcmVxLmRlc3Ryb3koKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY2h1bmtzOiBBcnJheTxCdWZmZXI+ID0gW107XG4gICAgICByZXMub24oXCJkYXRhXCIsIChjaHVuaykgPT4ge1xuICAgICAgICBjaHVua3MucHVzaChjaHVuayBhcyBCdWZmZXIpO1xuICAgICAgfSk7XG4gICAgICByZXMub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgICAgICByZXNvbHZlKEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XG4gICAgICAgIHJlcS5kZXN0cm95KCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJlcS5lbmQoKTtcbiAgfSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\n/**\n * @internal\n */\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvcmV0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBSUE7O0dBRUc7QUFDSSxNQUFNLEtBQUssR0FBRyxDQUFJLE9BQTZCLEVBQUUsVUFBa0IsRUFBYyxFQUFFO0lBQ3hGLElBQUksT0FBTyxHQUFHLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUM7QUFQVyxRQUFBLEtBQUssU0FPaEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFJldHJ5YWJsZVByb3ZpZGVyPFQ+IHtcbiAgKCk6IFByb21pc2U8VD47XG59XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCByZXRyeSA9IDxUPih0b1JldHJ5OiBSZXRyeWFibGVQcm92aWRlcjxUPiwgbWF4UmV0cmllczogbnVtYmVyKTogUHJvbWlzZTxUPiA9PiB7XG4gIGxldCBwcm9taXNlID0gdG9SZXRyeSgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1heFJldHJpZXM7IGkrKykge1xuICAgIHByb21pc2UgPSBwcm9taXNlLmNhdGNoKHRvUmV0cnkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMasterProfileName = exports.parseKnownFiles = exports.fromIni = exports.ENV_PROFILE = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst DEFAULT_PROFILE = \"default\";\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1;\nconst isAssumeRoleWithSourceProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n/**\n * Creates a credential provider that will read from ini files and supports\n * role assumption and multi-factor authentication.\n */\nconst fromIni = (init = {}) => async () => {\n    const profiles = await exports.parseKnownFiles(init);\n    return resolveProfileData(exports.getMasterProfileName(init), profiles, init);\n};\nexports.fromIni = fromIni;\n/**\n * Load profiles from credentials and config INI files and normalize them into a\n * single profile list.\n *\n * @internal\n */\nconst parseKnownFiles = async (init) => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init) } = init;\n    const parsedFiles = await loadedConfig;\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\nexports.parseKnownFiles = parseKnownFiles;\n/**\n * @internal\n */\nconst getMasterProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE;\nexports.getMasterProfileName = getMasterProfileName;\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    // If this is not the first profile visited, static credentials should be\n    // preferred over role assumption metadata. This special treatment of\n    // second and subsequent hops is to ensure compatibility with the AWS CLI.\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    // If this is the first profile visited, role assumption keys should be\n    // given precedence over static credentials.\n    if (isAssumeRoleWithSourceProfile(data) || isAssumeRoleWithProviderProfile(data)) {\n        const { external_id: ExternalId, mfa_serial, role_arn: RoleArn, role_session_name: RoleSessionName = \"aws-sdk-js-\" + Date.now(), source_profile, credential_source, } = data;\n        if (!options.roleAssumer) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no` + ` role assumption callback was provided.`, false);\n        }\n        if (source_profile && source_profile in visitedProfiles) {\n            throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n                ` ${exports.getMasterProfileName(options)}. Profiles visited: ` +\n                Object.keys(visitedProfiles).join(\", \"), false);\n        }\n        const sourceCreds = source_profile\n            ? resolveProfileData(source_profile, profiles, options, {\n                ...visitedProfiles,\n                [source_profile]: true,\n            })\n            : resolveCredentialSource(credential_source, profileName)();\n        const params = { RoleArn, RoleSessionName, ExternalId };\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication,` + ` but no MFA code callback was provided.`, false);\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        return options.roleAssumer(await sourceCreds, params);\n    }\n    // If no role assumption metadata is present, attempt to load static\n    // credentials from the selected profile.\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    // If no static credentials are present, attempt to assume role with\n    // web identity if web_identity_token_file and role_arn is available\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    // If the profile cannot be parsed or contains neither static credentials\n    // nor role assumption metadata, throw an error. This should be considered a\n    // terminal resolution error if a profile has been specified by the user\n    // (whether via a parameter, an environment variable, or another profile's\n    // `source_profile` key).\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared` + ` credentials file.`);\n};\n/**\n * Resolve the `credential_source` entry from the profile, and return the\n * credential providers respectively. No memoization is needed for the\n * credential source providers because memoization should be added outside the\n * fromIni() provider. The source credential needs to be refreshed every time\n * fromIni() is called.\n */\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nconst resolveWebIdentityCredentials = async (profile, options) => credential_provider_web_identity_1.fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\n/**\n * Creates a credential provider that will attempt to find credentials from the\n * following sources (listed in order of precedence):\n *   * Environment variables exposed via `process.env`\n *   * SSO credentials from token cache\n *   * Web identity token credentials\n *   * Shared credentials and config ini files\n *   * The EC2/ECS Instance Metadata Service\n *\n * The default credential provider will invoke one provider at a time and only\n * continue to the next if no credentials have been located. For example, if\n * the process finds values defined via the `AWS_ACCESS_KEY_ID` and\n * `AWS_SECRET_ACCESS_KEY` environment variables, the files at\n * `~/.aws/credentials` and `~/.aws/config` will not be read, nor will any\n * messages be sent to the Instance Metadata Service.\n *\n * @param init                  Configuration that is passed to each individual\n *                              provider\n *\n * @see fromEnv                 The function used to source credentials from\n *                              environment variables\n * @see fromSSO                 The function used to source credentials from\n *                              resolved SSO token cache\n * @see fromTokenFile           The function used to source credentials from\n *                              token file\n * @see fromIni                 The function used to source credentials from INI\n *                              files\n * @see fromProcess             The function used to sources credentials from\n *                              credential_process in INI files\n * @see fromInstanceMetadata    The function used to source credentials from the\n *                              EC2 Instance Metadata Service\n * @see fromContainerMetadata   The function used to source credentials from the\n *                              ECS Container Metadata Service\n */\nconst defaultProvider = (init = {}) => {\n    const options = { profile: process.env[credential_provider_ini_1.ENV_PROFILE], ...init };\n    if (!options.loadedConfig)\n        options.loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init);\n    const providers = [\n        credential_provider_sso_1.fromSSO(options),\n        credential_provider_ini_1.fromIni(options),\n        credential_provider_process_1.fromProcess(options),\n        credential_provider_web_identity_1.fromTokenFile(options),\n        remoteProvider(options),\n        async () => {\n            throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n        },\n    ];\n    if (!options.profile)\n        providers.unshift(credential_provider_env_1.fromEnv());\n    const providerChain = property_provider_1.chain(...providers);\n    return property_provider_1.memoize(providerChain, (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n};\nexports.defaultProvider = defaultProvider;\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return credential_provider_imds_1.fromContainerMetadata(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return () => Promise.reject(new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\"));\n    }\n    return credential_provider_imds_1.fromInstanceMetadata(init);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOEVBQTJEO0FBQzNELGdGQU0yQztBQUMzQyw4RUFBcUY7QUFDckYsc0ZBQW9GO0FBQ3BGLDhFQUF3RTtBQUN4RSxnR0FBNkY7QUFDN0Ysa0VBQXNGO0FBQ3RGLDRFQUF3RTtBQUczRCxRQUFBLGlCQUFpQixHQUFHLDJCQUEyQixDQUFDO0FBRTdEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQ0c7QUFDSSxNQUFNLGVBQWUsR0FBRyxDQUM3QixPQUE2RixFQUFFLEVBQzNFLEVBQUU7SUFDdEIsTUFBTSxPQUFPLEdBQUcsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQ0FBVyxDQUFDLEVBQUUsR0FBRyxJQUFJLEVBQUUsQ0FBQztJQUMvRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVk7UUFBRSxPQUFPLENBQUMsWUFBWSxHQUFHLDhDQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlFLE1BQU0sU0FBUyxHQUFHO1FBQ2hCLGlDQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2hCLGlDQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2hCLHlDQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3BCLGdEQUFhLENBQUMsT0FBTyxDQUFDO1FBQ3RCLGNBQWMsQ0FBQyxPQUFPLENBQUM7UUFDdkIsS0FBSyxJQUFJLEVBQUU7WUFDVCxNQUFNLElBQUksNENBQXdCLENBQUMsK0NBQStDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0YsQ0FBQztLQUNGLENBQUM7SUFDRixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU87UUFBRSxTQUFTLENBQUMsT0FBTyxDQUFDLGlDQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sYUFBYSxHQUFHLHlCQUFLLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztJQUUxQyxPQUFPLDJCQUFPLENBQ1osYUFBYSxFQUNiLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVMsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxNQUFNLEVBQy9HLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FDdEQsQ0FBQztBQUNKLENBQUMsQ0FBQztBQXZCVyxRQUFBLGVBQWUsbUJBdUIxQjtBQUVGLE1BQU0sY0FBYyxHQUFHLENBQUMsSUFBd0IsRUFBc0IsRUFBRTtJQUN0RSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0RBQXFCLENBQUMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLDRDQUFpQixDQUFDLEVBQUU7UUFDeEUsT0FBTyxnREFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNwQztJQUVELElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBaUIsQ0FBQyxFQUFFO1FBQ2xDLE9BQU8sR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLDRDQUF3QixDQUFDLCtDQUErQyxDQUFDLENBQUMsQ0FBQztLQUM1RztJQUVELE9BQU8sK0NBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUVudiB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWVudlwiO1xuaW1wb3J0IHtcbiAgRU5WX0NNRFNfRlVMTF9VUkksXG4gIEVOVl9DTURTX1JFTEFUSVZFX1VSSSxcbiAgZnJvbUNvbnRhaW5lck1ldGFkYXRhLFxuICBmcm9tSW5zdGFuY2VNZXRhZGF0YSxcbiAgUmVtb3RlUHJvdmlkZXJJbml0LFxufSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzXCI7XG5pbXBvcnQgeyBFTlZfUFJPRklMRSwgZnJvbUluaSwgRnJvbUluaUluaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbmlcIjtcbmltcG9ydCB7IGZyb21Qcm9jZXNzLCBGcm9tUHJvY2Vzc0luaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1wcm9jZXNzXCI7XG5pbXBvcnQgeyBmcm9tU1NPLCBGcm9tU1NPSW5pdCB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXNzb1wiO1xuaW1wb3J0IHsgZnJvbVRva2VuRmlsZSwgRnJvbVRva2VuRmlsZUluaXQgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci13ZWItaWRlbnRpdHlcIjtcbmltcG9ydCB7IGNoYWluLCBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IsIG1lbW9pemUgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IGxvYWRTaGFyZWRDb25maWdGaWxlcyB9IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9JTURTX0RJU0FCTEVEID0gXCJBV1NfRUMyX01FVEFEQVRBX0RJU0FCTEVEXCI7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNyZWRlbnRpYWwgcHJvdmlkZXIgdGhhdCB3aWxsIGF0dGVtcHQgdG8gZmluZCBjcmVkZW50aWFscyBmcm9tIHRoZVxuICogZm9sbG93aW5nIHNvdXJjZXMgKGxpc3RlZCBpbiBvcmRlciBvZiBwcmVjZWRlbmNlKTpcbiAqICAgKiBFbnZpcm9ubWVudCB2YXJpYWJsZXMgZXhwb3NlZCB2aWEgYHByb2Nlc3MuZW52YFxuICogICAqIFNTTyBjcmVkZW50aWFscyBmcm9tIHRva2VuIGNhY2hlXG4gKiAgICogV2ViIGlkZW50aXR5IHRva2VuIGNyZWRlbnRpYWxzXG4gKiAgICogU2hhcmVkIGNyZWRlbnRpYWxzIGFuZCBjb25maWcgaW5pIGZpbGVzXG4gKiAgICogVGhlIEVDMi9FQ1MgSW5zdGFuY2UgTWV0YWRhdGEgU2VydmljZVxuICpcbiAqIFRoZSBkZWZhdWx0IGNyZWRlbnRpYWwgcHJvdmlkZXIgd2lsbCBpbnZva2Ugb25lIHByb3ZpZGVyIGF0IGEgdGltZSBhbmQgb25seVxuICogY29udGludWUgdG8gdGhlIG5leHQgaWYgbm8gY3JlZGVudGlhbHMgaGF2ZSBiZWVuIGxvY2F0ZWQuIEZvciBleGFtcGxlLCBpZlxuICogdGhlIHByb2Nlc3MgZmluZHMgdmFsdWVzIGRlZmluZWQgdmlhIHRoZSBgQVdTX0FDQ0VTU19LRVlfSURgIGFuZFxuICogYEFXU19TRUNSRVRfQUNDRVNTX0tFWWAgZW52aXJvbm1lbnQgdmFyaWFibGVzLCB0aGUgZmlsZXMgYXRcbiAqIGB+Ly5hd3MvY3JlZGVudGlhbHNgIGFuZCBgfi8uYXdzL2NvbmZpZ2Agd2lsbCBub3QgYmUgcmVhZCwgbm9yIHdpbGwgYW55XG4gKiBtZXNzYWdlcyBiZSBzZW50IHRvIHRoZSBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlLlxuICpcbiAqIEBwYXJhbSBpbml0ICAgICAgICAgICAgICAgICAgQ29uZmlndXJhdGlvbiB0aGF0IGlzIHBhc3NlZCB0byBlYWNoIGluZGl2aWR1YWxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZXJcbiAqXG4gKiBAc2VlIGZyb21FbnYgICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudmlyb25tZW50IHZhcmlhYmxlc1xuICogQHNlZSBmcm9tU1NPICAgICAgICAgICAgICAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZCBTU08gdG9rZW4gY2FjaGVcbiAqIEBzZWUgZnJvbVRva2VuRmlsZSAgICAgICAgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlIGNyZWRlbnRpYWxzIGZyb21cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW4gZmlsZVxuICogQHNlZSBmcm9tSW5pICAgICAgICAgICAgICAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbSBJTklcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZXNcbiAqIEBzZWUgZnJvbVByb2Nlc3MgICAgICAgICAgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlcyBjcmVkZW50aWFscyBmcm9tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxfcHJvY2VzcyBpbiBJTkkgZmlsZXNcbiAqIEBzZWUgZnJvbUluc3RhbmNlTWV0YWRhdGEgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlIGNyZWRlbnRpYWxzIGZyb20gdGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVDMiBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlXG4gKiBAc2VlIGZyb21Db250YWluZXJNZXRhZGF0YSAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFQ1MgQ29udGFpbmVyIE1ldGFkYXRhIFNlcnZpY2VcbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRQcm92aWRlciA9IChcbiAgaW5pdDogRnJvbUluaUluaXQgJiBSZW1vdGVQcm92aWRlckluaXQgJiBGcm9tUHJvY2Vzc0luaXQgJiBGcm9tU1NPSW5pdCAmIEZyb21Ub2tlbkZpbGVJbml0ID0ge31cbik6IENyZWRlbnRpYWxQcm92aWRlciA9PiB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7IHByb2ZpbGU6IHByb2Nlc3MuZW52W0VOVl9QUk9GSUxFXSwgLi4uaW5pdCB9O1xuICBpZiAoIW9wdGlvbnMubG9hZGVkQ29uZmlnKSBvcHRpb25zLmxvYWRlZENvbmZpZyA9IGxvYWRTaGFyZWRDb25maWdGaWxlcyhpbml0KTtcbiAgY29uc3QgcHJvdmlkZXJzID0gW1xuICAgIGZyb21TU08ob3B0aW9ucyksXG4gICAgZnJvbUluaShvcHRpb25zKSxcbiAgICBmcm9tUHJvY2VzcyhvcHRpb25zKSxcbiAgICBmcm9tVG9rZW5GaWxlKG9wdGlvbnMpLFxuICAgIHJlbW90ZVByb3ZpZGVyKG9wdGlvbnMpLFxuICAgIGFzeW5jICgpID0+IHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXCJDb3VsZCBub3QgbG9hZCBjcmVkZW50aWFscyBmcm9tIGFueSBwcm92aWRlcnNcIiwgZmFsc2UpO1xuICAgIH0sXG4gIF07XG4gIGlmICghb3B0aW9ucy5wcm9maWxlKSBwcm92aWRlcnMudW5zaGlmdChmcm9tRW52KCkpO1xuICBjb25zdCBwcm92aWRlckNoYWluID0gY2hhaW4oLi4ucHJvdmlkZXJzKTtcblxuICByZXR1cm4gbWVtb2l6ZShcbiAgICBwcm92aWRlckNoYWluLFxuICAgIChjcmVkZW50aWFscykgPT4gY3JlZGVudGlhbHMuZXhwaXJhdGlvbiAhPT0gdW5kZWZpbmVkICYmIGNyZWRlbnRpYWxzLmV4cGlyYXRpb24uZ2V0VGltZSgpIC0gRGF0ZS5ub3coKSA8IDMwMDAwMCxcbiAgICAoY3JlZGVudGlhbHMpID0+IGNyZWRlbnRpYWxzLmV4cGlyYXRpb24gIT09IHVuZGVmaW5lZFxuICApO1xufTtcblxuY29uc3QgcmVtb3RlUHJvdmlkZXIgPSAoaW5pdDogUmVtb3RlUHJvdmlkZXJJbml0KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9DTURTX1JFTEFUSVZFX1VSSV0gfHwgcHJvY2Vzcy5lbnZbRU5WX0NNRFNfRlVMTF9VUkldKSB7XG4gICAgcmV0dXJuIGZyb21Db250YWluZXJNZXRhZGF0YShpbml0KTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudltFTlZfSU1EU19ESVNBQkxFRF0pIHtcbiAgICByZXR1cm4gKCkgPT4gUHJvbWlzZS5yZWplY3QobmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcIkVDMiBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlIGFjY2VzcyBkaXNhYmxlZFwiKSk7XG4gIH1cblxuICByZXR1cm4gZnJvbUluc3RhbmNlTWV0YWRhdGEoaW5pdCk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = exports.ENV_PROFILE = void 0;\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst child_process_1 = require(\"child_process\");\n/**\n * @internal\n */\nexports.ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Creates a credential provider that will read from a credential_process specified\n * in ini files.\n */\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await credential_provider_ini_1.parseKnownFiles(init);\n    return resolveProcessCredentials(credential_provider_ini_1.getMasterProfileName(init), profiles);\n};\nexports.fromProcess = fromProcess;\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            return await execPromise(credentialProcess)\n                .then((processResult) => {\n                let data;\n                try {\n                    data = JSON.parse(processResult);\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                const { Version: version, AccessKeyId: accessKeyId, SecretAccessKey: secretAccessKey, SessionToken: sessionToken, Expiration: expiration, } = data;\n                if (version !== 1) {\n                    throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n                }\n                if (accessKeyId === undefined || secretAccessKey === undefined) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n                }\n                let expirationUnix;\n                if (expiration) {\n                    const currentTime = new Date();\n                    const expireTime = new Date(expiration);\n                    if (expireTime < currentTime) {\n                        throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n                    }\n                    expirationUnix = Math.floor(new Date(expiration).valueOf() / 1000);\n                }\n                return {\n                    accessKeyId,\n                    secretAccessKey,\n                    sessionToken,\n                    expirationUnix,\n                };\n            })\n                .catch((error) => {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            });\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        // If the profile cannot be parsed or does not contain the default or\n        // specified profile throw an error. This should be considered a terminal\n        // resolution error if a profile has been specified by the user (whether via\n        // a parameter, anenvironment variable, or another profile's `source_profile` key).\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nconst execPromise = (command) => new Promise(function (resolve, reject) {\n    child_process_1.exec(command, (error, stdout) => {\n        if (error) {\n            reject(error);\n            return;\n        }\n        resolve(stdout.trim());\n    });\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOEVBQTRHO0FBQzVHLGtFQUFzRTtBQUd0RSxpREFBcUM7QUFFckM7O0dBRUc7QUFDVSxRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUFJekM7OztHQUdHO0FBQ0ksTUFBTSxXQUFXLEdBQ3RCLENBQUMsT0FBd0IsRUFBRSxFQUFzQixFQUFFLENBQ25ELEtBQUssSUFBSSxFQUFFO0lBQ1QsTUFBTSxRQUFRLEdBQUcsTUFBTSx5Q0FBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLE9BQU8seUJBQXlCLENBQUMsOENBQW9CLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDekUsQ0FBQyxDQUFDO0FBTFMsUUFBQSxXQUFXLGVBS3BCO0FBRUosTUFBTSx5QkFBeUIsR0FBRyxLQUFLLEVBQUUsV0FBbUIsRUFBRSxRQUF1QixFQUF3QixFQUFFO0lBQzdHLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxJQUFJLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUN6QixNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3hELElBQUksaUJBQWlCLEtBQUssU0FBUyxFQUFFO1lBQ25DLE9BQU8sTUFBTSxXQUFXLENBQUMsaUJBQWlCLENBQUM7aUJBQ3hDLElBQUksQ0FBQyxDQUFDLGFBQWtCLEVBQUUsRUFBRTtnQkFDM0IsSUFBSSxJQUFJLENBQUM7Z0JBQ1QsSUFBSTtvQkFDRixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztpQkFDbEM7Z0JBQUMsV0FBTTtvQkFDTixNQUFNLEtBQUssQ0FBQyxXQUFXLFdBQVcsNENBQTRDLENBQUMsQ0FBQztpQkFDakY7Z0JBRUQsTUFBTSxFQUNKLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLFdBQVcsRUFBRSxXQUFXLEVBQ3hCLGVBQWUsRUFBRSxlQUFlLEVBQ2hDLFlBQVksRUFBRSxZQUFZLEVBQzFCLFVBQVUsRUFBRSxVQUFVLEdBQ3ZCLEdBQUcsSUFBSSxDQUFDO2dCQUVULElBQUksT0FBTyxLQUFLLENBQUMsRUFBRTtvQkFDakIsTUFBTSxLQUFLLENBQUMsV0FBVyxXQUFXLCtDQUErQyxDQUFDLENBQUM7aUJBQ3BGO2dCQUVELElBQUksV0FBVyxLQUFLLFNBQVMsSUFBSSxlQUFlLEtBQUssU0FBUyxFQUFFO29CQUM5RCxNQUFNLEtBQUssQ0FBQyxXQUFXLFdBQVcsbURBQW1ELENBQUMsQ0FBQztpQkFDeEY7Z0JBRUQsSUFBSSxjQUFjLENBQUM7Z0JBRW5CLElBQUksVUFBVSxFQUFFO29CQUNkLE1BQU0sV0FBVyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7b0JBQy9CLE1BQU0sVUFBVSxHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO29CQUN4QyxJQUFJLFVBQVUsR0FBRyxXQUFXLEVBQUU7d0JBQzVCLE1BQU0sS0FBSyxDQUFDLFdBQVcsV0FBVyxtREFBbUQsQ0FBQyxDQUFDO3FCQUN4RjtvQkFDRCxjQUFjLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztpQkFDcEU7Z0JBRUQsT0FBTztvQkFDTCxXQUFXO29CQUNYLGVBQWU7b0JBQ2YsWUFBWTtvQkFDWixjQUFjO2lCQUNmLENBQUM7WUFDSixDQUFDLENBQUM7aUJBQ0QsS0FBSyxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUU7Z0JBQ3RCLE1BQU0sSUFBSSw0Q0FBd0IsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDcEQsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0wsTUFBTSxJQUFJLDRDQUF3QixDQUFDLFdBQVcsV0FBVyxzQ0FBc0MsQ0FBQyxDQUFDO1NBQ2xHO0tBQ0Y7U0FBTTtRQUNMLHFFQUFxRTtRQUNyRSx5RUFBeUU7UUFDekUsNEVBQTRFO1FBQzVFLG1GQUFtRjtRQUNuRixNQUFNLElBQUksNENBQXdCLENBQUMsV0FBVyxXQUFXLGlEQUFpRCxDQUFDLENBQUM7S0FDN0c7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRyxDQUFDLE9BQWUsRUFBRSxFQUFFLENBQ3RDLElBQUksT0FBTyxDQUFDLFVBQVUsT0FBTyxFQUFFLE1BQU07SUFDbkMsb0JBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDOUIsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDZCxPQUFPO1NBQ1I7UUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE1hc3RlclByb2ZpbGVOYW1lLCBwYXJzZUtub3duRmlsZXMsIFNvdXJjZVByb2ZpbGVJbml0IH0gZnJvbSBcIkBhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItaW5pXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IFBhcnNlZEluaURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvc2hhcmVkLWluaS1maWxlLWxvYWRlclwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbFByb3ZpZGVyLCBDcmVkZW50aWFscyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgZXhlYyB9IGZyb20gXCJjaGlsZF9wcm9jZXNzXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGcm9tUHJvY2Vzc0luaXQgZXh0ZW5kcyBTb3VyY2VQcm9maWxlSW5pdCB7fVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjcmVkZW50aWFsIHByb3ZpZGVyIHRoYXQgd2lsbCByZWFkIGZyb20gYSBjcmVkZW50aWFsX3Byb2Nlc3Mgc3BlY2lmaWVkXG4gKiBpbiBpbmkgZmlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tUHJvY2VzcyA9XG4gIChpbml0OiBGcm9tUHJvY2Vzc0luaXQgPSB7fSk6IENyZWRlbnRpYWxQcm92aWRlciA9PlxuICBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcHJvZmlsZXMgPSBhd2FpdCBwYXJzZUtub3duRmlsZXMoaW5pdCk7XG4gICAgcmV0dXJuIHJlc29sdmVQcm9jZXNzQ3JlZGVudGlhbHMoZ2V0TWFzdGVyUHJvZmlsZU5hbWUoaW5pdCksIHByb2ZpbGVzKTtcbiAgfTtcblxuY29uc3QgcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyA9IGFzeW5jIChwcm9maWxlTmFtZTogc3RyaW5nLCBwcm9maWxlczogUGFyc2VkSW5pRGF0YSk6IFByb21pc2U8Q3JlZGVudGlhbHM+ID0+IHtcbiAgY29uc3QgcHJvZmlsZSA9IHByb2ZpbGVzW3Byb2ZpbGVOYW1lXTtcblxuICBpZiAocHJvZmlsZXNbcHJvZmlsZU5hbWVdKSB7XG4gICAgY29uc3QgY3JlZGVudGlhbFByb2Nlc3MgPSBwcm9maWxlW1wiY3JlZGVudGlhbF9wcm9jZXNzXCJdO1xuICAgIGlmIChjcmVkZW50aWFsUHJvY2VzcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gYXdhaXQgZXhlY1Byb21pc2UoY3JlZGVudGlhbFByb2Nlc3MpXG4gICAgICAgIC50aGVuKChwcm9jZXNzUmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgICBsZXQgZGF0YTtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UocHJvY2Vzc1Jlc3VsdCk7XG4gICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgaW52YWxpZCBKU09OLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIFZlcnNpb246IHZlcnNpb24sXG4gICAgICAgICAgICBBY2Nlc3NLZXlJZDogYWNjZXNzS2V5SWQsXG4gICAgICAgICAgICBTZWNyZXRBY2Nlc3NLZXk6IHNlY3JldEFjY2Vzc0tleSxcbiAgICAgICAgICAgIFNlc3Npb25Ub2tlbjogc2Vzc2lvblRva2VuLFxuICAgICAgICAgICAgRXhwaXJhdGlvbjogZXhwaXJhdGlvbixcbiAgICAgICAgICB9ID0gZGF0YTtcblxuICAgICAgICAgIGlmICh2ZXJzaW9uICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgZGlkIG5vdCByZXR1cm4gVmVyc2lvbiAxLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChhY2Nlc3NLZXlJZCA9PT0gdW5kZWZpbmVkIHx8IHNlY3JldEFjY2Vzc0tleSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgaW52YWxpZCBjcmVkZW50aWFscy5gKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsZXQgZXhwaXJhdGlvblVuaXg7XG5cbiAgICAgICAgICBpZiAoZXhwaXJhdGlvbikge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IG5ldyBEYXRlKGV4cGlyYXRpb24pO1xuICAgICAgICAgICAgaWYgKGV4cGlyZVRpbWUgPCBjdXJyZW50VGltZSkge1xuICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjcmVkZW50aWFsX3Byb2Nlc3MgcmV0dXJuZWQgZXhwaXJlZCBjcmVkZW50aWFscy5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGV4cGlyYXRpb25Vbml4ID0gTWF0aC5mbG9vcihuZXcgRGF0ZShleHBpcmF0aW9uKS52YWx1ZU9mKCkgLyAxMDAwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWNjZXNzS2V5SWQsXG4gICAgICAgICAgICBzZWNyZXRBY2Nlc3NLZXksXG4gICAgICAgICAgICBzZXNzaW9uVG9rZW4sXG4gICAgICAgICAgICBleHBpcmF0aW9uVW5peCxcbiAgICAgICAgICB9O1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yOiBFcnJvcikgPT4ge1xuICAgICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGRpZCBub3QgY29udGFpbiBjcmVkZW50aWFsX3Byb2Nlc3MuYCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIElmIHRoZSBwcm9maWxlIGNhbm5vdCBiZSBwYXJzZWQgb3IgZG9lcyBub3QgY29udGFpbiB0aGUgZGVmYXVsdCBvclxuICAgIC8vIHNwZWNpZmllZCBwcm9maWxlIHRocm93IGFuIGVycm9yLiBUaGlzIHNob3VsZCBiZSBjb25zaWRlcmVkIGEgdGVybWluYWxcbiAgICAvLyByZXNvbHV0aW9uIGVycm9yIGlmIGEgcHJvZmlsZSBoYXMgYmVlbiBzcGVjaWZpZWQgYnkgdGhlIHVzZXIgKHdoZXRoZXIgdmlhXG4gICAgLy8gYSBwYXJhbWV0ZXIsIGFuZW52aXJvbm1lbnQgdmFyaWFibGUsIG9yIGFub3RoZXIgcHJvZmlsZSdzIGBzb3VyY2VfcHJvZmlsZWAga2V5KS5cbiAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNvdWxkIG5vdCBiZSBmb3VuZCBpbiBzaGFyZWQgY3JlZGVudGlhbHMgZmlsZS5gKTtcbiAgfVxufTtcblxuY29uc3QgZXhlY1Byb21pc2UgPSAoY29tbWFuZDogc3RyaW5nKSA9PlxuICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgZXhlYyhjb21tYW5kLCAoZXJyb3IsIHN0ZG91dCkgPT4ge1xuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVzb2x2ZShzdGRvdXQudHJpbSgpKTtcbiAgICB9KTtcbiAgfSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSSO = exports.EXPIRE_WINDOW_MS = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst crypto_1 = require(\"crypto\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\n/**\n * The time window (15 mins) that SDK will treat the SSO token expires in before the defined expiration date in token.\n * This is needed because server side may have invalidated the token before the defined expiration date.\n *\n * @internal\n */\nexports.EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\n/**\n * Creates a credential provider that will read from a credential_process specified\n * in ini files.\n */\nconst fromSSO = (init = {}) => async () => {\n    const profiles = await credential_provider_ini_1.parseKnownFiles(init);\n    return resolveSSOCredentials(credential_provider_ini_1.getMasterProfileName(init), profiles, init);\n};\nexports.fromSSO = fromSSO;\nconst resolveSSOCredentials = async (profileName, profiles, options) => {\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n    const { sso_start_url: startUrl, sso_account_id: accountId, sso_region: region, sso_role_name: roleName } = profile;\n    if (!startUrl && !accountId && !region && !roleName) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n    }\n    if (!startUrl || !accountId || !region || !roleName) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} does not have valid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ` +\n            `\"sso_role_name\", \"sso_start_url\". Reference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const hasher = crypto_1.createHash(\"sha1\");\n    const cacheName = hasher.update(startUrl).digest(\"hex\");\n    const tokenFile = path_1.join(shared_ini_file_loader_1.getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n    let token;\n    try {\n        token = JSON.parse(fs_1.readFileSync(tokenFile, { encoding: \"utf-8\" }));\n        if (new Date(token.expiresAt).getTime() - Date.now() <= exports.EXPIRE_WINDOW_MS) {\n            throw new Error(\"SSO token is expired.\");\n        }\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired or is otherwise invalid. To refresh this SSO session ` +\n            `run aws sso login with the corresponding profile.`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = options.ssoClient || new client_sso_1.SSOClient({ region });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId,\n            roleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\n/**\n * Represents OIDC credentials from a file on disk.\n */\nconst fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = (init) => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken_1.fromWebToken({\n        ...init,\n        webIdentityToken: fs_1.readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVRva2VuRmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tVG9rZW5GaWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUFzRTtBQUV0RSwyQkFBa0M7QUFFbEMsaURBQWdFO0FBRWhFLE1BQU0sY0FBYyxHQUFHLDZCQUE2QixDQUFDO0FBQ3JELE1BQU0sWUFBWSxHQUFHLGNBQWMsQ0FBQztBQUNwQyxNQUFNLHFCQUFxQixHQUFHLHVCQUF1QixDQUFDO0FBU3REOztHQUVHO0FBQ0ksTUFBTSxhQUFhLEdBQ3hCLENBQUMsT0FBMEIsRUFBRSxFQUFzQixFQUFFLENBQ3JELEtBQUssSUFBSSxFQUFFO0lBQ1QsT0FBTyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQyxDQUFDLENBQUM7QUFKUyxRQUFBLGFBQWEsaUJBSXRCO0FBRUosTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLElBQXdCLEVBQXdCLEVBQUU7O0lBQzFFLE1BQU0sb0JBQW9CLEdBQUcsTUFBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsb0JBQW9CLG1DQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdkYsTUFBTSxPQUFPLEdBQUcsTUFBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsT0FBTyxtQ0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNELE1BQU0sZUFBZSxHQUFHLE1BQUEsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLGVBQWUsbUNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBRXBGLElBQUksQ0FBQyxvQkFBb0IsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNyQyxNQUFNLElBQUksNENBQXdCLENBQUMsMENBQTBDLENBQUMsQ0FBQztLQUNoRjtJQUVELE9BQU8sMkJBQVksQ0FBQztRQUNsQixHQUFHLElBQUk7UUFDUCxnQkFBZ0IsRUFBRSxpQkFBWSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxDQUFDO1FBQzNFLE9BQU87UUFDUCxlQUFlO0tBQ2hCLENBQUMsRUFBRSxDQUFDO0FBQ1AsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIsIENyZWRlbnRpYWxzIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyByZWFkRmlsZVN5bmMgfSBmcm9tIFwiZnNcIjtcblxuaW1wb3J0IHsgZnJvbVdlYlRva2VuLCBGcm9tV2ViVG9rZW5Jbml0IH0gZnJvbSBcIi4vZnJvbVdlYlRva2VuXCI7XG5cbmNvbnN0IEVOVl9UT0tFTl9GSUxFID0gXCJBV1NfV0VCX0lERU5USVRZX1RPS0VOX0ZJTEVcIjtcbmNvbnN0IEVOVl9ST0xFX0FSTiA9IFwiQVdTX1JPTEVfQVJOXCI7XG5jb25zdCBFTlZfUk9MRV9TRVNTSU9OX05BTUUgPSBcIkFXU19ST0xFX1NFU1NJT05fTkFNRVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZyb21Ub2tlbkZpbGVJbml0IGV4dGVuZHMgUGFydGlhbDxPbWl0PEZyb21XZWJUb2tlbkluaXQsIFwid2ViSWRlbnRpdHlUb2tlblwiPj4ge1xuICAvKipcbiAgICogRmlsZSBsb2NhdGlvbiBvZiB3aGVyZSB0aGUgYE9JRENgIHRva2VuIGlzIHN0b3JlZC5cbiAgICovXG4gIHdlYklkZW50aXR5VG9rZW5GaWxlPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgT0lEQyBjcmVkZW50aWFscyBmcm9tIGEgZmlsZSBvbiBkaXNrLlxuICovXG5leHBvcnQgY29uc3QgZnJvbVRva2VuRmlsZSA9XG4gIChpbml0OiBGcm9tVG9rZW5GaWxlSW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICByZXR1cm4gcmVzb2x2ZVRva2VuRmlsZShpbml0KTtcbiAgfTtcblxuY29uc3QgcmVzb2x2ZVRva2VuRmlsZSA9IChpbml0PzogRnJvbVRva2VuRmlsZUluaXQpOiBQcm9taXNlPENyZWRlbnRpYWxzPiA9PiB7XG4gIGNvbnN0IHdlYklkZW50aXR5VG9rZW5GaWxlID0gaW5pdD8ud2ViSWRlbnRpdHlUb2tlbkZpbGUgPz8gcHJvY2Vzcy5lbnZbRU5WX1RPS0VOX0ZJTEVdO1xuICBjb25zdCByb2xlQXJuID0gaW5pdD8ucm9sZUFybiA/PyBwcm9jZXNzLmVudltFTlZfUk9MRV9BUk5dO1xuICBjb25zdCByb2xlU2Vzc2lvbk5hbWUgPSBpbml0Py5yb2xlU2Vzc2lvbk5hbWUgPz8gcHJvY2Vzcy5lbnZbRU5WX1JPTEVfU0VTU0lPTl9OQU1FXTtcblxuICBpZiAoIXdlYklkZW50aXR5VG9rZW5GaWxlIHx8ICFyb2xlQXJuKSB7XG4gICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcIldlYiBpZGVudGl0eSBjb25maWd1cmF0aW9uIG5vdCBzcGVjaWZpZWRcIik7XG4gIH1cblxuICByZXR1cm4gZnJvbVdlYlRva2VuKHtcbiAgICAuLi5pbml0LFxuICAgIHdlYklkZW50aXR5VG9rZW46IHJlYWRGaWxlU3luYyh3ZWJJZGVudGl0eVRva2VuRmlsZSwgeyBlbmNvZGluZzogXCJhc2NpaVwiIH0pLFxuICAgIHJvbGVBcm4sXG4gICAgcm9sZVNlc3Npb25OYW1lLFxuICB9KSgpO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromTokenFile\"), exports);\ntslib_1.__exportStar(require(\"./fromWebToken\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQWdDO0FBQ2hDLHlEQUErQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Zyb21Ub2tlbkZpbGVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21XZWJUb2tlblwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? crypto_1.createHmac(algorithmIdentifier, castSourceData(secret)) : crypto_1.createHash(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return util_buffer_from_1.fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return util_buffer_from_1.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return util_buffer_from_1.fromArrayBuffer(toCast);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsZ0VBQXdGO0FBQ3hGLG1DQUFnQztBQUNoQyxtQ0FBd0U7QUFFeEUsTUFBYSxJQUFJO0lBR2YsWUFBWSxtQkFBMkIsRUFBRSxNQUFtQjtRQUMxRCxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsbUJBQVUsQ0FBQyxtQkFBbUIsRUFBRSxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsbUJBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2pILENBQUM7SUFFRCxNQUFNLENBQUMsTUFBa0IsRUFBRSxRQUFzQztRQUMvRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELE1BQU07UUFDSixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Q0FDRjtBQWRELG9CQWNDO0FBRUQsU0FBUyxjQUFjLENBQUMsTUFBa0IsRUFBRSxRQUF5QjtJQUNuRSxJQUFJLGVBQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDM0IsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUVELElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLE9BQU8sNkJBQVUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDckM7SUFFRCxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDOUIsT0FBTyxrQ0FBZSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDN0U7SUFFRCxPQUFPLGtDQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhhc2ggYXMgSUhhc2gsIFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZywgU3RyaW5nRW5jb2RpbmcgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbVwiO1xuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgY3JlYXRlSGFzaCwgY3JlYXRlSG1hYywgSGFzaCBhcyBOb2RlSGFzaCwgSG1hYyB9IGZyb20gXCJjcnlwdG9cIjtcblxuZXhwb3J0IGNsYXNzIEhhc2ggaW1wbGVtZW50cyBJSGFzaCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgaGFzaDogTm9kZUhhc2ggfCBIbWFjO1xuXG4gIGNvbnN0cnVjdG9yKGFsZ29yaXRobUlkZW50aWZpZXI6IHN0cmluZywgc2VjcmV0PzogU291cmNlRGF0YSkge1xuICAgIHRoaXMuaGFzaCA9IHNlY3JldCA/IGNyZWF0ZUhtYWMoYWxnb3JpdGhtSWRlbnRpZmllciwgY2FzdFNvdXJjZURhdGEoc2VjcmV0KSkgOiBjcmVhdGVIYXNoKGFsZ29yaXRobUlkZW50aWZpZXIpO1xuICB9XG5cbiAgdXBkYXRlKHRvSGFzaDogU291cmNlRGF0YSwgZW5jb2Rpbmc/OiBcInV0ZjhcIiB8IFwiYXNjaWlcIiB8IFwibGF0aW4xXCIpOiB2b2lkIHtcbiAgICB0aGlzLmhhc2gudXBkYXRlKGNhc3RTb3VyY2VEYXRhKHRvSGFzaCwgZW5jb2RpbmcpKTtcbiAgfVxuXG4gIGRpZ2VzdCgpOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaGFzaC5kaWdlc3QoKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2FzdFNvdXJjZURhdGEodG9DYXN0OiBTb3VyY2VEYXRhLCBlbmNvZGluZz86IFN0cmluZ0VuY29kaW5nKTogQnVmZmVyIHtcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih0b0Nhc3QpKSB7XG4gICAgcmV0dXJuIHRvQ2FzdDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdG9DYXN0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodG9DYXN0LCBlbmNvZGluZyk7XG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KHRvQ2FzdCkpIHtcbiAgICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHRvQ2FzdC5idWZmZXIsIHRvQ2FzdC5ieXRlT2Zmc2V0LCB0b0Nhc3QuYnl0ZUxlbmd0aCk7XG4gIH1cblxuICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKHRvQ2FzdCk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFRLEVBQXNCLEVBQUUsQ0FDNUQsQ0FBQyxPQUFPLFdBQVcsS0FBSyxVQUFVLElBQUksR0FBRyxZQUFZLFdBQVcsQ0FBQztJQUNqRSxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssc0JBQXNCLENBQUM7QUFGcEQsUUFBQSxhQUFhLGlCQUV1QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0FycmF5QnVmZmVyID0gKGFyZzogYW55KTogYXJnIGlzIEFycmF5QnVmZmVyID0+XG4gICh0eXBlb2YgQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIiAmJiBhcmcgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgfHxcbiAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZykgPT09IFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                const length = bodyLengthChecker(body);\n                if (length !== undefined) {\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBWXJELE1BQU0scUJBQXFCLEdBQUcsZ0JBQWdCLENBQUM7QUFFL0MsU0FBZ0IsdUJBQXVCLENBQUMsaUJBQXVDO0lBQzdFLE9BQU8sQ0FBZ0MsSUFBK0IsRUFBNkIsRUFBRSxDQUNuRyxLQUFLLEVBQUUsSUFBZ0MsRUFBdUMsRUFBRTtRQUM5RSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzdCLElBQUksMkJBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDbkMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUM7WUFDbEMsSUFDRSxJQUFJO2dCQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO3FCQUNqQixHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztxQkFDL0IsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQ3hDO2dCQUNBLE1BQU0sTUFBTSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN2QyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7b0JBQ3hCLE9BQU8sQ0FBQyxPQUFPLEdBQUc7d0JBQ2hCLEdBQUcsT0FBTyxDQUFDLE9BQU87d0JBQ2xCLENBQUMscUJBQXFCLENBQUMsRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDO3FCQUN4QyxDQUFDO2lCQUNIO2FBQ0Y7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO1lBQ1YsR0FBRyxJQUFJO1lBQ1AsT0FBTztTQUNSLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNOLENBQUM7QUEzQkQsMERBMkJDO0FBRVksUUFBQSw4QkFBOEIsR0FBd0I7SUFDakUsSUFBSSxFQUFFLE9BQU87SUFDYixJQUFJLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxnQkFBZ0IsQ0FBQztJQUM5QyxJQUFJLEVBQUUseUJBQXlCO0lBQy9CLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVLLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxPQUFvRCxFQUF1QixFQUFFLENBQUMsQ0FBQztJQUNwSCxZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM1QixXQUFXLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLHNDQUE4QixDQUFDLENBQUM7SUFDdEcsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEsc0JBQXNCLDBCQUloQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEJvZHlMZW5ndGhDYWxjdWxhdG9yLFxuICBCdWlsZEhhbmRsZXIsXG4gIEJ1aWxkSGFuZGxlckFyZ3VtZW50cyxcbiAgQnVpbGRIYW5kbGVyT3B0aW9ucyxcbiAgQnVpbGRIYW5kbGVyT3V0cHV0LFxuICBCdWlsZE1pZGRsZXdhcmUsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBQbHVnZ2FibGUsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5jb25zdCBDT05URU5UX0xFTkdUSF9IRUFERVIgPSBcImNvbnRlbnQtbGVuZ3RoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50TGVuZ3RoTWlkZGxld2FyZShib2R5TGVuZ3RoQ2hlY2tlcjogQm9keUxlbmd0aENhbGN1bGF0b3IpOiBCdWlsZE1pZGRsZXdhcmU8YW55LCBhbnk+IHtcbiAgcmV0dXJuIDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcj4obmV4dDogQnVpbGRIYW5kbGVyPGFueSwgT3V0cHV0Pik6IEJ1aWxkSGFuZGxlcjxhbnksIE91dHB1dD4gPT5cbiAgICBhc3luYyAoYXJnczogQnVpbGRIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEJ1aWxkSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gICAgICBjb25zdCByZXF1ZXN0ID0gYXJncy5yZXF1ZXN0O1xuICAgICAgaWYgKEh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UocmVxdWVzdCkpIHtcbiAgICAgICAgY29uc3QgeyBib2R5LCBoZWFkZXJzIH0gPSByZXF1ZXN0O1xuICAgICAgICBpZiAoXG4gICAgICAgICAgYm9keSAmJlxuICAgICAgICAgIE9iamVjdC5rZXlzKGhlYWRlcnMpXG4gICAgICAgICAgICAubWFwKChzdHIpID0+IHN0ci50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgLmluZGV4T2YoQ09OVEVOVF9MRU5HVEhfSEVBREVSKSA9PT0gLTFcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uc3QgbGVuZ3RoID0gYm9keUxlbmd0aENoZWNrZXIoYm9keSk7XG4gICAgICAgICAgaWYgKGxlbmd0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSB7XG4gICAgICAgICAgICAgIC4uLnJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgICAgICAgW0NPTlRFTlRfTEVOR1RIX0hFQURFUl06IFN0cmluZyhsZW5ndGgpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHQoe1xuICAgICAgICAuLi5hcmdzLFxuICAgICAgICByZXF1ZXN0LFxuICAgICAgfSk7XG4gICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlT3B0aW9uczogQnVpbGRIYW5kbGVyT3B0aW9ucyA9IHtcbiAgc3RlcDogXCJidWlsZFwiLFxuICB0YWdzOiBbXCJTRVRfQ09OVEVOVF9MRU5HVEhcIiwgXCJDT05URU5UX0xFTkdUSFwiXSxcbiAgbmFtZTogXCJjb250ZW50TGVuZ3RoTWlkZGxld2FyZVwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDb250ZW50TGVuZ3RoUGx1Z2luID0gKG9wdGlvbnM6IHsgYm9keUxlbmd0aENoZWNrZXI6IEJvZHlMZW5ndGhDYWxjdWxhdG9yIH0pOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkKGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlKG9wdGlvbnMuYm9keUxlbmd0aENoZWNrZXIpLCBjb250ZW50TGVuZ3RoTWlkZGxld2FyZU9wdGlvbnMpO1xuICB9LFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    //For H2 request, remove 'host' header and use ':authority' header instead\n    //reference: https://nodejs.org/dist/latest-v13.x/docs/api/errors.html#ERR_HTTP2_INVALID_CONNECTION_HEADERS\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n        //non-H2 request and 'host' header is not set, set the 'host' header to request's hostname.\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.hostHeaderMiddleware(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBYXJELFNBQWdCLHVCQUF1QixDQUNyQyxLQUFxRDtJQUVyRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFKRCwwREFJQztBQUVNLE1BQU0sb0JBQW9CLEdBQy9CLENBQThDLE9BQWlDLEVBQWtDLEVBQUUsQ0FDbkgsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUNULEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUNiLElBQUksQ0FBQywyQkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztJQUN6QixNQUFNLEVBQUUsZUFBZSxHQUFHLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztJQUN2RSwwRUFBMEU7SUFDMUUsMkdBQTJHO0lBQzNHLElBQUksZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1FBQ3hFLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQixPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQywyRkFBMkY7S0FDNUY7U0FBTSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNuQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7S0FDNUM7SUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwQixDQUFDLENBQUM7QUFqQlMsUUFBQSxvQkFBb0Isd0JBaUI3QjtBQUVTLFFBQUEsMkJBQTJCLEdBQTJDO0lBQ2pGLElBQUksRUFBRSxzQkFBc0I7SUFDNUIsSUFBSSxFQUFFLE9BQU87SUFDYixRQUFRLEVBQUUsS0FBSztJQUNmLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUNkLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVLLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxPQUFpQyxFQUF1QixFQUFFLENBQUMsQ0FBQztJQUM5RixZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM1QixXQUFXLENBQUMsR0FBRyxDQUFDLDRCQUFvQixDQUFDLE9BQU8sQ0FBQyxFQUFFLG1DQUEyQixDQUFDLENBQUM7SUFDOUUsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEsbUJBQW1CLHVCQUk3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7IEFic29sdXRlTG9jYXRpb24sIEJ1aWxkSGFuZGxlck9wdGlvbnMsIEJ1aWxkTWlkZGxld2FyZSwgUGx1Z2dhYmxlLCBSZXF1ZXN0SGFuZGxlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhvc3RIZWFkZXJJbnB1dENvbmZpZyB7fVxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIHJlcXVlc3RIYW5kbGVyOiBSZXF1ZXN0SGFuZGxlcjxhbnksIGFueT47XG59XG5leHBvcnQgaW50ZXJmYWNlIEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyB7XG4gIC8qKlxuICAgKiBUaGUgSFRUUCBoYW5kbGVyIHRvIHVzZS4gRmV0Y2ggaW4gYnJvd3NlciBhbmQgSHR0cHMgaW4gTm9kZWpzLlxuICAgKi9cbiAgcmVxdWVzdEhhbmRsZXI6IFJlcXVlc3RIYW5kbGVyPGFueSwgYW55Pjtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlSG9zdEhlYWRlckNvbmZpZzxUPihcbiAgaW5wdXQ6IFQgJiBQcmV2aW91c2x5UmVzb2x2ZWQgJiBIb3N0SGVhZGVySW5wdXRDb25maWdcbik6IFQgJiBIb3N0SGVhZGVyUmVzb2x2ZWRDb25maWcge1xuICByZXR1cm4gaW5wdXQ7XG59XG5cbmV4cG9ydCBjb25zdCBob3N0SGVhZGVyTWlkZGxld2FyZSA9XG4gIDxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3V0cHV0IGV4dGVuZHMgb2JqZWN0PihvcHRpb25zOiBIb3N0SGVhZGVyUmVzb2x2ZWRDb25maWcpOiBCdWlsZE1pZGRsZXdhcmU8SW5wdXQsIE91dHB1dD4gPT5cbiAgKG5leHQpID0+XG4gIGFzeW5jIChhcmdzKSA9PiB7XG4gICAgaWYgKCFIdHRwUmVxdWVzdC5pc0luc3RhbmNlKGFyZ3MucmVxdWVzdCkpIHJldHVybiBuZXh0KGFyZ3MpO1xuICAgIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgICBjb25zdCB7IGhhbmRsZXJQcm90b2NvbCA9IFwiXCIgfSA9IG9wdGlvbnMucmVxdWVzdEhhbmRsZXIubWV0YWRhdGEgfHwge307XG4gICAgLy9Gb3IgSDIgcmVxdWVzdCwgcmVtb3ZlICdob3N0JyBoZWFkZXIgYW5kIHVzZSAnOmF1dGhvcml0eScgaGVhZGVyIGluc3RlYWRcbiAgICAvL3JlZmVyZW5jZTogaHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvbGF0ZXN0LXYxMy54L2RvY3MvYXBpL2Vycm9ycy5odG1sI0VSUl9IVFRQMl9JTlZBTElEX0NPTk5FQ1RJT05fSEVBREVSU1xuICAgIGlmIChoYW5kbGVyUHJvdG9jb2wuaW5kZXhPZihcImgyXCIpID49IDAgJiYgIXJlcXVlc3QuaGVhZGVyc1tcIjphdXRob3JpdHlcIl0pIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0LmhlYWRlcnNbXCJob3N0XCJdO1xuICAgICAgcmVxdWVzdC5oZWFkZXJzW1wiOmF1dGhvcml0eVwiXSA9IFwiXCI7XG4gICAgICAvL25vbi1IMiByZXF1ZXN0IGFuZCAnaG9zdCcgaGVhZGVyIGlzIG5vdCBzZXQsIHNldCB0aGUgJ2hvc3QnIGhlYWRlciB0byByZXF1ZXN0J3MgaG9zdG5hbWUuXG4gICAgfSBlbHNlIGlmICghcmVxdWVzdC5oZWFkZXJzW1wiaG9zdFwiXSkge1xuICAgICAgcmVxdWVzdC5oZWFkZXJzW1wiaG9zdFwiXSA9IHJlcXVlc3QuaG9zdG5hbWU7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KGFyZ3MpO1xuICB9O1xuXG5leHBvcnQgY29uc3QgaG9zdEhlYWRlck1pZGRsZXdhcmVPcHRpb25zOiBCdWlsZEhhbmRsZXJPcHRpb25zICYgQWJzb2x1dGVMb2NhdGlvbiA9IHtcbiAgbmFtZTogXCJob3N0SGVhZGVyTWlkZGxld2FyZVwiLFxuICBzdGVwOiBcImJ1aWxkXCIsXG4gIHByaW9yaXR5OiBcImxvd1wiLFxuICB0YWdzOiBbXCJIT1NUXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRIb3N0SGVhZGVyUGx1Z2luID0gKG9wdGlvbnM6IEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoaG9zdEhlYWRlck1pZGRsZXdhcmUob3B0aW9ucyksIGhvc3RIZWFkZXJNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loggerMiddleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkRBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vbG9nZ2VyTWlkZGxld2FyZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.loggerMiddleware(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2dnZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVlPLE1BQU0sZ0JBQWdCLEdBQzNCLEdBQUcsRUFBRSxDQUNMLENBQ0UsSUFBb0MsRUFDcEMsT0FBZ0MsRUFDQSxFQUFFLENBQ3BDLEtBQUssRUFBRSxJQUFxQyxFQUE0QyxFQUFFO0lBQ3hGLE1BQU0sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sRUFBRSx3QkFBd0IsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUV2RyxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVsQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1gsT0FBTyxRQUFRLENBQUM7S0FDakI7SUFFRCxJQUFJLE9BQU8sTUFBTSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDckMsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLHFCQUFxQixFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ1YsVUFBVTtZQUNWLFdBQVc7WUFDWCxLQUFLLEVBQUUsdUJBQXVCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUMxQyxNQUFNLEVBQUUsd0JBQXdCLENBQUMscUJBQXFCLENBQUM7WUFDdkQsUUFBUSxFQUFFLFNBQVM7U0FDcEIsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUM7QUEzQlMsUUFBQSxnQkFBZ0Isb0JBMkJ6QjtBQUVTLFFBQUEsdUJBQXVCLEdBQWdEO0lBQ2xGLElBQUksRUFBRSxrQkFBa0I7SUFDeEIsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQ2hCLElBQUksRUFBRSxZQUFZO0lBQ2xCLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLDZEQUE2RDtBQUN0RCxNQUFNLGVBQWUsR0FBRyxDQUFDLE9BQVksRUFBdUIsRUFBRSxDQUFDLENBQUM7SUFDckUsWUFBWSxFQUFFLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDNUIsV0FBVyxDQUFDLEdBQUcsQ0FBQyx3QkFBZ0IsRUFBRSxFQUFFLCtCQUF1QixDQUFDLENBQUM7SUFDL0QsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEsZUFBZSxtQkFJekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVzcG9uc2UgfSBmcm9tIFwiQGF3cy1zZGsvcHJvdG9jb2wtaHR0cFwiO1xuaW1wb3J0IHtcbiAgQWJzb2x1dGVMb2NhdGlvbixcbiAgSGFuZGxlckV4ZWN1dGlvbkNvbnRleHQsXG4gIEluaXRpYWxpemVIYW5kbGVyLFxuICBJbml0aWFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgSW5pdGlhbGl6ZUhhbmRsZXJPcHRpb25zLFxuICBJbml0aWFsaXplSGFuZGxlck91dHB1dCxcbiAgTWV0YWRhdGFCZWFyZXIsXG4gIFBsdWdnYWJsZSxcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBsb2dnZXJNaWRkbGV3YXJlID1cbiAgKCkgPT5cbiAgPE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyID0gTWV0YWRhdGFCZWFyZXI+KFxuICAgIG5leHQ6IEluaXRpYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PixcbiAgICBjb250ZXh0OiBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dFxuICApOiBJbml0aWFsaXplSGFuZGxlcjxhbnksIE91dHB1dD4gPT5cbiAgYXN5bmMgKGFyZ3M6IEluaXRpYWxpemVIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEluaXRpYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgICBjb25zdCB7IGNsaWVudE5hbWUsIGNvbW1hbmROYW1lLCBpbnB1dEZpbHRlclNlbnNpdGl2ZUxvZywgbG9nZ2VyLCBvdXRwdXRGaWx0ZXJTZW5zaXRpdmVMb2cgfSA9IGNvbnRleHQ7XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQoYXJncyk7XG5cbiAgICBpZiAoIWxvZ2dlcikge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbG9nZ2VyLmluZm8gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgY29uc3QgeyAkbWV0YWRhdGEsIC4uLm91dHB1dFdpdGhvdXRNZXRhZGF0YSB9ID0gcmVzcG9uc2Uub3V0cHV0O1xuICAgICAgbG9nZ2VyLmluZm8oe1xuICAgICAgICBjbGllbnROYW1lLFxuICAgICAgICBjb21tYW5kTmFtZSxcbiAgICAgICAgaW5wdXQ6IGlucHV0RmlsdGVyU2Vuc2l0aXZlTG9nKGFyZ3MuaW5wdXQpLFxuICAgICAgICBvdXRwdXQ6IG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZyhvdXRwdXRXaXRob3V0TWV0YWRhdGEpLFxuICAgICAgICBtZXRhZGF0YTogJG1ldGFkYXRhLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9O1xuXG5leHBvcnQgY29uc3QgbG9nZ2VyTWlkZGxld2FyZU9wdGlvbnM6IEluaXRpYWxpemVIYW5kbGVyT3B0aW9ucyAmIEFic29sdXRlTG9jYXRpb24gPSB7XG4gIG5hbWU6IFwibG9nZ2VyTWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJMT0dHRVJcIl0sXG4gIHN0ZXA6IFwiaW5pdGlhbGl6ZVwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmV4cG9ydCBjb25zdCBnZXRMb2dnZXJQbHVnaW4gPSAob3B0aW9uczogYW55KTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZChsb2dnZXJNaWRkbGV3YXJlKCksIGxvZ2dlck1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRhcHRpdmVSZXRyeVN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FkYXB0aXZlUmV0cnlTdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBdUM7QUFDdkMsNkRBQTBEO0FBQzFELG1FQUE4RjtBQVU5RixNQUFhLHFCQUFzQixTQUFRLDZDQUFxQjtJQUc5RCxZQUFZLG1CQUFxQyxFQUFFLE9BQXNDO1FBQ3ZGLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxZQUFZLEVBQUUsR0FBRyxPQUFPLGFBQVAsT0FBTyxjQUFQLE9BQU8sR0FBSSxFQUFFLENBQUM7UUFDdkQsS0FBSyxDQUFDLG1CQUFtQixFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxhQUFYLFdBQVcsY0FBWCxXQUFXLEdBQUksSUFBSSx1Q0FBa0IsRUFBRSxDQUFDO1FBQzNELElBQUksQ0FBQyxJQUFJLEdBQUcsb0JBQVcsQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFLLENBQ1QsSUFBbUMsRUFDbkMsSUFBcUM7UUFFckMsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDN0IsYUFBYSxFQUFFLEtBQUssSUFBSSxFQUFFO2dCQUN4QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDekMsQ0FBQztZQUNELFlBQVksRUFBRSxDQUFDLFFBQWEsRUFBRSxFQUFFO2dCQUM5QixJQUFJLENBQUMsV0FBVyxDQUFDLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3JELENBQUM7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUF2QkQsc0RBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmluYWxpemVIYW5kbGVyLCBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHMsIE1ldGFkYXRhQmVhcmVyLCBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBSRVRSWV9NT0RFUyB9IGZyb20gXCIuL2NvbmZpZ1wiO1xuaW1wb3J0IHsgRGVmYXVsdFJhdGVMaW1pdGVyIH0gZnJvbSBcIi4vRGVmYXVsdFJhdGVMaW1pdGVyXCI7XG5pbXBvcnQgeyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3ksIFN0YW5kYXJkUmV0cnlTdHJhdGVneU9wdGlvbnMgfSBmcm9tIFwiLi9TdGFuZGFyZFJldHJ5U3RyYXRlZ3lcIjtcbmltcG9ydCB7IFJhdGVMaW1pdGVyIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuLyoqXG4gKiBTdHJhdGVneSBvcHRpb25zIHRvIGJlIHBhc3NlZCB0byBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3lcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3lPcHRpb25zIGV4dGVuZHMgU3RhbmRhcmRSZXRyeVN0cmF0ZWd5T3B0aW9ucyB7XG4gIHJhdGVMaW1pdGVyPzogUmF0ZUxpbWl0ZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3kgZXh0ZW5kcyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kge1xuICBwcml2YXRlIHJhdGVMaW1pdGVyOiBSYXRlTGltaXRlcjtcblxuICBjb25zdHJ1Y3RvcihtYXhBdHRlbXB0c1Byb3ZpZGVyOiBQcm92aWRlcjxudW1iZXI+LCBvcHRpb25zPzogQWRhcHRpdmVSZXRyeVN0cmF0ZWd5T3B0aW9ucykge1xuICAgIGNvbnN0IHsgcmF0ZUxpbWl0ZXIsIC4uLnN1cGVyT3B0aW9ucyB9ID0gb3B0aW9ucyA/PyB7fTtcbiAgICBzdXBlcihtYXhBdHRlbXB0c1Byb3ZpZGVyLCBzdXBlck9wdGlvbnMpO1xuICAgIHRoaXMucmF0ZUxpbWl0ZXIgPSByYXRlTGltaXRlciA/PyBuZXcgRGVmYXVsdFJhdGVMaW1pdGVyKCk7XG4gICAgdGhpcy5tb2RlID0gUkVUUllfTU9ERVMuQURBUFRJVkU7XG4gIH1cblxuICBhc3luYyByZXRyeTxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3VwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcj4oXG4gICAgbmV4dDogRmluYWxpemVIYW5kbGVyPElucHV0LCBPdXB1dD4sXG4gICAgYXJnczogRmluYWxpemVIYW5kbGVyQXJndW1lbnRzPElucHV0PlxuICApIHtcbiAgICByZXR1cm4gc3VwZXIucmV0cnkobmV4dCwgYXJncywge1xuICAgICAgYmVmb3JlUmVxdWVzdDogYXN5bmMgKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5yYXRlTGltaXRlci5nZXRTZW5kVG9rZW4oKTtcbiAgICAgIH0sXG4gICAgICBhZnRlclJlcXVlc3Q6IChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICAgIHRoaXMucmF0ZUxpbWl0ZXIudXBkYXRlQ2xpZW50U2VuZGluZ1JhdGUocmVzcG9uc2UpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        // Pre-set state variables\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        // Client side throttling is not enabled until we see a throttling error.\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (service_error_classification_1.isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        // Refill based on our current rate before we update to the new fill rate.\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        // When we scale down we can't have a current capacity that exceeds our maxCapacity.\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst uuid_1 = require(\"uuid\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : defaultRetryQuota_1.getDefaultRetryQuota(constants_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[constants_1.INVOCATION_ID_HEADER] = uuid_1.v4();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[constants_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delay = this.delayDecider(service_error_classification_1.isThrottlingError(err) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nexports.DEFAULT_MAX_ATTEMPTS = 3;\n/**\n * The default retry algorithm to use.\n */\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFdBR1g7QUFIRCxXQUFZLFdBQVc7SUFDckIsb0NBQXFCLENBQUE7SUFDckIsb0NBQXFCLENBQUE7QUFDdkIsQ0FBQyxFQUhXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBR3RCO0FBRUQ7OztHQUdHO0FBQ1UsUUFBQSxvQkFBb0IsR0FBRyxDQUFDLENBQUM7QUFFdEM7O0dBRUc7QUFDVSxRQUFBLGtCQUFrQixHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBSRVRSWV9NT0RFUyB7XG4gIFNUQU5EQVJEID0gXCJzdGFuZGFyZFwiLFxuICBBREFQVElWRSA9IFwiYWRhcHRpdmVcIixcbn1cblxuLyoqXG4gKiBUaGUgZGVmYXVsdCB2YWx1ZSBmb3IgaG93IG1hbnkgSFRUUCByZXF1ZXN0cyBhbiBTREsgc2hvdWxkIG1ha2UgZm9yIGFcbiAqIHNpbmdsZSBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gYmVmb3JlIGdpdmluZyB1cFxuICovXG5leHBvcnQgY29uc3QgREVGQVVMVF9NQVhfQVRURU1QVFMgPSAzO1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IHJldHJ5IGFsZ29yaXRobSB0byB1c2UuXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFVFJZX01PREUgPSBSRVRSWV9NT0RFUy5TVEFOREFSRDtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst AdaptiveRetryStrategy_1 = require(\"./AdaptiveRetryStrategy\");\nconst config_1 = require(\"./config\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: config_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (input.retryStrategy) {\n                return input.retryStrategy;\n            }\n            const retryMode = input.retryMode || (await input.retryModeProvider());\n            if (retryMode === config_1.RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nconst normalizeMaxAttempts = (maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS) => {\n    if (typeof maxAttempts === \"number\") {\n        const promisified = Promise.resolve(maxAttempts);\n        return () => promisified;\n    }\n    return maxAttempts;\n};\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: config_1.DEFAULT_RETRY_MODE,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsbUVBQWdFO0FBQ2hFLHFDQUFpRjtBQUNqRixtRUFBZ0U7QUFFbkQsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUN0QyxRQUFBLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztBQUVyQyxRQUFBLCtCQUErQixHQUFrQztJQUM1RSwyQkFBMkIsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO1FBQ25DLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyx3QkFBZ0IsQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDN0IsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25DLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUM1QixNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3Qix3QkFBZ0IsMkJBQTJCLEtBQUssR0FBRyxDQUFDLENBQUM7U0FDOUY7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBQ0Qsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsMkJBQW1CLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsS0FBSztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQzdCLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsMkJBQW1CLDJCQUEyQixLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3JHO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUNELE9BQU8sRUFBRSw2QkFBb0I7Q0FDOUIsQ0FBQztBQW9DSyxNQUFNLGtCQUFrQixHQUFHLENBQUksS0FBZ0QsRUFBMkIsRUFBRTtJQUNqSCxNQUFNLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDNUQsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLFdBQVc7UUFDWCxhQUFhLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDeEIsSUFBSSxLQUFLLENBQUMsYUFBYSxFQUFFO2dCQUN2QixPQUFPLEtBQUssQ0FBQyxhQUFhLENBQUM7YUFDNUI7WUFDRCxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO1lBQ3ZFLElBQUksU0FBUyxLQUFLLG9CQUFXLENBQUMsUUFBUSxFQUFFO2dCQUN0QyxPQUFPLElBQUksNkNBQXFCLENBQUMsV0FBVyxDQUFDLENBQUM7YUFDL0M7WUFDRCxPQUFPLElBQUksNkNBQXFCLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEQsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDLENBQUM7QUFoQlcsUUFBQSxrQkFBa0Isc0JBZ0I3QjtBQUVGLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxjQUF5Qyw2QkFBb0IsRUFBb0IsRUFBRTtJQUMvRyxJQUFJLE9BQU8sV0FBVyxLQUFLLFFBQVEsRUFBRTtRQUNuQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2pELE9BQU8sR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDO0tBQzFCO0lBQ0QsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQyxDQUFDO0FBRVcsUUFBQSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDbEMsUUFBQSxpQkFBaUIsR0FBRyxZQUFZLENBQUM7QUFFakMsUUFBQSw4QkFBOEIsR0FBa0M7SUFDM0UsMkJBQTJCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxzQkFBYyxDQUFDO0lBQ3pELGtCQUFrQixFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMseUJBQWlCLENBQUM7SUFDM0QsT0FBTyxFQUFFLDJCQUFrQjtDQUM1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzIH0gZnJvbSBcIkBhd3Mtc2RrL25vZGUtY29uZmlnLXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciwgUmV0cnlTdHJhdGVneSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi9BZGFwdGl2ZVJldHJ5U3RyYXRlZ3lcIjtcbmltcG9ydCB7IERFRkFVTFRfTUFYX0FUVEVNUFRTLCBERUZBVUxUX1JFVFJZX01PREUsIFJFVFJZX01PREVTIH0gZnJvbSBcIi4vY29uZmlnXCI7XG5pbXBvcnQgeyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi9TdGFuZGFyZFJldHJ5U3RyYXRlZ3lcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9NQVhfQVRURU1QVFMgPSBcIkFXU19NQVhfQVRURU1QVFNcIjtcbmV4cG9ydCBjb25zdCBDT05GSUdfTUFYX0FUVEVNUFRTID0gXCJtYXhfYXR0ZW1wdHNcIjtcblxuZXhwb3J0IGNvbnN0IE5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlM6IExvYWRlZENvbmZpZ1NlbGVjdG9yczxudW1iZXI+ID0ge1xuICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IChlbnYpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IGVudltFTlZfTUFYX0FUVEVNUFRTXTtcbiAgICBpZiAoIXZhbHVlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IG1heEF0dGVtcHQgPSBwYXJzZUludCh2YWx1ZSk7XG4gICAgaWYgKE51bWJlci5pc05hTihtYXhBdHRlbXB0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFbnZpcm9ubWVudCB2YXJpYWJsZSAke0VOVl9NQVhfQVRURU1QVFN9IG1hc3QgYmUgYSBudW1iZXIsIGdvdCBcIiR7dmFsdWV9XCJgKTtcbiAgICB9XG4gICAgcmV0dXJuIG1heEF0dGVtcHQ7XG4gIH0sXG4gIGNvbmZpZ0ZpbGVTZWxlY3RvcjogKHByb2ZpbGUpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IHByb2ZpbGVbQ09ORklHX01BWF9BVFRFTVBUU107XG4gICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBjb25zdCBtYXhBdHRlbXB0ID0gcGFyc2VJbnQodmFsdWUpO1xuICAgIGlmIChOdW1iZXIuaXNOYU4obWF4QXR0ZW1wdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgU2hhcmVkIGNvbmZpZyBmaWxlIGVudHJ5ICR7Q09ORklHX01BWF9BVFRFTVBUU30gbWFzdCBiZSBhIG51bWJlciwgZ290IFwiJHt2YWx1ZX1cImApO1xuICAgIH1cbiAgICByZXR1cm4gbWF4QXR0ZW1wdDtcbiAgfSxcbiAgZGVmYXVsdDogREVGQVVMVF9NQVhfQVRURU1QVFMsXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIFJldHJ5SW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIHRpbWVzIHJlcXVlc3RzIHRoYXQgZW5jb3VudGVyIHJldHJ5YWJsZSBmYWlsdXJlcyBzaG91bGQgYmUgYXR0ZW1wdGVkLlxuICAgKi9cbiAgbWF4QXR0ZW1wdHM/OiBudW1iZXIgfCBQcm92aWRlcjxudW1iZXI+O1xuICAvKipcbiAgICogVGhlIHN0cmF0ZWd5IHRvIHJldHJ5IHRoZSByZXF1ZXN0LiBVc2luZyBidWlsdC1pbiBleHBvbmVudGlhbCBiYWNrb2ZmIHN0cmF0ZWd5IGJ5IGRlZmF1bHQuXG4gICAqL1xuICByZXRyeVN0cmF0ZWd5PzogUmV0cnlTdHJhdGVneTtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyB3aGljaCByZXRyeSBhbGdvcml0aG0gdG8gdXNlLlxuICAgKi9cbiAgcmV0cnlNb2RlPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyBwcm92aWRlciBmb3IgcmV0cnkgYWxnb3JpdGhtIHRvIHVzZS5cbiAgICogQGludGVybmFsXG4gICAqL1xuICByZXRyeU1vZGVQcm92aWRlcjogUHJvdmlkZXI8c3RyaW5nPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZXRyeVJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCBjb25maWcge0BsaW5rIFJldHJ5SW5wdXRDb25maWcubWF4QXR0ZW1wdHN9XG4gICAqL1xuICBtYXhBdHRlbXB0czogUHJvdmlkZXI8bnVtYmVyPjtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCBjb25maWcge0BsaW5rIFJldHJ5SW5wdXRDb25maWcucmV0cnlTdHJhdGVneX1cbiAgICovXG4gIHJldHJ5U3RyYXRlZ3k6IFByb3ZpZGVyPFJldHJ5U3RyYXRlZ3k+O1xufVxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZVJldHJ5Q29uZmlnID0gPFQ+KGlucHV0OiBUICYgUHJldmlvdXNseVJlc29sdmVkICYgUmV0cnlJbnB1dENvbmZpZyk6IFQgJiBSZXRyeVJlc29sdmVkQ29uZmlnID0+IHtcbiAgY29uc3QgbWF4QXR0ZW1wdHMgPSBub3JtYWxpemVNYXhBdHRlbXB0cyhpbnB1dC5tYXhBdHRlbXB0cyk7XG4gIHJldHVybiB7XG4gICAgLi4uaW5wdXQsXG4gICAgbWF4QXR0ZW1wdHMsXG4gICAgcmV0cnlTdHJhdGVneTogYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKGlucHV0LnJldHJ5U3RyYXRlZ3kpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0LnJldHJ5U3RyYXRlZ3k7XG4gICAgICB9XG4gICAgICBjb25zdCByZXRyeU1vZGUgPSBpbnB1dC5yZXRyeU1vZGUgfHwgKGF3YWl0IGlucHV0LnJldHJ5TW9kZVByb3ZpZGVyKCkpO1xuICAgICAgaWYgKHJldHJ5TW9kZSA9PT0gUkVUUllfTU9ERVMuQURBUFRJVkUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3kobWF4QXR0ZW1wdHMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kobWF4QXR0ZW1wdHMpO1xuICAgIH0sXG4gIH07XG59O1xuXG5jb25zdCBub3JtYWxpemVNYXhBdHRlbXB0cyA9IChtYXhBdHRlbXB0czogbnVtYmVyIHwgUHJvdmlkZXI8bnVtYmVyPiA9IERFRkFVTFRfTUFYX0FUVEVNUFRTKTogUHJvdmlkZXI8bnVtYmVyPiA9PiB7XG4gIGlmICh0eXBlb2YgbWF4QXR0ZW1wdHMgPT09IFwibnVtYmVyXCIpIHtcbiAgICBjb25zdCBwcm9taXNpZmllZCA9IFByb21pc2UucmVzb2x2ZShtYXhBdHRlbXB0cyk7XG4gICAgcmV0dXJuICgpID0+IHByb21pc2lmaWVkO1xuICB9XG4gIHJldHVybiBtYXhBdHRlbXB0cztcbn07XG5cbmV4cG9ydCBjb25zdCBFTlZfUkVUUllfTU9ERSA9IFwiQVdTX1JFVFJZX01PREVcIjtcbmV4cG9ydCBjb25zdCBDT05GSUdfUkVUUllfTU9ERSA9IFwicmV0cnlfbW9kZVwiO1xuXG5leHBvcnQgY29uc3QgTk9ERV9SRVRSWV9NT0RFX0NPTkZJR19PUFRJT05TOiBMb2FkZWRDb25maWdTZWxlY3RvcnM8c3RyaW5nPiA9IHtcbiAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiAoZW52KSA9PiBlbnZbRU5WX1JFVFJZX01PREVdLFxuICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBwcm9maWxlW0NPTkZJR19SRVRSWV9NT0RFXSxcbiAgZGVmYXVsdDogREVGQVVMVF9SRVRSWV9NT0RFLFxufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\n/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexports.INITIAL_RETRY_TOKENS = 500;\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexports.RETRY_COST = 5;\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexports.TIMEOUT_RETRY_COST = 10;\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexports.NO_RETRY_INCREMENT = 1;\n/**\n * Header name for SDK invocation ID\n */\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n/**\n * Header name for request retry information.\n */\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDVSxRQUFBLHdCQUF3QixHQUFHLEdBQUcsQ0FBQztBQUU1Qzs7O0dBR0c7QUFDVSxRQUFBLG1CQUFtQixHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFFN0M7OztHQUdHO0FBQ1UsUUFBQSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFL0M7O0dBRUc7QUFDVSxRQUFBLG9CQUFvQixHQUFHLEdBQUcsQ0FBQztBQUV4Qzs7R0FFRztBQUNVLFFBQUEsVUFBVSxHQUFHLENBQUMsQ0FBQztBQUU1Qjs7O0dBR0c7QUFDVSxRQUFBLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztBQUVyQzs7O0dBR0c7QUFDVSxRQUFBLGtCQUFrQixHQUFHLENBQUMsQ0FBQztBQUVwQzs7R0FFRztBQUNVLFFBQUEsb0JBQW9CLEdBQUcsdUJBQXVCLENBQUM7QUFFNUQ7O0dBRUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB1c2UgaW4gY2FsY3VsYXRpbmcgYSBzdWl0YWJsZSBjb29sLWRvd25cbiAqIHRpbWUgd2hlbiBhIHJldHJ5YWJsZSBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVUUllfREVMQVlfQkFTRSA9IDEwMDtcblxuLyoqXG4gKiBUaGUgbWF4aW11bSBhbW91bnQgb2YgdGltZSAoaW4gbWlsbGlzZWNvbmRzKSB0aGF0IHdpbGwgYmUgdXNlZCBhcyBhIGRlbGF5XG4gKiBiZXR3ZWVuIHJldHJ5IGF0dGVtcHRzLlxuICovXG5leHBvcnQgY29uc3QgTUFYSU1VTV9SRVRSWV9ERUxBWSA9IDIwICogMTAwMDtcblxuLyoqXG4gKiBUaGUgcmV0cnkgZGVsYXkgYmFzZSAoaW4gbWlsbGlzZWNvbmRzKSB0byB1c2Ugd2hlbiBhIHRocm90dGxpbmcgZXJyb3IgaXNcbiAqIGVuY291bnRlcmVkLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19SRVRSWV9ERUxBWV9CQVNFID0gNTAwO1xuXG4vKipcbiAqIEluaXRpYWwgbnVtYmVyIG9mIHJldHJ5IHRva2VucyBpbiBSZXRyeSBRdW90YVxuICovXG5leHBvcnQgY29uc3QgSU5JVElBTF9SRVRSWV9UT0tFTlMgPSA1MDA7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlLlxuICovXG5leHBvcnQgY29uc3QgUkVUUllfQ09TVCA9IDU7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiB3aGVuIGEgdGhyb3R0bGluZyBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IFRJTUVPVVRfUkVUUllfQ09TVCA9IDEwO1xuXG4vKipcbiAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW4gdG8gYmUgaW5jcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiBpZiBhbiBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gc3VjY2VlZHMgd2l0aG91dCByZXF1aXJpbmcgYSByZXRyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgY29uc3QgTk9fUkVUUllfSU5DUkVNRU5UID0gMTtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgU0RLIGludm9jYXRpb24gSURcbiAqL1xuZXhwb3J0IGNvbnN0IElOVk9DQVRJT05fSURfSEVBREVSID0gXCJhbXotc2RrLWludm9jYXRpb24taWRcIjtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgcmVxdWVzdCByZXRyeSBpbmZvcm1hdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFJFUVVFU1RfSEVBREVSID0gXCJhbXotc2RrLXJlcXVlc3RcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : constants_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : constants_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            // retryStrategy should stop retrying, and return last error\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdFJldHJ5UXVvdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVmYXVsdFJldHJ5UXVvdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsMkNBQWlGO0FBc0IxRSxNQUFNLG9CQUFvQixHQUFHLENBQUMsa0JBQTBCLEVBQUUsT0FBa0MsRUFBYyxFQUFFOztJQUNqSCxNQUFNLFlBQVksR0FBRyxrQkFBa0IsQ0FBQztJQUN4QyxNQUFNLGdCQUFnQixHQUFHLE1BQUEsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLGdCQUFnQixtQ0FBSSw4QkFBa0IsQ0FBQztJQUN6RSxNQUFNLFNBQVMsR0FBRyxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxTQUFTLG1DQUFJLHNCQUFVLENBQUM7SUFDbkQsTUFBTSxnQkFBZ0IsR0FBRyxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxnQkFBZ0IsbUNBQUksOEJBQWtCLENBQUM7SUFFekUsSUFBSSxpQkFBaUIsR0FBRyxrQkFBa0IsQ0FBQztJQUUzQyxNQUFNLGlCQUFpQixHQUFHLENBQUMsS0FBZSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFOUcsTUFBTSxjQUFjLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLGlCQUFpQixDQUFDO0lBRTFGLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTtRQUM5QyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFCLDREQUE0RDtZQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7UUFDRCxNQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRCxpQkFBaUIsSUFBSSxjQUFjLENBQUM7UUFDcEMsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0lBRUYsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLHFCQUE4QixFQUFFLEVBQUU7UUFDNUQsaUJBQWlCLElBQUkscUJBQXFCLGFBQXJCLHFCQUFxQixjQUFyQixxQkFBcUIsR0FBSSxnQkFBZ0IsQ0FBQztRQUMvRCxpQkFBaUIsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUMsQ0FBQztJQUVGLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNuQixjQUFjO1FBQ2QsbUJBQW1CO1FBQ25CLGtCQUFrQjtLQUNuQixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFoQ1csUUFBQSxvQkFBb0Isd0JBZ0MvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNka0Vycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3NtaXRoeS1jbGllbnRcIjtcblxuaW1wb3J0IHsgTk9fUkVUUllfSU5DUkVNRU5ULCBSRVRSWV9DT1NULCBUSU1FT1VUX1JFVFJZX0NPU1QgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IFJldHJ5UXVvdGEgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmF1bHRSZXRyeVF1b3RhT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBUaGUgdG90YWwgYW1vdW50IG9mIHJldHJ5IHRva2VuIHRvIGJlIGluY3JlbWVudGVkIGZyb20gcmV0cnkgdG9rZW4gYmFsYW5jZVxuICAgKiBpZiBhbiBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gc3VjY2VlZHMgd2l0aG91dCByZXF1aXJpbmcgYSByZXRyeSByZXF1ZXN0LlxuICAgKi9cbiAgbm9SZXRyeUluY3JlbWVudD86IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlLlxuICAgKi9cbiAgcmV0cnlDb3N0PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgdG90YWwgYW1vdW50IG9mIHJldHJ5IHRva2VucyB0byBiZSBkZWNyZW1lbnRlZCBmcm9tIHJldHJ5IHRva2VuIGJhbGFuY2VcbiAgICogd2hlbiBhIHRocm90dGxpbmcgZXJyb3IgaXMgZW5jb3VudGVyZWQuXG4gICAqL1xuICB0aW1lb3V0UmV0cnlDb3N0PzogbnVtYmVyO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0RGVmYXVsdFJldHJ5UXVvdGEgPSAoaW5pdGlhbFJldHJ5VG9rZW5zOiBudW1iZXIsIG9wdGlvbnM/OiBEZWZhdWx0UmV0cnlRdW90YU9wdGlvbnMpOiBSZXRyeVF1b3RhID0+IHtcbiAgY29uc3QgTUFYX0NBUEFDSVRZID0gaW5pdGlhbFJldHJ5VG9rZW5zO1xuICBjb25zdCBub1JldHJ5SW5jcmVtZW50ID0gb3B0aW9ucz8ubm9SZXRyeUluY3JlbWVudCA/PyBOT19SRVRSWV9JTkNSRU1FTlQ7XG4gIGNvbnN0IHJldHJ5Q29zdCA9IG9wdGlvbnM/LnJldHJ5Q29zdCA/PyBSRVRSWV9DT1NUO1xuICBjb25zdCB0aW1lb3V0UmV0cnlDb3N0ID0gb3B0aW9ucz8udGltZW91dFJldHJ5Q29zdCA/PyBUSU1FT1VUX1JFVFJZX0NPU1Q7XG5cbiAgbGV0IGF2YWlsYWJsZUNhcGFjaXR5ID0gaW5pdGlhbFJldHJ5VG9rZW5zO1xuXG4gIGNvbnN0IGdldENhcGFjaXR5QW1vdW50ID0gKGVycm9yOiBTZGtFcnJvcikgPT4gKGVycm9yLm5hbWUgPT09IFwiVGltZW91dEVycm9yXCIgPyB0aW1lb3V0UmV0cnlDb3N0IDogcmV0cnlDb3N0KTtcblxuICBjb25zdCBoYXNSZXRyeVRva2VucyA9IChlcnJvcjogU2RrRXJyb3IpID0+IGdldENhcGFjaXR5QW1vdW50KGVycm9yKSA8PSBhdmFpbGFibGVDYXBhY2l0eTtcblxuICBjb25zdCByZXRyaWV2ZVJldHJ5VG9rZW5zID0gKGVycm9yOiBTZGtFcnJvcikgPT4ge1xuICAgIGlmICghaGFzUmV0cnlUb2tlbnMoZXJyb3IpKSB7XG4gICAgICAvLyByZXRyeVN0cmF0ZWd5IHNob3VsZCBzdG9wIHJldHJ5aW5nLCBhbmQgcmV0dXJuIGxhc3QgZXJyb3JcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHJldHJ5IHRva2VuIGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgY29uc3QgY2FwYWNpdHlBbW91bnQgPSBnZXRDYXBhY2l0eUFtb3VudChlcnJvcik7XG4gICAgYXZhaWxhYmxlQ2FwYWNpdHkgLT0gY2FwYWNpdHlBbW91bnQ7XG4gICAgcmV0dXJuIGNhcGFjaXR5QW1vdW50O1xuICB9O1xuXG4gIGNvbnN0IHJlbGVhc2VSZXRyeVRva2VucyA9IChjYXBhY2l0eVJlbGVhc2VBbW91bnQ/OiBudW1iZXIpID0+IHtcbiAgICBhdmFpbGFibGVDYXBhY2l0eSArPSBjYXBhY2l0eVJlbGVhc2VBbW91bnQgPz8gbm9SZXRyeUluY3JlbWVudDtcbiAgICBhdmFpbGFibGVDYXBhY2l0eSA9IE1hdGgubWluKGF2YWlsYWJsZUNhcGFjaXR5LCBNQVhfQ0FQQUNJVFkpO1xuICB9O1xuXG4gIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICBoYXNSZXRyeVRva2VucyxcbiAgICByZXRyaWV2ZVJldHJ5VG9rZW5zLFxuICAgIHJlbGVhc2VSZXRyeVRva2VucyxcbiAgfSk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsYXlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2RlbGF5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBa0Q7QUFFbEQ7O0dBRUc7QUFDSSxNQUFNLG1CQUFtQixHQUFHLENBQUMsU0FBaUIsRUFBRSxRQUFnQixFQUFFLEVBQUUsQ0FDekUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLCtCQUFtQixFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFEMUUsUUFBQSxtQkFBbUIsdUJBQ3VEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTUFYSU1VTV9SRVRSWV9ERUxBWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIENhbGN1bGF0ZSBhIGNhcHBlZCwgZnVsbHktaml0dGVyZWQgZXhwb25lbnRpYWwgYmFja29mZiB0aW1lLlxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdERlbGF5RGVjaWRlciA9IChkZWxheUJhc2U6IG51bWJlciwgYXR0ZW1wdHM6IG51bWJlcikgPT5cbiAgTWF0aC5mbG9vcihNYXRoLm1pbihNQVhJTVVNX1JFVFJZX0RFTEFZLCBNYXRoLnJhbmRvbSgpICogMiAqKiBhdHRlbXB0cyAqIGRlbGF5QmFzZSkpO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./retryMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./omitRetryHeadersMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./delayDecider\"), exports);\ntslib_1.__exportStar(require(\"./DefaultRateLimiter\"), exports);\ntslib_1.__exportStar(require(\"./retryDecider\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNERBQWtDO0FBQ2xDLHVFQUE2QztBQUM3QyxrRUFBd0M7QUFDeEMsa0VBQXdDO0FBQ3hDLG1EQUF5QjtBQUN6QiwyREFBaUM7QUFDakMseURBQStCO0FBQy9CLCtEQUFxQztBQUNyQyx5REFBK0I7QUFDL0Isa0RBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcmV0cnlNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9vbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU3RhbmRhcmRSZXRyeVN0cmF0ZWd5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9BZGFwdGl2ZVJldHJ5U3RyYXRlZ3lcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RlbGF5RGVjaWRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vRGVmYXVsdFJhdGVMaW1pdGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXRyeURlY2lkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[constants_1.INVOCATION_ID_HEADER];\n        delete request.headers[constants_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(exports.omitRetryHeadersMiddleware(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBVXJELDJDQUFtRTtBQUU1RCxNQUFNLDBCQUEwQixHQUNyQyxHQUFHLEVBQUUsQ0FDTCxDQUFpRCxJQUFrQyxFQUFnQyxFQUFFLENBQ3JILEtBQUssRUFBRSxJQUFtQyxFQUEwQyxFQUFFO0lBQ3BGLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDekIsSUFBSSwyQkFBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNuQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0NBQW9CLENBQUMsQ0FBQztRQUM3QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsMEJBQWMsQ0FBQyxDQUFDO0tBQ3hDO0lBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDO0FBVlMsUUFBQSwwQkFBMEIsOEJBVW5DO0FBRVMsUUFBQSxpQ0FBaUMsR0FBOEI7SUFDMUUsSUFBSSxFQUFFLDRCQUE0QjtJQUNsQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLG9CQUFvQixDQUFDO0lBQ2hELFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFlBQVksRUFBRSxtQkFBbUI7SUFDakMsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUssTUFBTSx5QkFBeUIsR0FBRyxDQUFDLE9BQWdCLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQ25GLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxhQUFhLENBQUMsa0NBQTBCLEVBQUUsRUFBRSx5Q0FBaUMsQ0FBQyxDQUFDO0lBQzdGLENBQUM7Q0FDRixDQUFDLENBQUM7QUFKVSxRQUFBLHlCQUF5Qiw2QkFJbkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBGaW5hbGl6ZUhhbmRsZXIsXG4gIEZpbmFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRmluYWxpemVIYW5kbGVyT3V0cHV0LFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxuICBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSU5WT0NBVElPTl9JRF9IRUFERVIsIFJFUVVFU1RfSEVBREVSIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBjb25zdCBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZSA9XG4gICgpID0+XG4gIDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IE1ldGFkYXRhQmVhcmVyPihuZXh0OiBGaW5hbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+KTogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PiA9PlxuICBhc3luYyAoYXJnczogRmluYWxpemVIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEZpbmFsaXplSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gICAgY29uc3QgeyByZXF1ZXN0IH0gPSBhcmdzO1xuICAgIGlmIChIdHRwUmVxdWVzdC5pc0luc3RhbmNlKHJlcXVlc3QpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW0lOVk9DQVRJT05fSURfSEVBREVSXTtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0LmhlYWRlcnNbUkVRVUVTVF9IRUFERVJdO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dChhcmdzKTtcbiAgfTtcblxuZXhwb3J0IGNvbnN0IG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlT3B0aW9uczogUmVsYXRpdmVNaWRkbGV3YXJlT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJSRVRSWVwiLCBcIkhFQURFUlNcIiwgXCJPTUlUX1JFVFJZX0hFQURFUlNcIl0sXG4gIHJlbGF0aW9uOiBcImJlZm9yZVwiLFxuICB0b01pZGRsZXdhcmU6IFwiYXdzQXV0aE1pZGRsZXdhcmVcIixcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0T21pdFJldHJ5SGVhZGVyc1BsdWdpbiA9IChvcHRpb25zOiB1bmtub3duKTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZFJlbGF0aXZlVG8ob21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUoKSwgb21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return service_error_classification_1.isRetryableByTrait(error) || service_error_classification_1.isClockSkewError(error) || service_error_classification_1.isThrottlingError(error) || service_error_classification_1.isTransientError(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3RkFLK0M7QUFHeEMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQWUsRUFBRSxFQUFFO0lBQ3JELElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxpREFBa0IsQ0FBQyxLQUFLLENBQUMsSUFBSSwrQ0FBZ0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxnREFBaUIsQ0FBQyxLQUFLLENBQUMsSUFBSSwrQ0FBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNySCxDQUFDLENBQUM7QUFOVyxRQUFBLG1CQUFtQix1QkFNOUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0Nsb2NrU2tld0Vycm9yLFxuICBpc1JldHJ5YWJsZUJ5VHJhaXQsXG4gIGlzVGhyb3R0bGluZ0Vycm9yLFxuICBpc1RyYW5zaWVudEVycm9yLFxufSBmcm9tIFwiQGF3cy1zZGsvc2VydmljZS1lcnJvci1jbGFzc2lmaWNhdGlvblwiO1xuaW1wb3J0IHsgU2RrRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvc21pdGh5LWNsaWVudFwiO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFJldHJ5RGVjaWRlciA9IChlcnJvcjogU2RrRXJyb3IpID0+IHtcbiAgaWYgKCFlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBpc1JldHJ5YWJsZUJ5VHJhaXQoZXJyb3IpIHx8IGlzQ2xvY2tTa2V3RXJyb3IoZXJyb3IpIHx8IGlzVGhyb3R0bGluZ0Vycm9yKGVycm9yKSB8fCBpc1RyYW5zaWVudEVycm9yKGVycm9yKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n        context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n};\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.retryMiddleware(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5TWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFhTyxNQUFNLGVBQWUsR0FDMUIsQ0FBQyxPQUE0QixFQUFFLEVBQUUsQ0FDakMsQ0FDRSxJQUFrQyxFQUNsQyxPQUFnQyxFQUNGLEVBQUUsQ0FDbEMsS0FBSyxFQUFFLElBQW1DLEVBQTBDLEVBQUU7SUFDcEYsTUFBTSxhQUFhLEdBQUcsTUFBTSxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDcEQsSUFBSSxhQUFhLGFBQWIsYUFBYSx1QkFBYixhQUFhLENBQUUsSUFBSTtRQUFFLE9BQU8sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3BILE9BQU8sYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDekMsQ0FBQyxDQUFDO0FBVlMsUUFBQSxlQUFlLG1CQVV4QjtBQUVTLFFBQUEsc0JBQXNCLEdBQXFEO0lBQ3RGLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDO0lBQ2YsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixRQUFRLEVBQUUsTUFBTTtJQUNoQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFSyxNQUFNLGNBQWMsR0FBRyxDQUFDLE9BQTRCLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQ3BGLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxHQUFHLENBQUMsdUJBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSw4QkFBc0IsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7Q0FDRixDQUFDLENBQUM7QUFKVSxRQUFBLGNBQWMsa0JBSXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWJzb2x1dGVMb2NhdGlvbixcbiAgRmluYWxpemVIYW5kbGVyLFxuICBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHMsXG4gIEZpbmFsaXplSGFuZGxlck91dHB1dCxcbiAgRmluYWxpemVSZXF1ZXN0SGFuZGxlck9wdGlvbnMsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgUmV0cnlSZXNvbHZlZENvbmZpZyB9IGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5cbmV4cG9ydCBjb25zdCByZXRyeU1pZGRsZXdhcmUgPVxuICAob3B0aW9uczogUmV0cnlSZXNvbHZlZENvbmZpZykgPT5cbiAgPE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyID0gTWV0YWRhdGFCZWFyZXI+KFxuICAgIG5leHQ6IEZpbmFsaXplSGFuZGxlcjxhbnksIE91dHB1dD4sXG4gICAgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHRcbiAgKTogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PiA9PlxuICBhc3luYyAoYXJnczogRmluYWxpemVIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEZpbmFsaXplSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gICAgY29uc3QgcmV0cnlTdHJhdGVneSA9IGF3YWl0IG9wdGlvbnMucmV0cnlTdHJhdGVneSgpO1xuICAgIGlmIChyZXRyeVN0cmF0ZWd5Py5tb2RlKSBjb250ZXh0LnVzZXJBZ2VudCA9IFsuLi4oY29udGV4dC51c2VyQWdlbnQgfHwgW10pLCBbXCJjZmcvcmV0cnktbW9kZVwiLCByZXRyeVN0cmF0ZWd5Lm1vZGVdXTtcbiAgICByZXR1cm4gcmV0cnlTdHJhdGVneS5yZXRyeShuZXh0LCBhcmdzKTtcbiAgfTtcblxuZXhwb3J0IGNvbnN0IHJldHJ5TWlkZGxld2FyZU9wdGlvbnM6IEZpbmFsaXplUmVxdWVzdEhhbmRsZXJPcHRpb25zICYgQWJzb2x1dGVMb2NhdGlvbiA9IHtcbiAgbmFtZTogXCJyZXRyeU1pZGRsZXdhcmVcIixcbiAgdGFnczogW1wiUkVUUllcIl0sXG4gIHN0ZXA6IFwiZmluYWxpemVSZXF1ZXN0XCIsXG4gIHByaW9yaXR5OiBcImhpZ2hcIixcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmV0cnlQbHVnaW4gPSAob3B0aW9uczogUmV0cnlSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQocmV0cnlNaWRkbGV3YXJlKG9wdGlvbnMpLCByZXRyeU1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNka0Vycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3NtaXRoeS1jbGllbnRcIjtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgYW4gZXJyb3IgaXMgcmV0cnlhYmxlIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgcmV0cmllc1xuICogYWxyZWFkeSBhdHRlbXB0ZWQsIHRoZSBIVFRQIHN0YXR1cyBjb2RlLCBhbmQgdGhlIGVycm9yIHJlY2VpdmVkIChpZiBhbnkpLlxuICpcbiAqIEBwYXJhbSBlcnJvciAgICAgICAgIFRoZSBlcnJvciBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZXRyeURlY2lkZXIge1xuICAoZXJyb3I6IFNka0Vycm9yKTogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmVzIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIHJldHJ5aW5nIGFuIGFjdGlvbi5cbiAqXG4gKiBAcGFyYW0gZGVsYXlCYXNlIFRoZSBiYXNlIGRlbGF5IChpbiBtaWxsaXNlY29uZHMpLlxuICogQHBhcmFtIGF0dGVtcHRzICBUaGUgbnVtYmVyIG9mIHRpbWVzIHRoZSBhY3Rpb24gaGFzIGFscmVhZHkgYmVlbiB0cmllZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEZWxheURlY2lkZXIge1xuICAoZGVsYXlCYXNlOiBudW1iZXIsIGF0dGVtcHRzOiBudW1iZXIpOiBudW1iZXI7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIHRoYXQgc3BlY2lmaWVzIHRoZSByZXRyeSBxdW90YSBiZWhhdmlvci5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZXRyeVF1b3RhIHtcbiAgLyoqXG4gICAqIHJldHVybnMgdHJ1ZSBpZiByZXRyeSB0b2tlbnMgYXJlIGF2YWlsYWJsZSBmcm9tIHRoZSByZXRyeSBxdW90YSBidWNrZXQuXG4gICAqL1xuICBoYXNSZXRyeVRva2VuczogKGVycm9yOiBTZGtFcnJvcikgPT4gYm9vbGVhbjtcblxuICAvKipcbiAgICogcmV0dXJucyB0b2tlbiBhbW91bnQgZnJvbSB0aGUgcmV0cnkgcXVvdGEgYnVja2V0LlxuICAgKiB0aHJvd3MgZXJyb3IgaXMgcmV0cnkgdG9rZW5zIGFyZSBub3QgYXZhaWxhYmxlLlxuICAgKi9cbiAgcmV0cmlldmVSZXRyeVRva2VuczogKGVycm9yOiBTZGtFcnJvcikgPT4gbnVtYmVyO1xuXG4gIC8qKlxuICAgKiByZWxlYXNlcyB0b2tlbnMgYmFjayB0byB0aGUgcmV0cnkgcXVvdGEuXG4gICAqL1xuICByZWxlYXNlUmV0cnlUb2tlbnM6IChyZWxlYXNlQ2FwYWNpdHlBbW91bnQ/OiBudW1iZXIpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmF0ZUxpbWl0ZXIge1xuICAvKipcbiAgICogSWYgdGhlcmUgaXMgc3VmZmljaWVudCBjYXBhY2l0eSAodG9rZW5zKSBhdmFpbGFibGUsIGl0IGltbWVkaWF0ZWx5IHJldHVybnMuXG4gICAqIElmIHRoZXJlIGlzIG5vdCBzdWZmaWNpZW50IGNhcGFjaXR5LCBpdCB3aWxsIGVpdGhlciBzbGVlcCBhIGNlcnRhaW4gYW1vdW50XG4gICAqIG9mIHRpbWUgdW50aWwgdGhlIHJhdGUgbGltaXRlciBjYW4gcmV0cmlldmUgYSB0b2tlbiBmcm9tIGl0cyB0b2tlbiBidWNrZXRcbiAgICogb3IgcmFpc2UgYW4gZXhjZXB0aW9uIGluZGljYXRpbmcgdGhlcmUgaXMgaW5zdWZmaWNpZW50IGNhcGFjaXR5LlxuICAgKi9cbiAgZ2V0U2VuZFRva2VuOiAoKSA9PiBQcm9taXNlPHZvaWQ+O1xuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBjbGllbnQgc2VuZGluZyByYXRlIGJhc2VkIG9uIHJlc3BvbnNlLlxuICAgKiBJZiB0aGUgcmVzcG9uc2Ugd2FzIHN1Y2Nlc3NmdWwsIHRoZSBjYXBhY2l0eSBhbmQgZmlsbCByYXRlIGFyZSBpbmNyZWFzZWQuXG4gICAqIElmIHRoZSByZXNwb25zZSB3YXMgYSB0aHJvdHRsaW5nIHJlc3BvbnNlLCB0aGUgY2FwYWNpdHkgYW5kIGZpbGwgcmF0ZSBhcmVcbiAgICogZGVjcmVhc2VkLiBUcmFuc2llbnQgZXJyb3JzIGRvIG5vdCBhZmZlY3QgdGhlIHJhdGUgbGltaXRlci5cbiAgICovXG4gIHVwZGF0ZUNsaWVudFNlbmRpbmdSYXRlOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\n/**\n * Set STS client constructor to `stsClientCtor` config parameter. It is used\n * for role assumers for STS client internally. See `clients/client-sts/defaultStsRoleAssumers.ts`\n * and `clients/client-sts/STSClient.ts`.\n */\nconst resolveStsAuthConfig = (input, stsClientCtor) => {\n    return middleware_signing_1.resolveAwsAuthConfig({\n        ...input,\n        stsClientCtor,\n    });\n};\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQThHO0FBb0I5Rzs7OztHQUlHO0FBQ0ksTUFBTSxvQkFBb0IsR0FBRyxDQUNsQyxLQUFrRCxFQUNsRCxhQUErRCxFQUNwQyxFQUFFO0lBQzdCLE9BQU8seUNBQW9CLENBQUM7UUFDMUIsR0FBRyxLQUFLO1FBQ1IsYUFBYTtLQUNkLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQVJXLFFBQUEsb0JBQW9CLHdCQVEvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF3c0F1dGhJbnB1dENvbmZpZywgQXdzQXV0aFJlc29sdmVkQ29uZmlnLCByZXNvbHZlQXdzQXV0aENvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXNpZ25pbmdcIjtcbmltcG9ydCB7IENsaWVudCwgQ3JlZGVudGlhbHMsIEhhc2hDb25zdHJ1Y3RvciwgUGx1Z2dhYmxlLCBQcm92aWRlciwgUmVnaW9uSW5mb1Byb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RzQXV0aElucHV0Q29uZmlnIGV4dGVuZHMgQXdzQXV0aElucHV0Q29uZmlnIHt9XG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgY3JlZGVudGlhbERlZmF1bHRQcm92aWRlcjogKGlucHV0OiBhbnkpID0+IFByb3ZpZGVyPENyZWRlbnRpYWxzPjtcbiAgcmVnaW9uOiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+O1xuICByZWdpb25JbmZvUHJvdmlkZXI6IFJlZ2lvbkluZm9Qcm92aWRlcjtcbiAgc2lnbmluZ05hbWU/OiBzdHJpbmc7XG4gIHNlcnZpY2VJZDogc3RyaW5nO1xuICBzaGEyNTY6IEhhc2hDb25zdHJ1Y3Rvcjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU3RzQXV0aFJlc29sdmVkQ29uZmlnIGV4dGVuZHMgQXdzQXV0aFJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFJlZmVyZW5jZSB0byBTVFNDbGllbnQgY2xhc3MgY29uc3RydWN0b3IuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgc3RzQ2xpZW50Q3RvcjogbmV3IChjbGllbnRDb25maWc6IGFueSkgPT4gQ2xpZW50PGFueSwgYW55LCBhbnk+O1xufVxuXG4vKipcbiAqIFNldCBTVFMgY2xpZW50IGNvbnN0cnVjdG9yIHRvIGBzdHNDbGllbnRDdG9yYCBjb25maWcgcGFyYW1ldGVyLiBJdCBpcyB1c2VkXG4gKiBmb3Igcm9sZSBhc3N1bWVycyBmb3IgU1RTIGNsaWVudCBpbnRlcm5hbGx5LiBTZWUgYGNsaWVudHMvY2xpZW50LXN0cy9kZWZhdWx0U3RzUm9sZUFzc3VtZXJzLnRzYFxuICogYW5kIGBjbGllbnRzL2NsaWVudC1zdHMvU1RTQ2xpZW50LnRzYC5cbiAqL1xuZXhwb3J0IGNvbnN0IHJlc29sdmVTdHNBdXRoQ29uZmlnID0gPFQ+KFxuICBpbnB1dDogVCAmIFByZXZpb3VzbHlSZXNvbHZlZCAmIFN0c0F1dGhJbnB1dENvbmZpZyxcbiAgc3RzQ2xpZW50Q3RvcjogbmV3IChjbGllbnRDb25maWc6IGFueSkgPT4gQ2xpZW50PGFueSwgYW55LCBhbnk+XG4pOiBUICYgU3RzQXV0aFJlc29sdmVkQ29uZmlnID0+IHtcbiAgcmV0dXJuIHJlc29sdmVBd3NBdXRoQ29uZmlnKHtcbiAgICAuLi5pbnB1dCxcbiAgICBzdHNDbGllbnRDdG9yLFxuICB9KTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    const parsed = await deserializer(response, options);\n    return {\n        response,\n        output: parsed,\n    };\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzZXJpYWxpemVyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVNPLE1BQU0sc0JBQXNCLEdBQ2pDLENBQ0UsT0FBcUIsRUFDckIsWUFBMEQsRUFDcEIsRUFBRSxDQUMxQyxDQUFDLElBQXVDLEVBQUUsT0FBZ0MsRUFBcUMsRUFBRSxDQUNqSCxLQUFLLEVBQUUsSUFBd0MsRUFBNkMsRUFBRTtJQUM1RixNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsTUFBTSxNQUFNLEdBQUcsTUFBTSxZQUFZLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3JELE9BQU87UUFDTCxRQUFRO1FBQ1IsTUFBTSxFQUFFLE1BQWdCO0tBQ3pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFiUyxRQUFBLHNCQUFzQiwwQkFhL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZXNlcmlhbGl6ZUhhbmRsZXIsXG4gIERlc2VyaWFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRGVzZXJpYWxpemVIYW5kbGVyT3V0cHV0LFxuICBEZXNlcmlhbGl6ZU1pZGRsZXdhcmUsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBSZXNwb25zZURlc2VyaWFsaXplcixcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlID1cbiAgPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3QsIFJ1bnRpbWVVdGlscyA9IGFueT4oXG4gICAgb3B0aW9uczogUnVudGltZVV0aWxzLFxuICAgIGRlc2VyaWFsaXplcjogUmVzcG9uc2VEZXNlcmlhbGl6ZXI8YW55LCBhbnksIFJ1bnRpbWVVdGlscz5cbiAgKTogRGVzZXJpYWxpemVNaWRkbGV3YXJlPElucHV0LCBPdXRwdXQ+ID0+XG4gIChuZXh0OiBEZXNlcmlhbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4sIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTogRGVzZXJpYWxpemVIYW5kbGVyPElucHV0LCBPdXRwdXQ+ID0+XG4gIGFzeW5jIChhcmdzOiBEZXNlcmlhbGl6ZUhhbmRsZXJBcmd1bWVudHM8SW5wdXQ+KTogUHJvbWlzZTxEZXNlcmlhbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHsgcmVzcG9uc2UgfSA9IGF3YWl0IG5leHQoYXJncyk7XG4gICAgY29uc3QgcGFyc2VkID0gYXdhaXQgZGVzZXJpYWxpemVyKHJlc3BvbnNlLCBvcHRpb25zKTtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzcG9uc2UsXG4gICAgICBvdXRwdXQ6IHBhcnNlZCBhcyBPdXRwdXQsXG4gICAgfTtcbiAgfTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./deserializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serdePlugin\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsbUVBQXlDO0FBQ3pDLGlFQUF1QztBQUN2Qyx3REFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyZGVQbHVnaW5cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware_1.deserializerMiddleware(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware_1.serializerMiddleware(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyZGVQbHVnaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyZGVQbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBV0EscUVBQWtFO0FBQ2xFLGlFQUE4RDtBQUVqRCxRQUFBLDRCQUE0QixHQUE4QjtJQUNyRSxJQUFJLEVBQUUsd0JBQXdCO0lBQzlCLElBQUksRUFBRSxhQUFhO0lBQ25CLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQztJQUN0QixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFVyxRQUFBLDBCQUEwQixHQUE0QjtJQUNqRSxJQUFJLEVBQUUsc0JBQXNCO0lBQzVCLElBQUksRUFBRSxXQUFXO0lBQ2pCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFRixTQUFnQixjQUFjLENBSzVCLE1BQW9CLEVBQ3BCLFVBQWdELEVBQ2hELFlBQWlFO0lBRWpFLE9BQU87UUFDTCxZQUFZLEVBQUUsQ0FBQyxZQUFvRCxFQUFFLEVBQUU7WUFDckUsWUFBWSxDQUFDLEdBQUcsQ0FBQywrQ0FBc0IsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEVBQUUsb0NBQTRCLENBQUMsQ0FBQztZQUM3RixZQUFZLENBQUMsR0FBRyxDQUFDLDJDQUFvQixDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsRUFBRSxrQ0FBMEIsQ0FBQyxDQUFDO1FBQ3pGLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQztBQWZELHdDQWVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGVzZXJpYWxpemVIYW5kbGVyT3B0aW9ucyxcbiAgRW5kcG9pbnRCZWFyZXIsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBNaWRkbGV3YXJlU3RhY2ssXG4gIFBsdWdnYWJsZSxcbiAgUmVxdWVzdFNlcmlhbGl6ZXIsXG4gIFJlc3BvbnNlRGVzZXJpYWxpemVyLFxuICBTZXJpYWxpemVIYW5kbGVyT3B0aW9ucyxcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IGRlc2VyaWFsaXplck1pZGRsZXdhcmUgfSBmcm9tIFwiLi9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCI7XG5pbXBvcnQgeyBzZXJpYWxpemVyTWlkZGxld2FyZSB9IGZyb20gXCIuL3NlcmlhbGl6ZXJNaWRkbGV3YXJlXCI7XG5cbmV4cG9ydCBjb25zdCBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlT3B0aW9uOiBEZXNlcmlhbGl6ZUhhbmRsZXJPcHRpb25zID0ge1xuICBuYW1lOiBcImRlc2VyaWFsaXplck1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJkZXNlcmlhbGl6ZVwiLFxuICB0YWdzOiBbXCJERVNFUklBTElaRVJcIl0sXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IHNlcmlhbGl6ZXJNaWRkbGV3YXJlT3B0aW9uOiBTZXJpYWxpemVIYW5kbGVyT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJzZXJpYWxpemVyTWlkZGxld2FyZVwiLFxuICBzdGVwOiBcInNlcmlhbGl6ZVwiLFxuICB0YWdzOiBbXCJTRVJJQUxJWkVSXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXJkZVBsdWdpbjxcbiAgSW5wdXRUeXBlIGV4dGVuZHMgb2JqZWN0LFxuICBTZXJEZUNvbnRleHQgZXh0ZW5kcyBFbmRwb2ludEJlYXJlcixcbiAgT3V0cHV0VHlwZSBleHRlbmRzIE1ldGFkYXRhQmVhcmVyXG4+KFxuICBjb25maWc6IFNlckRlQ29udGV4dCxcbiAgc2VyaWFsaXplcjogUmVxdWVzdFNlcmlhbGl6ZXI8YW55LCBTZXJEZUNvbnRleHQ+LFxuICBkZXNlcmlhbGl6ZXI6IFJlc3BvbnNlRGVzZXJpYWxpemVyPE91dHB1dFR5cGUsIGFueSwgU2VyRGVDb250ZXh0PlxuKTogUGx1Z2dhYmxlPElucHV0VHlwZSwgT3V0cHV0VHlwZT4ge1xuICByZXR1cm4ge1xuICAgIGFwcGx5VG9TdGFjazogKGNvbW1hbmRTdGFjazogTWlkZGxld2FyZVN0YWNrPElucHV0VHlwZSwgT3V0cHV0VHlwZT4pID0+IHtcbiAgICAgIGNvbW1hbmRTdGFjay5hZGQoZGVzZXJpYWxpemVyTWlkZGxld2FyZShjb25maWcsIGRlc2VyaWFsaXplciksIGRlc2VyaWFsaXplck1pZGRsZXdhcmVPcHRpb24pO1xuICAgICAgY29tbWFuZFN0YWNrLmFkZChzZXJpYWxpemVyTWlkZGxld2FyZShjb25maWcsIHNlcmlhbGl6ZXIpLCBzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbik7XG4gICAgfSxcbiAgfTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const request = await serializer(args.input, options);\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsaXplck1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyaWFsaXplck1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBVU8sTUFBTSxvQkFBb0IsR0FDL0IsQ0FDRSxPQUFxQixFQUNyQixVQUFnRCxFQUNaLEVBQUUsQ0FDeEMsQ0FBQyxJQUFxQyxFQUFFLE9BQWdDLEVBQW1DLEVBQUUsQ0FDN0csS0FBSyxFQUFFLElBQXNDLEVBQTJDLEVBQUU7SUFDeEYsTUFBTSxPQUFPLEdBQUcsTUFBTSxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RCxPQUFPLElBQUksQ0FBQztRQUNWLEdBQUcsSUFBSTtRQUNQLE9BQU87S0FDUixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFaUyxRQUFBLG9CQUFvQix3QkFZN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbmRwb2ludEJlYXJlcixcbiAgSGFuZGxlckV4ZWN1dGlvbkNvbnRleHQsXG4gIFJlcXVlc3RTZXJpYWxpemVyLFxuICBTZXJpYWxpemVIYW5kbGVyLFxuICBTZXJpYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBTZXJpYWxpemVIYW5kbGVyT3V0cHV0LFxuICBTZXJpYWxpemVNaWRkbGV3YXJlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IHNlcmlhbGl6ZXJNaWRkbGV3YXJlID1cbiAgPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3QsIFJ1bnRpbWVVdGlscyBleHRlbmRzIEVuZHBvaW50QmVhcmVyPihcbiAgICBvcHRpb25zOiBSdW50aW1lVXRpbHMsXG4gICAgc2VyaWFsaXplcjogUmVxdWVzdFNlcmlhbGl6ZXI8YW55LCBSdW50aW1lVXRpbHM+XG4gICk6IFNlcmlhbGl6ZU1pZGRsZXdhcmU8SW5wdXQsIE91dHB1dD4gPT5cbiAgKG5leHQ6IFNlcmlhbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4sIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTogU2VyaWFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PiA9PlxuICBhc3luYyAoYXJnczogU2VyaWFsaXplSGFuZGxlckFyZ3VtZW50czxJbnB1dD4pOiBQcm9taXNlPFNlcmlhbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBhd2FpdCBzZXJpYWxpemVyKGFyZ3MuaW5wdXQsIG9wdGlvbnMpO1xuICAgIHJldHVybiBuZXh0KHtcbiAgICAgIC4uLmFyZ3MsXG4gICAgICByZXF1ZXN0LFxuICAgIH0pO1xuICB9O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\n// 5 minutes buffer time the refresh the credential before it really expires\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        //construct a provider inferring signing from region.\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [(await input.regionInfoProvider(region)) || {}, region])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            //update client's singing region and signing service config if they are resolved.\n            //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            //signing name resolving order:\n            //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n            input.signingName = input.signingName || signingService || input.serviceId;\n            return new signature_v4_1.SignatureV4({\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            });\n        });\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\n// TODO: reduce code duplication\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"object\") {\n        const promisified = Promise.resolve(input);\n        return () => promisified;\n    }\n    return input;\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return property_provider_1.memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXFEO0FBQ3JELHdEQUFvRDtBQUdwRCw0RUFBNEU7QUFDNUUsTUFBTSx3QkFBd0IsR0FBRyxNQUFNLENBQUM7QUE2RmpDLE1BQU0sb0JBQW9CLEdBQUcsQ0FDbEMsS0FBa0QsRUFDdkIsRUFBRTtJQUM3QixNQUFNLGVBQWUsR0FBRyxLQUFLLENBQUMsV0FBVztRQUN2QyxDQUFDLENBQUMsMkJBQTJCLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQztRQUNoRCxDQUFDLENBQUMsS0FBSyxDQUFDLHlCQUF5QixDQUFDLEtBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU0sRUFBRSxpQkFBaUIsR0FBRyxJQUFJLEVBQUUsaUJBQWlCLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDckcsSUFBSSxNQUErQixDQUFDO0lBQ3BDLElBQUksS0FBSyxDQUFDLE1BQU0sRUFBRTtRQUNoQiwyRkFBMkY7UUFDM0YsTUFBTSxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUMxQztTQUFNO1FBQ0wscURBQXFEO1FBQ3JELE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FDWixpQkFBaUIsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7YUFDOUIsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQXlCLENBQUM7YUFDeEcsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRTtZQUM3QixNQUFNLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxHQUFHLFVBQVUsQ0FBQztZQUNyRCxpRkFBaUY7WUFDakYsZ0hBQWdIO1lBQ2hILEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsSUFBSSxhQUFhLElBQUksTUFBTSxDQUFDO1lBQ3JFLCtCQUErQjtZQUMvQixtSEFBbUg7WUFDbkgsS0FBSyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxJQUFJLGNBQWMsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDO1lBRTNFLE9BQU8sSUFBSSwwQkFBVyxDQUFDO2dCQUNyQixXQUFXLEVBQUUsZUFBZTtnQkFDNUIsTUFBTSxFQUFFLEtBQUssQ0FBQyxhQUFhO2dCQUMzQixPQUFPLEVBQUUsS0FBSyxDQUFDLFdBQVc7Z0JBQzFCLE1BQU07Z0JBQ04sYUFBYSxFQUFFLGlCQUFpQjthQUNqQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztLQUNSO0lBRUQsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLGlCQUFpQjtRQUNqQixpQkFBaUI7UUFDakIsV0FBVyxFQUFFLGVBQWU7UUFDNUIsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUExQ1csUUFBQSxvQkFBb0Isd0JBMEMvQjtBQUVGLGdDQUFnQztBQUN6QixNQUFNLHNCQUFzQixHQUFHLENBQ3BDLEtBQXlELEVBQzVCLEVBQUU7SUFDL0IsTUFBTSxlQUFlLEdBQUcsS0FBSyxDQUFDLFdBQVc7UUFDdkMsQ0FBQyxDQUFDLDJCQUEyQixDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUM7UUFDaEQsQ0FBQyxDQUFDLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxLQUFZLENBQUMsQ0FBQztJQUNsRCxNQUFNLEVBQUUsaUJBQWlCLEdBQUcsSUFBSSxFQUFFLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ3JHLElBQUksTUFBK0IsQ0FBQztJQUNwQyxJQUFJLEtBQUssQ0FBQyxNQUFNLEVBQUU7UUFDaEIsMkZBQTJGO1FBQzNGLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDMUM7U0FBTTtRQUNMLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLDBCQUFXLENBQUM7WUFDekMsV0FBVyxFQUFFLGVBQWU7WUFDNUIsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNO1lBQ3BCLE9BQU8sRUFBRSxLQUFLLENBQUMsV0FBVztZQUMxQixNQUFNO1lBQ04sYUFBYSxFQUFFLGlCQUFpQjtTQUNqQyxDQUFDLENBQUMsQ0FBQztLQUNMO0lBRUQsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLGlCQUFpQjtRQUNqQixpQkFBaUI7UUFDakIsV0FBVyxFQUFFLGVBQWU7UUFDNUIsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUE1QlcsUUFBQSxzQkFBc0IsMEJBNEJqQztBQUVGLE1BQU0saUJBQWlCLEdBQUcsQ0FBSSxLQUFzQixFQUFlLEVBQUU7SUFDbkUsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDN0IsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQyxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtJQUNELE9BQU8sS0FBb0IsQ0FBQztBQUM5QixDQUFDLENBQUM7QUFFRixNQUFNLDJCQUEyQixHQUFHLENBQUMsV0FBZ0QsRUFBeUIsRUFBRTtJQUM5RyxJQUFJLE9BQU8sV0FBVyxLQUFLLFVBQVUsRUFBRTtRQUNyQyxPQUFPLDJCQUFPLENBQ1osV0FBVyxFQUNYLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FDZCxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVM7WUFDcEMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsd0JBQXdCLEVBQzFFLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FDdEQsQ0FBQztLQUNIO0lBQ0QsT0FBTyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZW1vaXplIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBTaWduYXR1cmVWNCB9IGZyb20gXCJAYXdzLXNkay9zaWduYXR1cmUtdjRcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxzLCBIYXNoQ29uc3RydWN0b3IsIFByb3ZpZGVyLCBSZWdpb25JbmZvLCBSZWdpb25JbmZvUHJvdmlkZXIsIFJlcXVlc3RTaWduZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuLy8gNSBtaW51dGVzIGJ1ZmZlciB0aW1lIHRoZSByZWZyZXNoIHRoZSBjcmVkZW50aWFsIGJlZm9yZSBpdCByZWFsbHkgZXhwaXJlc1xuY29uc3QgQ1JFREVOVElBTF9FWFBJUkVfV0lORE9XID0gMzAwMDAwO1xuXG4vLyBBd3NBdXRoIHYvcyBTaWdWNEF1dGhcbi8vIEF3c0F1dGg6IHNwZWNpZmljIHRvIFNpZ1Y0IGF1dGggZm9yIEFXUyBzZXJ2aWNlc1xuLy8gU2lnVjRBdXRoOiBTaWdWNCBhdXRoIGZvciBub24tQVdTIHNlcnZpY2VzXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXdzQXV0aElucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBjcmVkZW50aWFscyB1c2VkIHRvIHNpZ24gcmVxdWVzdHMuXG4gICAqL1xuICBjcmVkZW50aWFscz86IENyZWRlbnRpYWxzIHwgUHJvdmlkZXI8Q3JlZGVudGlhbHM+O1xuXG4gIC8qKlxuICAgKiBUaGUgc2lnbmVyIHRvIHVzZSB3aGVuIHNpZ25pbmcgcmVxdWVzdHMuXG4gICAqL1xuICBzaWduZXI/OiBSZXF1ZXN0U2lnbmVyIHwgUHJvdmlkZXI8UmVxdWVzdFNpZ25lcj47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZXNjYXBlIHJlcXVlc3QgcGF0aCB3aGVuIHNpZ25pbmcgdGhlIHJlcXVlc3QuXG4gICAqL1xuICBzaWduaW5nRXNjYXBlUGF0aD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFuIG9mZnNldCB2YWx1ZSBpbiBtaWxsaXNlY29uZHMgdG8gYXBwbHkgdG8gYWxsIHNpZ25pbmcgdGltZXMuXG4gICAqL1xuICBzeXN0ZW1DbG9ja09mZnNldD86IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIHJlZ2lvbiB3aGVyZSB5b3Ugd2FudCB0byBzaWduIHlvdXIgcmVxdWVzdCBhZ2FpbnN0LiBUaGlzXG4gICAqIGNhbiBiZSBkaWZmZXJlbnQgdG8gdGhlIHJlZ2lvbiBpbiB0aGUgZW5kcG9pbnQuXG4gICAqL1xuICBzaWduaW5nUmVnaW9uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNpZ1Y0QXV0aElucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBjcmVkZW50aWFscyB1c2VkIHRvIHNpZ24gcmVxdWVzdHMuXG4gICAqL1xuICBjcmVkZW50aWFscz86IENyZWRlbnRpYWxzIHwgUHJvdmlkZXI8Q3JlZGVudGlhbHM+O1xuXG4gIC8qKlxuICAgKiBUaGUgc2lnbmVyIHRvIHVzZSB3aGVuIHNpZ25pbmcgcmVxdWVzdHMuXG4gICAqL1xuICBzaWduZXI/OiBSZXF1ZXN0U2lnbmVyIHwgUHJvdmlkZXI8UmVxdWVzdFNpZ25lcj47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZXNjYXBlIHJlcXVlc3QgcGF0aCB3aGVuIHNpZ25pbmcgdGhlIHJlcXVlc3QuXG4gICAqL1xuICBzaWduaW5nRXNjYXBlUGF0aD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFuIG9mZnNldCB2YWx1ZSBpbiBtaWxsaXNlY29uZHMgdG8gYXBwbHkgdG8gYWxsIHNpZ25pbmcgdGltZXMuXG4gICAqL1xuICBzeXN0ZW1DbG9ja09mZnNldD86IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIGNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXI6IChpbnB1dDogYW55KSA9PiBQcm92aWRlcjxDcmVkZW50aWFscz47XG4gIHJlZ2lvbjogc3RyaW5nIHwgUHJvdmlkZXI8c3RyaW5nPjtcbiAgcmVnaW9uSW5mb1Byb3ZpZGVyOiBSZWdpb25JbmZvUHJvdmlkZXI7XG4gIHNpZ25pbmdOYW1lPzogc3RyaW5nO1xuICBzZXJ2aWNlSWQ6IHN0cmluZztcbiAgc2hhMjU2OiBIYXNoQ29uc3RydWN0b3I7XG59XG5cbmludGVyZmFjZSBTaWdWNFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIGNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXI6IChpbnB1dDogYW55KSA9PiBQcm92aWRlcjxDcmVkZW50aWFscz47XG4gIHJlZ2lvbjogc3RyaW5nIHwgUHJvdmlkZXI8c3RyaW5nPjtcbiAgc2lnbmluZ05hbWU6IHN0cmluZztcbiAgc2hhMjU2OiBIYXNoQ29uc3RydWN0b3I7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXdzQXV0aFJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCBjb25maWcge0BsaW5rIEF3c0F1dGhJbnB1dENvbmZpZy5jcmVkZW50aWFsc31cbiAgICovXG4gIGNyZWRlbnRpYWxzOiBQcm92aWRlcjxDcmVkZW50aWFscz47XG4gIC8qKlxuICAgKiBSZXNvbHZlZCB2YWx1ZSBmb3IgaW5wdXQgY29uZmlnIHtAbGluayBBd3NBdXRoSW5wdXRDb25maWcuc2lnbmVyfVxuICAgKi9cbiAgc2lnbmVyOiBQcm92aWRlcjxSZXF1ZXN0U2lnbmVyPjtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCBjb25maWcge0BsaW5rIEF3c0F1dGhJbnB1dENvbmZpZy5zaWduaW5nRXNjYXBlUGF0aH1cbiAgICovXG4gIHNpZ25pbmdFc2NhcGVQYXRoOiBib29sZWFuO1xuICAvKipcbiAgICogUmVzb2x2ZWQgdmFsdWUgZm9yIGlucHV0IGNvbmZpZyB7QGxpbmsgQXdzQXV0aElucHV0Q29uZmlnLnN5c3RlbUNsb2NrT2Zmc2V0fVxuICAgKi9cbiAgc3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTaWdWNEF1dGhSZXNvbHZlZENvbmZpZyBleHRlbmRzIEF3c0F1dGhSZXNvbHZlZENvbmZpZyB7fVxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZUF3c0F1dGhDb25maWcgPSA8VD4oXG4gIGlucHV0OiBUICYgQXdzQXV0aElucHV0Q29uZmlnICYgUHJldmlvdXNseVJlc29sdmVkXG4pOiBUICYgQXdzQXV0aFJlc29sdmVkQ29uZmlnID0+IHtcbiAgY29uc3Qgbm9ybWFsaXplZENyZWRzID0gaW5wdXQuY3JlZGVudGlhbHNcbiAgICA/IG5vcm1hbGl6ZUNyZWRlbnRpYWxQcm92aWRlcihpbnB1dC5jcmVkZW50aWFscylcbiAgICA6IGlucHV0LmNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXIoaW5wdXQgYXMgYW55KTtcbiAgY29uc3QgeyBzaWduaW5nRXNjYXBlUGF0aCA9IHRydWUsIHN5c3RlbUNsb2NrT2Zmc2V0ID0gaW5wdXQuc3lzdGVtQ2xvY2tPZmZzZXQgfHwgMCwgc2hhMjU2IH0gPSBpbnB1dDtcbiAgbGV0IHNpZ25lcjogUHJvdmlkZXI8UmVxdWVzdFNpZ25lcj47XG4gIGlmIChpbnB1dC5zaWduZXIpIHtcbiAgICAvL2lmIHNpZ25lciBpcyBzdXBwbGllZCBieSB1c2VyLCBub3JtYWxpemUgaXQgdG8gYSBmdW5jdGlvbiByZXR1cm5pbmcgYSBwcm9taXNlIGZvciBzaWduZXIuXG4gICAgc2lnbmVyID0gbm9ybWFsaXplUHJvdmlkZXIoaW5wdXQuc2lnbmVyKTtcbiAgfSBlbHNlIHtcbiAgICAvL2NvbnN0cnVjdCBhIHByb3ZpZGVyIGluZmVycmluZyBzaWduaW5nIGZyb20gcmVnaW9uLlxuICAgIHNpZ25lciA9ICgpID0+XG4gICAgICBub3JtYWxpemVQcm92aWRlcihpbnB1dC5yZWdpb24pKClcbiAgICAgICAgLnRoZW4oYXN5bmMgKHJlZ2lvbikgPT4gWyhhd2FpdCBpbnB1dC5yZWdpb25JbmZvUHJvdmlkZXIocmVnaW9uKSkgfHwge30sIHJlZ2lvbl0gYXMgW1JlZ2lvbkluZm8sIHN0cmluZ10pXG4gICAgICAgIC50aGVuKChbcmVnaW9uSW5mbywgcmVnaW9uXSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgc2lnbmluZ1JlZ2lvbiwgc2lnbmluZ1NlcnZpY2UgfSA9IHJlZ2lvbkluZm87XG4gICAgICAgICAgLy91cGRhdGUgY2xpZW50J3Mgc2luZ2luZyByZWdpb24gYW5kIHNpZ25pbmcgc2VydmljZSBjb25maWcgaWYgdGhleSBhcmUgcmVzb2x2ZWQuXG4gICAgICAgICAgLy9zaWduaW5nIHJlZ2lvbiByZXNvbHZpbmcgb3JkZXI6IHVzZXIgc3VwcGxpZWQgc2lnbmluZ1JlZ2lvbiAtPiBlbmRwb2ludHMuanNvbiBpbmZlcnJlZCByZWdpb24gLT4gY2xpZW50IHJlZ2lvblxuICAgICAgICAgIGlucHV0LnNpZ25pbmdSZWdpb24gPSBpbnB1dC5zaWduaW5nUmVnaW9uIHx8IHNpZ25pbmdSZWdpb24gfHwgcmVnaW9uO1xuICAgICAgICAgIC8vc2lnbmluZyBuYW1lIHJlc29sdmluZyBvcmRlcjpcbiAgICAgICAgICAvL3VzZXIgc3VwcGxpZWQgc2lnbmluZ05hbWUgLT4gZW5kcG9pbnRzLmpzb24gaW5mZXJyZWQgKGNyZWRlbnRpYWwgc2NvcGUgLT4gbW9kZWwgYXJuTmFtZXNwYWNlKSAtPiBtb2RlbCBzZXJ2aWNlIGlkXG4gICAgICAgICAgaW5wdXQuc2lnbmluZ05hbWUgPSBpbnB1dC5zaWduaW5nTmFtZSB8fCBzaWduaW5nU2VydmljZSB8fCBpbnB1dC5zZXJ2aWNlSWQ7XG5cbiAgICAgICAgICByZXR1cm4gbmV3IFNpZ25hdHVyZVY0KHtcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiBub3JtYWxpemVkQ3JlZHMsXG4gICAgICAgICAgICByZWdpb246IGlucHV0LnNpZ25pbmdSZWdpb24sXG4gICAgICAgICAgICBzZXJ2aWNlOiBpbnB1dC5zaWduaW5nTmFtZSxcbiAgICAgICAgICAgIHNoYTI1NixcbiAgICAgICAgICAgIHVyaUVzY2FwZVBhdGg6IHNpZ25pbmdFc2NhcGVQYXRoLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4uaW5wdXQsXG4gICAgc3lzdGVtQ2xvY2tPZmZzZXQsXG4gICAgc2lnbmluZ0VzY2FwZVBhdGgsXG4gICAgY3JlZGVudGlhbHM6IG5vcm1hbGl6ZWRDcmVkcyxcbiAgICBzaWduZXIsXG4gIH07XG59O1xuXG4vLyBUT0RPOiByZWR1Y2UgY29kZSBkdXBsaWNhdGlvblxuZXhwb3J0IGNvbnN0IHJlc29sdmVTaWdWNEF1dGhDb25maWcgPSA8VD4oXG4gIGlucHV0OiBUICYgU2lnVjRBdXRoSW5wdXRDb25maWcgJiBTaWdWNFByZXZpb3VzbHlSZXNvbHZlZFxuKTogVCAmIFNpZ1Y0QXV0aFJlc29sdmVkQ29uZmlnID0+IHtcbiAgY29uc3Qgbm9ybWFsaXplZENyZWRzID0gaW5wdXQuY3JlZGVudGlhbHNcbiAgICA/IG5vcm1hbGl6ZUNyZWRlbnRpYWxQcm92aWRlcihpbnB1dC5jcmVkZW50aWFscylcbiAgICA6IGlucHV0LmNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXIoaW5wdXQgYXMgYW55KTtcbiAgY29uc3QgeyBzaWduaW5nRXNjYXBlUGF0aCA9IHRydWUsIHN5c3RlbUNsb2NrT2Zmc2V0ID0gaW5wdXQuc3lzdGVtQ2xvY2tPZmZzZXQgfHwgMCwgc2hhMjU2IH0gPSBpbnB1dDtcbiAgbGV0IHNpZ25lcjogUHJvdmlkZXI8UmVxdWVzdFNpZ25lcj47XG4gIGlmIChpbnB1dC5zaWduZXIpIHtcbiAgICAvL2lmIHNpZ25lciBpcyBzdXBwbGllZCBieSB1c2VyLCBub3JtYWxpemUgaXQgdG8gYSBmdW5jdGlvbiByZXR1cm5pbmcgYSBwcm9taXNlIGZvciBzaWduZXIuXG4gICAgc2lnbmVyID0gbm9ybWFsaXplUHJvdmlkZXIoaW5wdXQuc2lnbmVyKTtcbiAgfSBlbHNlIHtcbiAgICBzaWduZXIgPSBub3JtYWxpemVQcm92aWRlcihuZXcgU2lnbmF0dXJlVjQoe1xuICAgICAgY3JlZGVudGlhbHM6IG5vcm1hbGl6ZWRDcmVkcyxcbiAgICAgIHJlZ2lvbjogaW5wdXQucmVnaW9uLFxuICAgICAgc2VydmljZTogaW5wdXQuc2lnbmluZ05hbWUsXG4gICAgICBzaGEyNTYsXG4gICAgICB1cmlFc2NhcGVQYXRoOiBzaWduaW5nRXNjYXBlUGF0aCxcbiAgICB9KSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIC4uLmlucHV0LFxuICAgIHN5c3RlbUNsb2NrT2Zmc2V0LFxuICAgIHNpZ25pbmdFc2NhcGVQYXRoLFxuICAgIGNyZWRlbnRpYWxzOiBub3JtYWxpemVkQ3JlZHMsXG4gICAgc2lnbmVyLFxuICB9O1xufTtcblxuY29uc3Qgbm9ybWFsaXplUHJvdmlkZXIgPSA8VD4oaW5wdXQ6IFQgfCBQcm92aWRlcjxUPik6IFByb3ZpZGVyPFQ+ID0+IHtcbiAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKGlucHV0KTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH1cbiAgcmV0dXJuIGlucHV0IGFzIFByb3ZpZGVyPFQ+O1xufTtcblxuY29uc3Qgbm9ybWFsaXplQ3JlZGVudGlhbFByb3ZpZGVyID0gKGNyZWRlbnRpYWxzOiBDcmVkZW50aWFscyB8IFByb3ZpZGVyPENyZWRlbnRpYWxzPik6IFByb3ZpZGVyPENyZWRlbnRpYWxzPiA9PiB7XG4gIGlmICh0eXBlb2YgY3JlZGVudGlhbHMgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBtZW1vaXplKFxuICAgICAgY3JlZGVudGlhbHMsXG4gICAgICAoY3JlZGVudGlhbHMpID0+XG4gICAgICAgIGNyZWRlbnRpYWxzLmV4cGlyYXRpb24gIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBjcmVkZW50aWFscy5leHBpcmF0aW9uLmdldFRpbWUoKSAtIERhdGUubm93KCkgPCBDUkVERU5USUFMX0VYUElSRV9XSU5ET1csXG4gICAgICAoY3JlZGVudGlhbHMpID0+IGNyZWRlbnRpYWxzLmV4cGlyYXRpb24gIT09IHVuZGVmaW5lZFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG5vcm1hbGl6ZVByb3ZpZGVyKGNyZWRlbnRpYWxzKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkRBQWlDO0FBQ2pDLHVEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9taWRkbGV3YXJlXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst isClockSkewed = (newServerTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >= 300000;\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nfunction awsAuthMiddleware(options) {\n    return (next, context) => async function (args) {\n        if (!protocol_http_1.HttpRequest.isInstance(args.request))\n            return next(args);\n        const signer = typeof options.signer === \"function\" ? await options.signer() : options.signer;\n        const output = await next({\n            ...args,\n            request: await signer.sign(args.request, {\n                signingDate: new Date(Date.now() + options.systemClockOffset),\n                signingRegion: context[\"signing_region\"],\n                signingService: context[\"signing_service\"],\n            }),\n        });\n        const { headers } = output.response;\n        const dateHeader = headers && (headers.date || headers.Date);\n        if (dateHeader) {\n            const serverTime = Date.parse(dateHeader);\n            if (isClockSkewed(serverTime, options.systemClockOffset)) {\n                options.systemClockOffset = serverTime - Date.now();\n            }\n        }\n        return output;\n    };\n}\nexports.awsAuthMiddleware = awsAuthMiddleware;\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBEQUFxRDtBQWFyRCxNQUFNLGFBQWEsR0FBRyxDQUFDLGFBQXFCLEVBQUUsaUJBQXlCLEVBQUUsRUFBRSxDQUN6RSxJQUFJLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsYUFBYSxDQUFDLElBQUksTUFBTSxDQUFDO0FBRXhGLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxpQkFBeUIsRUFBRSxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLGlCQUFpQixDQUFDLENBQUM7QUFFckcsU0FBZ0IsaUJBQWlCLENBQy9CLE9BQThCO0lBRTlCLE9BQU8sQ0FBQyxJQUFvQyxFQUFFLE9BQWdDLEVBQWtDLEVBQUUsQ0FDaEgsS0FBSyxXQUFXLElBQXFDO1FBQ25ELElBQUksQ0FBQywyQkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0QsTUFBTSxNQUFNLEdBQUcsT0FBTyxPQUFPLENBQUMsTUFBTSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBTSxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDOUYsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUM7WUFDeEIsR0FBRyxJQUFJO1lBQ1AsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUN2QyxXQUFXLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztnQkFDN0QsYUFBYSxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztnQkFDeEMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQzthQUMzQyxDQUFDO1NBQ0gsQ0FBQyxDQUFDO1FBRUgsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQyxRQUFlLENBQUM7UUFDM0MsTUFBTSxVQUFVLEdBQUcsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0QsSUFBSSxVQUFVLEVBQUU7WUFDZCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzFDLElBQUksYUFBYSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFBRTtnQkFDeEQsT0FBTyxDQUFDLGlCQUFpQixHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDckQ7U0FDRjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQztBQUNOLENBQUM7QUEzQkQsOENBMkJDO0FBRVksUUFBQSx3QkFBd0IsR0FBOEI7SUFDakUsSUFBSSxFQUFFLG1CQUFtQjtJQUN6QixJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDO0lBQzlCLFFBQVEsRUFBRSxPQUFPO0lBQ2pCLFlBQVksRUFBRSxpQkFBaUI7SUFDL0IsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUssTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLE9BQThCLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQ3hGLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxhQUFhLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUUsZ0NBQXdCLENBQUMsQ0FBQztJQUNsRixDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBSlUsUUFBQSxnQkFBZ0Isb0JBSTFCO0FBRVUsUUFBQSxrQkFBa0IsR0FBRyx3QkFBZ0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEZpbmFsaXplSGFuZGxlcixcbiAgRmluYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBGaW5hbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIEZpbmFsaXplUmVxdWVzdE1pZGRsZXdhcmUsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBQbHVnZ2FibGUsXG4gIFJlbGF0aXZlTWlkZGxld2FyZU9wdGlvbnMsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBBd3NBdXRoUmVzb2x2ZWRDb25maWcgfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuXG5jb25zdCBpc0Nsb2NrU2tld2VkID0gKG5ld1NlcnZlclRpbWU6IG51bWJlciwgc3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcikgPT5cbiAgTWF0aC5hYnMoZ2V0U2tld0NvcnJlY3RlZERhdGUoc3lzdGVtQ2xvY2tPZmZzZXQpLmdldFRpbWUoKSAtIG5ld1NlcnZlclRpbWUpID49IDMwMDAwMDtcblxuY29uc3QgZ2V0U2tld0NvcnJlY3RlZERhdGUgPSAoc3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcikgPT4gbmV3IERhdGUoRGF0ZS5ub3coKSArIHN5c3RlbUNsb2NrT2Zmc2V0KTtcblxuZXhwb3J0IGZ1bmN0aW9uIGF3c0F1dGhNaWRkbGV3YXJlPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3Q+KFxuICBvcHRpb25zOiBBd3NBdXRoUmVzb2x2ZWRDb25maWdcbik6IEZpbmFsaXplUmVxdWVzdE1pZGRsZXdhcmU8SW5wdXQsIE91dHB1dD4ge1xuICByZXR1cm4gKG5leHQ6IEZpbmFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PiwgY29udGV4dDogSGFuZGxlckV4ZWN1dGlvbkNvbnRleHQpOiBGaW5hbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4gPT5cbiAgICBhc3luYyBmdW5jdGlvbiAoYXJnczogRmluYWxpemVIYW5kbGVyQXJndW1lbnRzPElucHV0Pik6IFByb21pc2U8RmluYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+IHtcbiAgICAgIGlmICghSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShhcmdzLnJlcXVlc3QpKSByZXR1cm4gbmV4dChhcmdzKTtcbiAgICAgIGNvbnN0IHNpZ25lciA9IHR5cGVvZiBvcHRpb25zLnNpZ25lciA9PT0gXCJmdW5jdGlvblwiID8gYXdhaXQgb3B0aW9ucy5zaWduZXIoKSA6IG9wdGlvbnMuc2lnbmVyO1xuICAgICAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgbmV4dCh7XG4gICAgICAgIC4uLmFyZ3MsXG4gICAgICAgIHJlcXVlc3Q6IGF3YWl0IHNpZ25lci5zaWduKGFyZ3MucmVxdWVzdCwge1xuICAgICAgICAgIHNpZ25pbmdEYXRlOiBuZXcgRGF0ZShEYXRlLm5vdygpICsgb3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCksXG4gICAgICAgICAgc2lnbmluZ1JlZ2lvbjogY29udGV4dFtcInNpZ25pbmdfcmVnaW9uXCJdLFxuICAgICAgICAgIHNpZ25pbmdTZXJ2aWNlOiBjb250ZXh0W1wic2lnbmluZ19zZXJ2aWNlXCJdLFxuICAgICAgICB9KSxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCB7IGhlYWRlcnMgfSA9IG91dHB1dC5yZXNwb25zZSBhcyBhbnk7XG4gICAgICBjb25zdCBkYXRlSGVhZGVyID0gaGVhZGVycyAmJiAoaGVhZGVycy5kYXRlIHx8IGhlYWRlcnMuRGF0ZSk7XG4gICAgICBpZiAoZGF0ZUhlYWRlcikge1xuICAgICAgICBjb25zdCBzZXJ2ZXJUaW1lID0gRGF0ZS5wYXJzZShkYXRlSGVhZGVyKTtcbiAgICAgICAgaWYgKGlzQ2xvY2tTa2V3ZWQoc2VydmVyVGltZSwgb3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCkpIHtcbiAgICAgICAgICBvcHRpb25zLnN5c3RlbUNsb2NrT2Zmc2V0ID0gc2VydmVyVGltZSAtIERhdGUubm93KCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgYXdzQXV0aE1pZGRsZXdhcmVPcHRpb25zOiBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zID0ge1xuICBuYW1lOiBcImF3c0F1dGhNaWRkbGV3YXJlXCIsXG4gIHRhZ3M6IFtcIlNJR05BVFVSRVwiLCBcIkFXU0FVVEhcIl0sXG4gIHJlbGF0aW9uOiBcImFmdGVyXCIsXG4gIHRvTWlkZGxld2FyZTogXCJyZXRyeU1pZGRsZXdhcmVcIixcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QXdzQXV0aFBsdWdpbiA9IChvcHRpb25zOiBBd3NBdXRoUmVzb2x2ZWRDb25maWcpOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkUmVsYXRpdmVUbyhhd3NBdXRoTWlkZGxld2FyZShvcHRpb25zKSwgYXdzQXV0aE1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0U2lnVjRBdXRoUGx1Z2luID0gZ2V0QXdzQXV0aFBsdWdpbjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            //@ts-ignore\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            //@ts-ignore\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    /**\n     * Get a final list of middleware in the order of being executed in the resolved handler.\n     */\n    const getMiddlewareList = () => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            // TODO: Replace it with Array.flat();\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain.map((entry) => entry.middleware);\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(exports.constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(exports.constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList().reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MiddlewareStack\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNERBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vTWlkZGxld2FyZVN0YWNrXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBMEJBLFNBQWdCLHNCQUFzQixDQUNwQyxLQUFvRDtJQUVwRCxPQUFPO1FBQ0wsR0FBRyxLQUFLO1FBQ1IsZUFBZSxFQUFFLE9BQU8sS0FBSyxDQUFDLGVBQWUsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLGVBQWU7S0FDL0csQ0FBQztBQUNKLENBQUM7QUFQRCx3REFPQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyLCBVc2VyQWdlbnQgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmV4cG9ydCBpbnRlcmZhY2UgVXNlckFnZW50SW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIGN1c3RvbSB1c2VyIGFnZW50IGhlYWRlciB0aGF0IHdvdWxkIGJlIGFwcGVuZGVkIHRvIGRlZmF1bHQgb25lXG4gICAqL1xuICBjdXN0b21Vc2VyQWdlbnQ/OiBzdHJpbmcgfCBVc2VyQWdlbnQ7XG59XG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyOiBQcm92aWRlcjxVc2VyQWdlbnQ+O1xuICBydW50aW1lOiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBwcm92aWRlciBwb3B1bGF0aW5nIGRlZmF1bHQgdHJhY2tpbmcgaW5mb3JtYXRpb24gdG8gYmUgc2VudCB3aXRoIGB1c2VyLWFnZW50YCwgYHgtYW16LXVzZXItYWdlbnRgIGhlYWRlci5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBkZWZhdWx0VXNlckFnZW50UHJvdmlkZXI6IFByb3ZpZGVyPFVzZXJBZ2VudD47XG4gIC8qKlxuICAgKiBUaGUgY3VzdG9tIHVzZXIgYWdlbnQgaGVhZGVyIHRoYXQgd291bGQgYmUgYXBwZW5kZWQgdG8gZGVmYXVsdCBvbmVcbiAgICovXG4gIGN1c3RvbVVzZXJBZ2VudD86IFVzZXJBZ2VudDtcbiAgLyoqXG4gICAqIFRoZSBydW50aW1lIGVudmlyb25tZW50XG4gICAqL1xuICBydW50aW1lOiBzdHJpbmc7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVVzZXJBZ2VudENvbmZpZzxUPihcbiAgaW5wdXQ6IFQgJiBQcmV2aW91c2x5UmVzb2x2ZWQgJiBVc2VyQWdlbnRJbnB1dENvbmZpZ1xuKTogVCAmIFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICBjdXN0b21Vc2VyQWdlbnQ6IHR5cGVvZiBpbnB1dC5jdXN0b21Vc2VyQWdlbnQgPT09IFwic3RyaW5nXCIgPyBbW2lucHV0LmN1c3RvbVVzZXJBZ2VudF1dIDogaW5wdXQuY3VzdG9tVXNlckFnZW50LFxuICB9O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_REGEX = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLFVBQVUsR0FBRyxZQUFZLENBQUM7QUFFMUIsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV0QyxRQUFBLEtBQUssR0FBRyxHQUFHLENBQUM7QUFFWixRQUFBLGVBQWUsR0FBRyx3Q0FBd0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBVU0VSX0FHRU5UID0gXCJ1c2VyLWFnZW50XCI7XG5cbmV4cG9ydCBjb25zdCBYX0FNWl9VU0VSX0FHRU5UID0gXCJ4LWFtei11c2VyLWFnZW50XCI7XG5cbmV4cG9ydCBjb25zdCBTUEFDRSA9IFwiIFwiO1xuXG5leHBvcnQgY29uc3QgVUFfRVNDQVBFX1JFR0VYID0gL1teXFwhXFwjXFwkXFwlXFwmXFwnXFwqXFwrXFwtXFwuXFxeXFxfXFxgXFx8XFx+XFxkXFx3XS9nO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./user-agent-middleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkRBQWlDO0FBQ2pDLGtFQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91c2VyLWFnZW50LW1pZGRsZXdhcmVcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    // Set value to AWS-specific user agent header\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(constants_1.SPACE);\n    // Get value to be sent with non-AWS-specific user agent header.\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item === null || item === void 0 ? void 0 : item.replace(constants_1.UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.userAgentMiddleware(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1hZ2VudC1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3VzZXItYWdlbnQtbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwREFBcUQ7QUFjckQsMkNBQW1GO0FBRW5GOzs7Ozs7Ozs7OztHQVdHO0FBQ0ksTUFBTSxtQkFBbUIsR0FDOUIsQ0FBQyxPQUFnQyxFQUFFLEVBQUUsQ0FDckMsQ0FDRSxJQUE0QixFQUM1QixPQUFnQyxFQUNSLEVBQUUsQ0FDNUIsS0FBSyxFQUFFLElBQWdDLEVBQXVDLEVBQUU7O0lBQzlFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDekIsSUFBSSxDQUFDLDJCQUFXLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hELE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUM7SUFDNUIsTUFBTSxTQUFTLEdBQUcsQ0FBQSxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxTQUFTLDBDQUFFLEdBQUcsQ0FBQyxlQUFlLENBQUMsS0FBSSxFQUFFLENBQUM7SUFDakUsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLE1BQU0sT0FBTyxDQUFDLHdCQUF3QixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekYsTUFBTSxlQUFlLEdBQUcsQ0FBQSxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxlQUFlLDBDQUFFLEdBQUcsQ0FBQyxlQUFlLENBQUMsS0FBSSxFQUFFLENBQUM7SUFFN0UsOENBQThDO0lBQzlDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxHQUFHLGdCQUFnQixFQUFFLEdBQUcsU0FBUyxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFLLENBQUMsQ0FBQztJQUM5RixnRUFBZ0U7SUFDaEUsTUFBTSxhQUFhLEdBQUc7UUFDcEIsR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdkUsR0FBRyxlQUFlO0tBQ25CLENBQUMsSUFBSSxDQUFDLGlCQUFLLENBQUMsQ0FBQztJQUVkLElBQUksT0FBTyxDQUFDLE9BQU8sS0FBSyxTQUFTLEVBQUU7UUFDakMsSUFBSSxhQUFhLEVBQUU7WUFDakIsT0FBTyxDQUFDLDRCQUFnQixDQUFDLEdBQUcsT0FBTyxDQUFDLDRCQUFnQixDQUFDO2dCQUNuRCxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsc0JBQVUsQ0FBQyxJQUFJLGFBQWEsRUFBRTtnQkFDM0MsQ0FBQyxDQUFDLGFBQWEsQ0FBQztTQUNuQjtRQUNELE9BQU8sQ0FBQyxzQkFBVSxDQUFDLEdBQUcsaUJBQWlCLENBQUM7S0FDekM7U0FBTTtRQUNMLE9BQU8sQ0FBQyw0QkFBZ0IsQ0FBQyxHQUFHLGlCQUFpQixDQUFDO0tBQy9DO0lBRUQsT0FBTyxJQUFJLENBQUM7UUFDVixHQUFHLElBQUk7UUFDUCxPQUFPO0tBQ1IsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBckNTLFFBQUEsbUJBQW1CLHVCQXFDNUI7QUFFSjs7OztHQUlHO0FBQ0gsTUFBTSxlQUFlLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxPQUFPLENBQWdCLEVBQVUsRUFBRTtJQUNqRSxNQUFNLG9CQUFvQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0MsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLGtDQUFrQztJQUMxRixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3RELElBQUksTUFBTSxLQUFLLEtBQUssRUFBRTtRQUNwQixNQUFNLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO0tBQy9CO0lBQ0QsT0FBTyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDO1NBQzdCLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1NBQ3pDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLE9BQU8sQ0FBQywyQkFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLENBQUMsQ0FBQztBQUVXLFFBQUEsNkJBQTZCLEdBQTJDO0lBQ25GLElBQUksRUFBRSx3QkFBd0I7SUFDOUIsSUFBSSxFQUFFLE9BQU87SUFDYixRQUFRLEVBQUUsS0FBSztJQUNmLElBQUksRUFBRSxDQUFDLGdCQUFnQixFQUFFLFlBQVksQ0FBQztJQUN0QyxRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFSyxNQUFNLGtCQUFrQixHQUFHLENBQUMsTUFBK0IsRUFBdUIsRUFBRSxDQUFDLENBQUM7SUFDM0YsWUFBWSxFQUFFLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDNUIsV0FBVyxDQUFDLEdBQUcsQ0FBQywyQkFBbUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxxQ0FBNkIsQ0FBQyxDQUFDO0lBQzlFLENBQUM7Q0FDRixDQUFDLENBQUM7QUFKVSxRQUFBLGtCQUFrQixzQkFJNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBBYnNvbHV0ZUxvY2F0aW9uLFxuICBCdWlsZEhhbmRsZXIsXG4gIEJ1aWxkSGFuZGxlckFyZ3VtZW50cyxcbiAgQnVpbGRIYW5kbGVyT3B0aW9ucyxcbiAgQnVpbGRIYW5kbGVyT3V0cHV0LFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgTWV0YWRhdGFCZWFyZXIsXG4gIFBsdWdnYWJsZSxcbiAgVXNlckFnZW50UGFpcixcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcbmltcG9ydCB7IFNQQUNFLCBVQV9FU0NBUEVfUkVHRVgsIFVTRVJfQUdFTlQsIFhfQU1aX1VTRVJfQUdFTlQgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLyoqXG4gKiBCdWlsZCB1c2VyIGFnZW50IGhlYWRlciBzZWN0aW9ucyBmcm9tOlxuICogMS4gcnVudGltZS1zcGVjaWZpYyBkZWZhdWx0IHVzZXIgYWdlbnQgcHJvdmlkZXI7XG4gKiAyLiBjdXN0b20gdXNlciBhZ2VudCBmcm9tIGBjdXN0b21Vc2VyQWdlbnRgIGNsaWVudCBjb25maWc7XG4gKiAzLiBoYW5kbGVyIGV4ZWN1dGlvbiBjb250ZXh0IHNldCBieSBpbnRlcm5hbCBTREsgY29tcG9uZW50cztcbiAqIFRoZSBidWlsdCB1c2VyIGFnZW50IHdpbGwgYmUgc2V0IHRvIGB4LWFtei11c2VyLWFnZW50YCBoZWFkZXIgZm9yIEFMTCB0aGVcbiAqIHJ1bnRpbWVzLlxuICogUGxlYXNlIG5vdGUgdGhhdCBhbnkgb3ZlcnJpZGUgdG8gdGhlIGB1c2VyLWFnZW50YCBvciBgeC1hbXotdXNlci1hZ2VudGAgaGVhZGVyXG4gKiBpbiB0aGUgSFRUUCByZXF1ZXN0IGlzIGRpc2NvdXJhZ2VkLiBQbGVhc2UgdXNlIGBjdXN0b21Vc2VyQWdlbnRgIGNsaWVudFxuICogY29uZmlnIG9yIG1pZGRsZXdhcmUgc2V0dGluZyB0aGUgYHVzZXJBZ2VudGAgY29udGV4dCB0byBnZW5lcmF0ZSBkZXNpcmVkIHVzZXJcbiAqIGFnZW50LlxuICovXG5leHBvcnQgY29uc3QgdXNlckFnZW50TWlkZGxld2FyZSA9XG4gIChvcHRpb25zOiBVc2VyQWdlbnRSZXNvbHZlZENvbmZpZykgPT5cbiAgPE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyPihcbiAgICBuZXh0OiBCdWlsZEhhbmRsZXI8YW55LCBhbnk+LFxuICAgIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0XG4gICk6IEJ1aWxkSGFuZGxlcjxhbnksIGFueT4gPT5cbiAgYXN5bmMgKGFyZ3M6IEJ1aWxkSGFuZGxlckFyZ3VtZW50czxhbnk+KTogUHJvbWlzZTxCdWlsZEhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgICBpZiAoIUh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UocmVxdWVzdCkpIHJldHVybiBuZXh0KGFyZ3MpO1xuICAgIGNvbnN0IHsgaGVhZGVycyB9ID0gcmVxdWVzdDtcbiAgICBjb25zdCB1c2VyQWdlbnQgPSBjb250ZXh0Py51c2VyQWdlbnQ/Lm1hcChlc2NhcGVVc2VyQWdlbnQpIHx8IFtdO1xuICAgIGNvbnN0IGRlZmF1bHRVc2VyQWdlbnQgPSAoYXdhaXQgb3B0aW9ucy5kZWZhdWx0VXNlckFnZW50UHJvdmlkZXIoKSkubWFwKGVzY2FwZVVzZXJBZ2VudCk7XG4gICAgY29uc3QgY3VzdG9tVXNlckFnZW50ID0gb3B0aW9ucz8uY3VzdG9tVXNlckFnZW50Py5tYXAoZXNjYXBlVXNlckFnZW50KSB8fCBbXTtcblxuICAgIC8vIFNldCB2YWx1ZSB0byBBV1Mtc3BlY2lmaWMgdXNlciBhZ2VudCBoZWFkZXJcbiAgICBjb25zdCBzZGtVc2VyQWdlbnRWYWx1ZSA9IFsuLi5kZWZhdWx0VXNlckFnZW50LCAuLi51c2VyQWdlbnQsIC4uLmN1c3RvbVVzZXJBZ2VudF0uam9pbihTUEFDRSk7XG4gICAgLy8gR2V0IHZhbHVlIHRvIGJlIHNlbnQgd2l0aCBub24tQVdTLXNwZWNpZmljIHVzZXIgYWdlbnQgaGVhZGVyLlxuICAgIGNvbnN0IG5vcm1hbFVBVmFsdWUgPSBbXG4gICAgICAuLi5kZWZhdWx0VXNlckFnZW50LmZpbHRlcigoc2VjdGlvbikgPT4gc2VjdGlvbi5zdGFydHNXaXRoKFwiYXdzLXNkay1cIikpLFxuICAgICAgLi4uY3VzdG9tVXNlckFnZW50LFxuICAgIF0uam9pbihTUEFDRSk7XG5cbiAgICBpZiAob3B0aW9ucy5ydW50aW1lICE9PSBcImJyb3dzZXJcIikge1xuICAgICAgaWYgKG5vcm1hbFVBVmFsdWUpIHtcbiAgICAgICAgaGVhZGVyc1tYX0FNWl9VU0VSX0FHRU5UXSA9IGhlYWRlcnNbWF9BTVpfVVNFUl9BR0VOVF1cbiAgICAgICAgICA/IGAke2hlYWRlcnNbVVNFUl9BR0VOVF19ICR7bm9ybWFsVUFWYWx1ZX1gXG4gICAgICAgICAgOiBub3JtYWxVQVZhbHVlO1xuICAgICAgfVxuICAgICAgaGVhZGVyc1tVU0VSX0FHRU5UXSA9IHNka1VzZXJBZ2VudFZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBoZWFkZXJzW1hfQU1aX1VTRVJfQUdFTlRdID0gc2RrVXNlckFnZW50VmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5leHQoe1xuICAgICAgLi4uYXJncyxcbiAgICAgIHJlcXVlc3QsXG4gICAgfSk7XG4gIH07XG5cbi8qKlxuICogRXNjYXBlIHRoZSBlYWNoIHBhaXIgYWNjb3JkaW5nIHRvIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM1MjM0IGFuZCBqb2luIHRoZSBwYWlyIHdpdGggcGF0dGVybiBgbmFtZS92ZXJzaW9uYC5cbiAqIFVzZXIgYWdlbnQgbmFtZSBtYXkgaW5jbHVkZSBwcmVmaXggbGlrZSBgbWQvYCwgYGFwaS9gLCBgb3MvYCBldGMuLCB3ZSBzaG91bGQgbm90IGVzY2FwZSB0aGUgYC9gIGFmdGVyIHRoZSBwcmVmaXguXG4gKiBAcHJpdmF0ZVxuICovXG5jb25zdCBlc2NhcGVVc2VyQWdlbnQgPSAoW25hbWUsIHZlcnNpb25dOiBVc2VyQWdlbnRQYWlyKTogc3RyaW5nID0+IHtcbiAgY29uc3QgcHJlZml4U2VwYXJhdG9ySW5kZXggPSBuYW1lLmluZGV4T2YoXCIvXCIpO1xuICBjb25zdCBwcmVmaXggPSBuYW1lLnN1YnN0cmluZygwLCBwcmVmaXhTZXBhcmF0b3JJbmRleCk7IC8vIElmIG5vIHByZWZpeCwgcHJlZml4IGlzIGp1c3QgXCJcIlxuICBsZXQgdWFOYW1lID0gbmFtZS5zdWJzdHJpbmcocHJlZml4U2VwYXJhdG9ySW5kZXggKyAxKTtcbiAgaWYgKHByZWZpeCA9PT0gXCJhcGlcIikge1xuICAgIHVhTmFtZSA9IHVhTmFtZS50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBbcHJlZml4LCB1YU5hbWUsIHZlcnNpb25dXG4gICAgLmZpbHRlcigoaXRlbSkgPT4gaXRlbSAmJiBpdGVtLmxlbmd0aCA+IDApXG4gICAgLm1hcCgoaXRlbSkgPT4gaXRlbT8ucmVwbGFjZShVQV9FU0NBUEVfUkVHRVgsIFwiX1wiKSlcbiAgICAuam9pbihcIi9cIik7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlckFnZW50TWlkZGxld2FyZU9wdGlvbnM6IEJ1aWxkSGFuZGxlck9wdGlvbnMgJiBBYnNvbHV0ZUxvY2F0aW9uID0ge1xuICBuYW1lOiBcImdldFVzZXJBZ2VudE1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJidWlsZFwiLFxuICBwcmlvcml0eTogXCJsb3dcIixcbiAgdGFnczogW1wiU0VUX1VTRVJfQUdFTlRcIiwgXCJVU0VSX0FHRU5UXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyQWdlbnRQbHVnaW4gPSAoY29uZmlnOiBVc2VyQWdlbnRSZXNvbHZlZENvbmZpZyk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQodXNlckFnZW50TWlkZGxld2FyZShjb25maWcpLCBnZXRVc2VyQWdlbnRNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => property_provider_1.memoize(property_provider_1.chain(fromEnv_1.fromEnv(environmentVariableSelector), fromSharedConfigFiles_1.fromSharedConfigFiles(configFileSelector, configuration), fromStatic_1.fromStatic(defaultValue)));\nexports.loadConfig = loadConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ0xvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBNEQ7QUFHNUQsdUNBQW1EO0FBQ25ELG1FQUFvRztBQUNwRyw2Q0FBNEQ7QUFxQnJELE1BQU0sVUFBVSxHQUFHLENBQ3hCLEVBQUUsMkJBQTJCLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBNEIsRUFDcEcsZ0JBQW9DLEVBQUUsRUFDekIsRUFBRSxDQUNmLDJCQUFPLENBQ0wseUJBQUssQ0FDSCxpQkFBTyxDQUFDLDJCQUEyQixDQUFDLEVBQ3BDLDZDQUFxQixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxFQUN4RCx1QkFBVSxDQUFDLFlBQVksQ0FBQyxDQUN6QixDQUNGLENBQUM7QUFWUyxRQUFBLFVBQVUsY0FVbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGFpbiwgbWVtb2l6ZSB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgZnJvbUVudiwgR2V0dGVyRnJvbUVudiB9IGZyb20gXCIuL2Zyb21FbnZcIjtcbmltcG9ydCB7IGZyb21TaGFyZWRDb25maWdGaWxlcywgR2V0dGVyRnJvbUNvbmZpZywgU2hhcmVkQ29uZmlnSW5pdCB9IGZyb20gXCIuL2Zyb21TaGFyZWRDb25maWdGaWxlc1wiO1xuaW1wb3J0IHsgZnJvbVN0YXRpYywgRnJvbVN0YXRpY0NvbmZpZyB9IGZyb20gXCIuL2Zyb21TdGF0aWNcIjtcblxuZXhwb3J0IHR5cGUgTG9jYWxDb25maWdPcHRpb25zID0gU2hhcmVkQ29uZmlnSW5pdDtcblxuZXhwb3J0IGludGVyZmFjZSBMb2FkZWRDb25maWdTZWxlY3RvcnM8VD4ge1xuICAvKipcbiAgICogQSBnZXR0ZXIgZnVuY3Rpb24gZ2V0dGluZyB0aGUgY29uZmlnIHZhbHVlcyBmcm9tIGFsbCB0aGUgZW52aXJvbm1lbnRcbiAgICogdmFyaWFibGVzLlxuICAgKi9cbiAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiBHZXR0ZXJGcm9tRW52PFQ+O1xuICAvKipcbiAgICogQSBnZXR0ZXIgZnVuY3Rpb24gZ2V0dGluZyBjb25maWcgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgaW5mZXJyZWRcbiAgICogcHJvZmlsZSBmcm9tIHNoYXJlZCBJTkkgZmlsZXNcbiAgICovXG4gIGNvbmZpZ0ZpbGVTZWxlY3RvcjogR2V0dGVyRnJvbUNvbmZpZzxUPjtcbiAgLyoqXG4gICAqIERlZmF1bHQgdmFsdWUgb3IgZ2V0dGVyXG4gICAqL1xuICBkZWZhdWx0OiBGcm9tU3RhdGljQ29uZmlnPFQ+O1xufVxuXG5leHBvcnQgY29uc3QgbG9hZENvbmZpZyA9IDxUID0gc3RyaW5nPihcbiAgeyBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3IsIGNvbmZpZ0ZpbGVTZWxlY3RvciwgZGVmYXVsdDogZGVmYXVsdFZhbHVlIH06IExvYWRlZENvbmZpZ1NlbGVjdG9yczxUPixcbiAgY29uZmlndXJhdGlvbjogTG9jYWxDb25maWdPcHRpb25zID0ge31cbik6IFByb3ZpZGVyPFQ+ID0+XG4gIG1lbW9pemUoXG4gICAgY2hhaW4oXG4gICAgICBmcm9tRW52KGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvciksXG4gICAgICBmcm9tU2hhcmVkQ29uZmlnRmlsZXMoY29uZmlnRmlsZVNlbGVjdG9yLCBjb25maWd1cmF0aW9uKSxcbiAgICAgIGZyb21TdGF0aWMoZGVmYXVsdFZhbHVlKVxuICAgIClcbiAgKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\n/**\n * Get config value given the environment variable name or getter from\n * environment variable.\n */\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUVudi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tRW52LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUFzRTtBQUt0RTs7O0dBR0c7QUFDSSxNQUFNLE9BQU8sR0FDbEIsQ0FBYSxjQUFnQyxFQUFlLEVBQUUsQ0FDOUQsS0FBSyxJQUFJLEVBQUU7SUFDVCxJQUFJO1FBQ0YsTUFBTSxNQUFNLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMzQyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDeEIsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFDO1NBQ25CO1FBQ0QsT0FBTyxNQUFXLENBQUM7S0FDcEI7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNWLE1BQU0sSUFBSSw0Q0FBd0IsQ0FDaEMsQ0FBQyxDQUFDLE9BQU8sSUFBSSw4REFBOEQsY0FBYyxFQUFFLENBQzVGLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQztBQWRTLFFBQUEsT0FBTyxXQWNoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgR2V0dGVyRnJvbUVudjxUPiA9IChlbnY6IE5vZGVKUy5Qcm9jZXNzRW52KSA9PiBUIHwgdW5kZWZpbmVkO1xuXG4vKipcbiAqIEdldCBjb25maWcgdmFsdWUgZ2l2ZW4gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWUgb3IgZ2V0dGVyIGZyb21cbiAqIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgZnJvbUVudiA9XG4gIDxUID0gc3RyaW5nPihlbnZWYXJTZWxlY3RvcjogR2V0dGVyRnJvbUVudjxUPik6IFByb3ZpZGVyPFQ+ID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29uZmlnID0gZW52VmFyU2VsZWN0b3IocHJvY2Vzcy5lbnYpO1xuICAgICAgaWYgKGNvbmZpZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbmZpZyBhcyBUO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGUubWVzc2FnZSB8fCBgQ2Fubm90IGxvYWQgY29uZmlnIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggZ2V0dGVyOiAke2VudlZhclNlbGVjdG9yfWBcbiAgICAgICk7XG4gICAgfVxuICB9O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst DEFAULT_PROFILE = \"default\";\nexports.ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Get config value from the shared config files with inferred profile name.\n */\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init), profile = process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE } = init;\n    const { configFile, credentialsFile } = await loadedConfig;\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVNoYXJlZENvbmZpZ0ZpbGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21TaGFyZWRDb25maWdGaWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBc0U7QUFDdEUsNEVBS3lDO0FBR3pDLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQztBQUNyQixRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUEwQnpDOztHQUVHO0FBQ0ksTUFBTSxxQkFBcUIsR0FDaEMsQ0FDRSxjQUFtQyxFQUNuQyxFQUFFLGFBQWEsR0FBRyxRQUFRLEVBQUUsR0FBRyxJQUFJLEtBQXVCLEVBQUUsRUFDL0MsRUFBRSxDQUNqQixLQUFLLElBQUksRUFBRTtJQUNULE1BQU0sRUFBRSxZQUFZLEdBQUcsOENBQXFCLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQVcsQ0FBQyxJQUFJLGVBQWUsRUFBRSxHQUFHLElBQUksQ0FBQztJQUVuSCxNQUFNLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxHQUFHLE1BQU0sWUFBWSxDQUFDO0lBRTNELE1BQU0sc0JBQXNCLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5RCxNQUFNLGlCQUFpQixHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEQsTUFBTSxhQUFhLEdBQ2pCLGFBQWEsS0FBSyxRQUFRO1FBQ3hCLENBQUMsQ0FBQyxFQUFFLEdBQUcsc0JBQXNCLEVBQUUsR0FBRyxpQkFBaUIsRUFBRTtRQUNyRCxDQUFDLENBQUMsRUFBRSxHQUFHLGlCQUFpQixFQUFFLEdBQUcsc0JBQXNCLEVBQUUsQ0FBQztJQUUxRCxJQUFJO1FBQ0YsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2xELElBQUksV0FBVyxLQUFLLFNBQVMsRUFBRTtZQUM3QixNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7U0FDbkI7UUFDRCxPQUFPLFdBQVcsQ0FBQztLQUNwQjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsTUFBTSxJQUFJLDRDQUF3QixDQUNoQyxDQUFDLENBQUMsT0FBTztZQUNQLGtDQUFrQyxPQUFPLDRDQUE0QyxjQUFjLEVBQUUsQ0FDeEcsQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBN0JTLFFBQUEscUJBQXFCLHlCQTZCOUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7XG4gIGxvYWRTaGFyZWRDb25maWdGaWxlcyxcbiAgUHJvZmlsZSxcbiAgU2hhcmVkQ29uZmlnRmlsZXMsXG4gIFNoYXJlZENvbmZpZ0luaXQgYXMgQmFzZVNoYXJlZENvbmZpZ0luaXQsXG59IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5jb25zdCBERUZBVUxUX1BST0ZJTEUgPSBcImRlZmF1bHRcIjtcbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaGFyZWRDb25maWdJbml0IGV4dGVuZHMgQmFzZVNoYXJlZENvbmZpZ0luaXQge1xuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyYXRpb24gcHJvZmlsZSB0byB1c2UuXG4gICAqL1xuICBwcm9maWxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcHJlZmVycmVkIHNoYXJlZCBpbmkgZmlsZSB0byBsb2FkIHRoZSBjb25maWcuIFwiY29uZmlnXCIgb3B0aW9uIHJlZmVycyB0b1xuICAgKiB0aGUgc2hhcmVkIGNvbmZpZyBmaWxlKGRlZmF1bHRzIHRvIGB+Ly5hd3MvY29uZmlnYCkuIFwiY3JlZGVudGlhbHNcIiBvcHRpb25cbiAgICogcmVmZXJzIHRvIHRoZSBzaGFyZWQgY3JlZGVudGlhbHMgZmlsZShkZWZhdWx0cyB0byBgfi8uYXdzL2NyZWRlbnRpYWxzYClcbiAgICovXG4gIHByZWZlcnJlZEZpbGU/OiBcImNvbmZpZ1wiIHwgXCJjcmVkZW50aWFsc1wiO1xuXG4gIC8qKlxuICAgKiBBIHByb21pc2UgdGhhdCB3aWxsIGJlIHJlc29sdmVkIHdpdGggbG9hZGVkIGFuZCBwYXJzZWQgY3JlZGVudGlhbHMgZmlsZXMuXG4gICAqIFVzZWQgdG8gYXZvaWQgbG9hZGluZyBzaGFyZWQgY29uZmlnIGZpbGVzIG11bHRpcGxlIHRpbWVzLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGxvYWRlZENvbmZpZz86IFByb21pc2U8U2hhcmVkQ29uZmlnRmlsZXM+O1xufVxuXG5leHBvcnQgdHlwZSBHZXR0ZXJGcm9tQ29uZmlnPFQ+ID0gKHByb2ZpbGU6IFByb2ZpbGUpID0+IFQgfCB1bmRlZmluZWQ7XG5cbi8qKlxuICogR2V0IGNvbmZpZyB2YWx1ZSBmcm9tIHRoZSBzaGFyZWQgY29uZmlnIGZpbGVzIHdpdGggaW5mZXJyZWQgcHJvZmlsZSBuYW1lLlxuICovXG5leHBvcnQgY29uc3QgZnJvbVNoYXJlZENvbmZpZ0ZpbGVzID1cbiAgPFQgPSBzdHJpbmc+KFxuICAgIGNvbmZpZ1NlbGVjdG9yOiBHZXR0ZXJGcm9tQ29uZmlnPFQ+LFxuICAgIHsgcHJlZmVycmVkRmlsZSA9IFwiY29uZmlnXCIsIC4uLmluaXQgfTogU2hhcmVkQ29uZmlnSW5pdCA9IHt9XG4gICk6IFByb3ZpZGVyPFQ+ID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGxvYWRlZENvbmZpZyA9IGxvYWRTaGFyZWRDb25maWdGaWxlcyhpbml0KSwgcHJvZmlsZSA9IHByb2Nlc3MuZW52W0VOVl9QUk9GSUxFXSB8fCBERUZBVUxUX1BST0ZJTEUgfSA9IGluaXQ7XG5cbiAgICBjb25zdCB7IGNvbmZpZ0ZpbGUsIGNyZWRlbnRpYWxzRmlsZSB9ID0gYXdhaXQgbG9hZGVkQ29uZmlnO1xuXG4gICAgY29uc3QgcHJvZmlsZUZyb21DcmVkZW50aWFscyA9IGNyZWRlbnRpYWxzRmlsZVtwcm9maWxlXSB8fCB7fTtcbiAgICBjb25zdCBwcm9maWxlRnJvbUNvbmZpZyA9IGNvbmZpZ0ZpbGVbcHJvZmlsZV0gfHwge307XG4gICAgY29uc3QgbWVyZ2VkUHJvZmlsZSA9XG4gICAgICBwcmVmZXJyZWRGaWxlID09PSBcImNvbmZpZ1wiXG4gICAgICAgID8geyAuLi5wcm9maWxlRnJvbUNyZWRlbnRpYWxzLCAuLi5wcm9maWxlRnJvbUNvbmZpZyB9XG4gICAgICAgIDogeyAuLi5wcm9maWxlRnJvbUNvbmZpZywgLi4ucHJvZmlsZUZyb21DcmVkZW50aWFscyB9O1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvbmZpZ1ZhbHVlID0gY29uZmlnU2VsZWN0b3IobWVyZ2VkUHJvZmlsZSk7XG4gICAgICBpZiAoY29uZmlnVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb25maWdWYWx1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFxuICAgICAgICBlLm1lc3NhZ2UgfHxcbiAgICAgICAgICBgQ2Fubm90IGxvYWQgY29uZmlnIGZvciBwcm9maWxlICR7cHJvZmlsZX0gaW4gU0RLIGNvbmZpZ3VyYXRpb24gZmlsZXMgd2l0aCBnZXR0ZXI6ICR7Y29uZmlnU2VsZWN0b3J9YFxuICAgICAgKTtcbiAgICB9XG4gIH07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => defaultValue() : property_provider_1.fromStatic(defaultValue);\nexports.fromStatic = fromStatic;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUE2RTtBQUs3RSxNQUFNLFVBQVUsR0FBRyxDQUFJLElBQXlCLEVBQXFCLEVBQUUsQ0FBQyxPQUFPLElBQUksS0FBSyxVQUFVLENBQUM7QUFFNUYsTUFBTSxVQUFVLEdBQUcsQ0FBSSxZQUFpQyxFQUFlLEVBQUUsQ0FDOUUsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyw4QkFBaUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUQ3RSxRQUFBLFVBQVUsY0FDbUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tU3RhdGljIGFzIGNvbnZlcnRUb1Byb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgdHlwZSBGcm9tU3RhdGljQ29uZmlnPFQ+ID0gVCB8ICgoKSA9PiBUKTtcbnR5cGUgR2V0dGVyPFQ+ID0gKCkgPT4gVDtcbmNvbnN0IGlzRnVuY3Rpb24gPSA8VD4oZnVuYzogRnJvbVN0YXRpY0NvbmZpZzxUPik6IGZ1bmMgaXMgR2V0dGVyPFQ+ID0+IHR5cGVvZiBmdW5jID09PSBcImZ1bmN0aW9uXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tU3RhdGljID0gPFQ+KGRlZmF1bHRWYWx1ZTogRnJvbVN0YXRpY0NvbmZpZzxUPik6IFByb3ZpZGVyPFQ+ID0+XG4gIGlzRnVuY3Rpb24oZGVmYXVsdFZhbHVlKSA/IGFzeW5jICgpID0+IGRlZmF1bHRWYWx1ZSgpIDogY29udmVydFRvUHJvdmlkZXIoZGVmYXVsdFZhbHVlKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configLoader\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseURBQStCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uZmlnTG9hZGVyXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\n/**\n * Node.js system error codes that indicate timeout.\n */\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNVLFFBQUEsMEJBQTBCLEdBQUcsQ0FBQyxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBOb2RlLmpzIHN5c3RlbSBlcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRpbWVvdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBOT0RFSlNfVElNRU9VVF9FUlJPUl9DT0RFUyA9IFtcIkVDT05OUkVTRVRcIiwgXCJFUElQRVwiLCBcIkVUSU1FRE9VVFwiXTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsTUFBTSxxQkFBcUIsR0FBRyxDQUFDLE9BQTRCLEVBQUUsRUFBRTtJQUM3RCxNQUFNLGtCQUFrQixHQUFjLEVBQUUsQ0FBQztJQUV6QyxLQUFLLE1BQU0sSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdkMsTUFBTSxZQUFZLEdBQVcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztLQUNoRztJQUVELE9BQU8sa0JBQWtCLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FBRU8sc0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGVhZGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBJbmNvbWluZ0h0dHBIZWFkZXJzIH0gZnJvbSBcImh0dHAyXCI7XG5cbmNvbnN0IGdldFRyYW5zZm9ybWVkSGVhZGVycyA9IChoZWFkZXJzOiBJbmNvbWluZ0h0dHBIZWFkZXJzKSA9PiB7XG4gIGNvbnN0IHRyYW5zZm9ybWVkSGVhZGVyczogSGVhZGVyQmFnID0ge307XG5cbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgaGVhZGVyVmFsdWVzID0gPHN0cmluZz5oZWFkZXJzW25hbWVdO1xuICAgIHRyYW5zZm9ybWVkSGVhZGVyc1tuYW1lXSA9IEFycmF5LmlzQXJyYXkoaGVhZGVyVmFsdWVzKSA/IGhlYWRlclZhbHVlcy5qb2luKFwiLFwiKSA6IGhlYWRlclZhbHVlcztcbiAgfVxuXG4gIHJldHVybiB0cmFuc2Zvcm1lZEhlYWRlcnM7XG59O1xuXG5leHBvcnQgeyBnZXRUcmFuc2Zvcm1lZEhlYWRlcnMgfTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./node-http-handler\"), exports);\ntslib_1.__exportStar(require(\"./node-http2-handler\"), exports);\ntslib_1.__exportStar(require(\"./stream-collector\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQW9DO0FBQ3BDLCtEQUFxQztBQUNyQyw2REFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ub2RlLWh0dHAtaGFuZGxlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbm9kZS1odHRwMi1oYW5kbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJlYW0tY29sbGVjdG9yXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttpHandler {\n    constructor({ connectionTimeout, socketTimeout, httpAgent, httpsAgent } = {}) {\n        // Node http handler is hard-coded to http/1.1: https://github.com/nodejs/node/blob/ff5664b83b89c55e4ab5d5f60068fb457f1f5872/lib/_http_server.js#L286\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.connectionTimeout = connectionTimeout;\n        this.socketTimeout = socketTimeout;\n        const keepAlive = true;\n        const maxSockets = 50;\n        this.httpAgent = httpAgent || new http_1.Agent({ keepAlive, maxSockets });\n        this.httpsAgent = httpsAgent || new https_1.Agent({ keepAlive, maxSockets });\n    }\n    destroy() {\n        this.httpAgent.destroy();\n        this.httpsAgent.destroy();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, reject) => {\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            // determine which http(s) client to use\n            const isSSL = request.protocol === \"https:\";\n            const queryString = querystring_builder_1.buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.httpsAgent : this.httpAgent,\n            };\n            // create the http request\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            // wire-up any timeout logic\n            set_connection_timeout_1.setConnectionTimeout(req, reject, this.connectionTimeout);\n            set_socket_timeout_1.setSocketTimeout(req, reject, this.socketTimeout);\n            // wire-up abort logic\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    // ensure request is destroyed\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor({ requestTimeout, sessionTimeout } = {}) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.requestTimeout = requestTimeout;\n        this.sessionTimeout = sessionTimeout;\n        this.connectionPool = new Map();\n    }\n    destroy() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, http2Session] of this.connectionPool) {\n            http2Session.destroy();\n        }\n        this.connectionPool.clear();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, rejectOriginal) => {\n            // It's redundant to track fulfilled because promises use the first resolution/rejection\n            // but avoids generating unnecessary stack traces in the \"close\" event handler.\n            let fulfilled = false;\n            const reject = (err) => {\n                fulfilled = true;\n                rejectOriginal(err);\n            };\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, path, query } = request;\n            const queryString = querystring_builder_1.buildQueryString(query || {});\n            // create the http2 request\n            const req = this.getSession(`${protocol}//${hostname}${port ? `:${port}` : \"\"}`).request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: queryString ? `${path}?${queryString}` : path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n            });\n            const requestTimeout = this.requestTimeout;\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            // Set up handlers for errors\n            req.on(\"frameError\", reject);\n            req.on(\"error\", reject);\n            req.on(\"goaway\", reject);\n            req.on(\"aborted\", reject);\n            // The HTTP/2 error code used when closing the stream can be retrieved using the\n            // http2stream.rstCode property. If the code is any value other than NGHTTP2_NO_ERROR (0),\n            // an 'error' event will have also been emitted.\n            req.on(\"close\", () => {\n                if (!fulfilled) {\n                    reject(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n    getSession(authority) {\n        const connectionPool = this.connectionPool;\n        const existingSession = connectionPool.get(authority);\n        if (existingSession)\n            return existingSession;\n        const newSession = http2_1.connect(authority);\n        connectionPool.set(authority, newSession);\n        const destroySessionCb = () => {\n            this.destroySession(authority, newSession);\n        };\n        newSession.on(\"goaway\", destroySessionCb);\n        newSession.on(\"error\", destroySessionCb);\n        newSession.on(\"frameError\", destroySessionCb);\n        const sessionTimeout = this.sessionTimeout;\n        if (sessionTimeout) {\n            newSession.setTimeout(sessionTimeout, () => {\n                if (connectionPool.get(authority) === newSession) {\n                    newSession.close();\n                    connectionPool.delete(authority);\n                }\n            });\n        }\n        return newSession;\n    }\n    /**\n     * Destroy a session immediately and remove it from the http2 pool.\n     *\n     * This check ensures that the session is only closed once\n     * and that an event on one session does not close a different session.\n     */\n    destroySession(authority, session) {\n        if (this.connectionPool.get(authority) !== session) {\n            // Already closed?\n            return;\n        }\n        this.connectionPool.delete(authority);\n        session.removeAllListeners(\"goaway\");\n        session.removeAllListeners(\"error\");\n        session.removeAllListeners(\"frameError\");\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            // Throw a connecting timeout error unless a connection is made within x time.\n            const timeoutId = setTimeout(() => {\n                // destroy the request.\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            // if the connection was established, cancel the timeout.\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWNvbm5lY3Rpb24tdGltZW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXQtY29ubmVjdGlvbi10aW1lb3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdPLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxPQUFzQixFQUFFLE1BQTRCLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxFQUFFO0lBQzVHLElBQUksQ0FBQyxXQUFXLEVBQUU7UUFDaEIsT0FBTztLQUNSO0lBRUQsT0FBTyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFjLEVBQUUsRUFBRTtRQUN0QyxJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUU7WUFDckIsOEVBQThFO1lBQzlFLE1BQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hDLHVCQUF1QjtnQkFDdkIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNsQixNQUFNLENBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyw2REFBNkQsV0FBVyxLQUFLLENBQUMsRUFBRTtvQkFDdEcsSUFBSSxFQUFFLGNBQWM7aUJBQ3JCLENBQUMsQ0FDSCxDQUFDO1lBQ0osQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBRWhCLHlEQUF5RDtZQUN6RCxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7Z0JBQ3hCLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMxQixDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUF4QlcsUUFBQSxvQkFBb0Isd0JBd0IvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudFJlcXVlc3QgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgU29ja2V0IH0gZnJvbSBcIm5ldFwiO1xuXG5leHBvcnQgY29uc3Qgc2V0Q29ubmVjdGlvblRpbWVvdXQgPSAocmVxdWVzdDogQ2xpZW50UmVxdWVzdCwgcmVqZWN0OiAoZXJyOiBFcnJvcikgPT4gdm9pZCwgdGltZW91dEluTXMgPSAwKSA9PiB7XG4gIGlmICghdGltZW91dEluTXMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXF1ZXN0Lm9uKFwic29ja2V0XCIsIChzb2NrZXQ6IFNvY2tldCkgPT4ge1xuICAgIGlmIChzb2NrZXQuY29ubmVjdGluZykge1xuICAgICAgLy8gVGhyb3cgYSBjb25uZWN0aW5nIHRpbWVvdXQgZXJyb3IgdW5sZXNzIGEgY29ubmVjdGlvbiBpcyBtYWRlIHdpdGhpbiB4IHRpbWUuXG4gICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgLy8gZGVzdHJveSB0aGUgcmVxdWVzdC5cbiAgICAgICAgcmVxdWVzdC5kZXN0cm95KCk7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBPYmplY3QuYXNzaWduKG5ldyBFcnJvcihgU29ja2V0IHRpbWVkIG91dCB3aXRob3V0IGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gd2l0aGluICR7dGltZW91dEluTXN9IG1zYCksIHtcbiAgICAgICAgICAgIG5hbWU6IFwiVGltZW91dEVycm9yXCIsXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sIHRpbWVvdXRJbk1zKTtcblxuICAgICAgLy8gaWYgdGhlIGNvbm5lY3Rpb24gd2FzIGVzdGFibGlzaGVkLCBjYW5jZWwgdGhlIHRpbWVvdXQuXG4gICAgICBzb2NrZXQub24oXCJjb25uZWN0XCIsICgpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        // destroy the request\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXNvY2tldC10aW1lb3V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NldC1zb2NrZXQtdGltZW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFTyxNQUFNLGdCQUFnQixHQUFHLENBQUMsT0FBc0IsRUFBRSxNQUE0QixFQUFFLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBRTtJQUN4RyxPQUFPLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUU7UUFDbkMsc0JBQXNCO1FBQ3RCLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsV0FBVyxLQUFLLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0csQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFOVyxRQUFBLGdCQUFnQixvQkFNM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnRSZXF1ZXN0IH0gZnJvbSBcImh0dHBcIjtcblxuZXhwb3J0IGNvbnN0IHNldFNvY2tldFRpbWVvdXQgPSAocmVxdWVzdDogQ2xpZW50UmVxdWVzdCwgcmVqZWN0OiAoZXJyOiBFcnJvcikgPT4gdm9pZCwgdGltZW91dEluTXMgPSAwKSA9PiB7XG4gIHJlcXVlc3Quc2V0VGltZW91dCh0aW1lb3V0SW5NcywgKCkgPT4ge1xuICAgIC8vIGRlc3Ryb3kgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LmRlc3Ryb3koKTtcbiAgICByZWplY3QoT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoYENvbm5lY3Rpb24gdGltZWQgb3V0IGFmdGVyICR7dGltZW91dEluTXN9IG1zYCksIHsgbmFtZTogXCJUaW1lb3V0RXJyb3JcIiB9KSk7XG4gIH0pO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cmVhbS1jb2xsZWN0b3IvY29sbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1DQUFrQztBQUNsQyxNQUFhLFNBQVUsU0FBUSxpQkFBUTtJQUF2Qzs7UUFDa0Isa0JBQWEsR0FBYSxFQUFFLENBQUM7SUFLL0MsQ0FBQztJQUpDLE1BQU0sQ0FBQyxLQUFhLEVBQUUsUUFBZ0IsRUFBRSxRQUErQjtRQUNyRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixRQUFRLEVBQUUsQ0FBQztJQUNiLENBQUM7Q0FDRjtBQU5ELDhCQU1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV3JpdGFibGUgfSBmcm9tIFwic3RyZWFtXCI7XG5leHBvcnQgY2xhc3MgQ29sbGVjdG9yIGV4dGVuZHMgV3JpdGFibGUge1xuICBwdWJsaWMgcmVhZG9ubHkgYnVmZmVyZWRCeXRlczogQnVmZmVyW10gPSBbXTtcbiAgX3dyaXRlKGNodW5rOiBCdWZmZXIsIGVuY29kaW5nOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyPzogRXJyb3IpID0+IHZvaWQpIHtcbiAgICB0aGlzLmJ1ZmZlcmVkQnl0ZXMucHVzaChjaHVuayk7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        // if the source errors, the destination stream needs to manually end\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RyZWFtLWNvbGxlY3Rvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSwyQ0FBd0M7QUFFakMsTUFBTSxlQUFlLEdBQW9CLENBQUMsTUFBZ0IsRUFBdUIsRUFBRSxDQUN4RixJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtJQUM5QixNQUFNLFNBQVMsR0FBRyxJQUFJLHFCQUFTLEVBQUUsQ0FBQztJQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7UUFDekIscUVBQXFFO1FBQ3JFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FBQztJQUNILFNBQVMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQ3JCLE1BQU0sS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDaEUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUM7QUFkUSxRQUFBLGVBQWUsbUJBY3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyZWFtQ29sbGVjdG9yIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcblxuaW1wb3J0IHsgQ29sbGVjdG9yIH0gZnJvbSBcIi4vY29sbGVjdG9yXCI7XG5cbmV4cG9ydCBjb25zdCBzdHJlYW1Db2xsZWN0b3I6IFN0cmVhbUNvbGxlY3RvciA9IChzdHJlYW06IFJlYWRhYmxlKTogUHJvbWlzZTxVaW50OEFycmF5PiA9PlxuICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY29sbGVjdG9yID0gbmV3IENvbGxlY3RvcigpO1xuICAgIHN0cmVhbS5waXBlKGNvbGxlY3Rvcik7XG4gICAgc3RyZWFtLm9uKFwiZXJyb3JcIiwgKGVycikgPT4ge1xuICAgICAgLy8gaWYgdGhlIHNvdXJjZSBlcnJvcnMsIHRoZSBkZXN0aW5hdGlvbiBzdHJlYW0gbmVlZHMgdG8gbWFudWFsbHkgZW5kXG4gICAgICBjb2xsZWN0b3IuZW5kKCk7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9KTtcbiAgICBjb2xsZWN0b3Iub24oXCJlcnJvclwiLCByZWplY3QpO1xuICAgIGNvbGxlY3Rvci5vbihcImZpbmlzaFwiLCBmdW5jdGlvbiAodGhpczogQ29sbGVjdG9yKSB7XG4gICAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KEJ1ZmZlci5jb25jYXQodGhpcy5idWZmZXJlZEJ5dGVzKSk7XG4gICAgICByZXNvbHZlKGJ5dGVzKTtcbiAgICB9KTtcbiAgfSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nfunction writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        // pipe automatically handles end\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGUtcmVxdWVzdC1ib2R5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dyaXRlLXJlcXVlc3QtYm9keS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxtQ0FBa0M7QUFFbEMsU0FBZ0IsZ0JBQWdCLENBQUMsV0FBOEMsRUFBRSxPQUFvQjtJQUNuRyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEUsSUFBSSxNQUFNLEtBQUssY0FBYyxFQUFFO1FBQzdCLFdBQVcsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRTtZQUM5QixTQUFTLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztLQUNKO1NBQU07UUFDTCxTQUFTLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QztBQUNILENBQUM7QUFURCw0Q0FTQztBQUVELFNBQVMsU0FBUyxDQUNoQixXQUE4QyxFQUM5QyxJQUFxRTtJQUVyRSxJQUFJLElBQUksWUFBWSxpQkFBUSxFQUFFO1FBQzVCLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQ3hCO1NBQU0sSUFBSSxJQUFJLEVBQUU7UUFDZixXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUNwQztTQUFNO1FBQ0wsV0FBVyxDQUFDLEdBQUcsRUFBRSxDQUFDO0tBQ25CO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBDbGllbnRSZXF1ZXN0IH0gZnJvbSBcImh0dHBcIjtcbmltcG9ydCB7IENsaWVudEh0dHAyU3RyZWFtIH0gZnJvbSBcImh0dHAyXCI7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlUmVxdWVzdEJvZHkoaHR0cFJlcXVlc3Q6IENsaWVudFJlcXVlc3QgfCBDbGllbnRIdHRwMlN0cmVhbSwgcmVxdWVzdDogSHR0cFJlcXVlc3QpIHtcbiAgY29uc3QgZXhwZWN0ID0gcmVxdWVzdC5oZWFkZXJzW1wiRXhwZWN0XCJdIHx8IHJlcXVlc3QuaGVhZGVyc1tcImV4cGVjdFwiXTtcbiAgaWYgKGV4cGVjdCA9PT0gXCIxMDAtY29udGludWVcIikge1xuICAgIGh0dHBSZXF1ZXN0Lm9uKFwiY29udGludWVcIiwgKCkgPT4ge1xuICAgICAgd3JpdGVCb2R5KGh0dHBSZXF1ZXN0LCByZXF1ZXN0LmJvZHkpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHdyaXRlQm9keShodHRwUmVxdWVzdCwgcmVxdWVzdC5ib2R5KTtcbiAgfVxufVxuXG5mdW5jdGlvbiB3cml0ZUJvZHkoXG4gIGh0dHBSZXF1ZXN0OiBDbGllbnRSZXF1ZXN0IHwgQ2xpZW50SHR0cDJTdHJlYW0sXG4gIGJvZHk/OiBzdHJpbmcgfCBBcnJheUJ1ZmZlciB8IEFycmF5QnVmZmVyVmlldyB8IFJlYWRhYmxlIHwgVWludDhBcnJheVxuKSB7XG4gIGlmIChib2R5IGluc3RhbmNlb2YgUmVhZGFibGUpIHtcbiAgICAvLyBwaXBlIGF1dG9tYXRpY2FsbHkgaGFuZGxlcyBlbmRcbiAgICBib2R5LnBpcGUoaHR0cFJlcXVlc3QpO1xuICB9IGVsc2UgaWYgKGJvZHkpIHtcbiAgICBodHRwUmVxdWVzdC5lbmQoQnVmZmVyLmZyb20oYm9keSkpO1xuICB9IGVsc2Uge1xuICAgIGh0dHBSZXF1ZXN0LmVuZCgpO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = exports.ProviderError = void 0;\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n *\n * @deprecated\n */\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.ProviderError = ProviderError;\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nclass CredentialsProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvdmlkZXJFcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Qcm92aWRlckVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFhLGFBQWMsU0FBUSxLQUFLO0lBQ3RDLFlBQVksT0FBZSxFQUFrQixjQUF1QixJQUFJO1FBQ3RFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUQ0QixnQkFBVyxHQUFYLFdBQVcsQ0FBZ0I7SUFFeEUsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBWSxFQUFFLFdBQVcsR0FBRyxJQUFJO1FBQzFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtZQUMxQyxLQUFLLEVBQUUsV0FBVztZQUNsQixZQUFZLEVBQUUsS0FBSztZQUNuQixVQUFVLEVBQUUsS0FBSztZQUNqQixRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFDLENBQUM7UUFDSCxPQUFPLEtBQXNCLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBYkQsc0NBYUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQWEsd0JBQXlCLFNBQVEsS0FBSztJQUVqRCxZQUFZLE9BQWUsRUFBa0IsY0FBdUIsSUFBSTtRQUN0RSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFENEIsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO1FBRC9ELFNBQUksR0FBRywwQkFBMEIsQ0FBQztJQUczQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFZLEVBQUUsV0FBVyxHQUFHLElBQUk7UUFDMUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFO1lBQzFDLEtBQUssRUFBRSxXQUFXO1lBQ2xCLFlBQVksRUFBRSxLQUFLO1lBQ25CLFVBQVUsRUFBRSxLQUFLO1lBQ2pCLFFBQVEsRUFBRSxLQUFLO1NBQ2hCLENBQUMsQ0FBQztRQUNILE9BQU8sS0FBaUMsQ0FBQztJQUMzQyxDQUFDO0NBQ0Y7QUFkRCw0REFjQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQW4gZXJyb3IgcmVwcmVzZW50aW5nIGEgZmFpbHVyZSBvZiBhbiBpbmRpdmlkdWFsIGNyZWRlbnRpYWwgcHJvdmlkZXIuXG4gKlxuICogVGhpcyBlcnJvciBjbGFzcyBoYXMgc3BlY2lhbCBtZWFuaW5nIHRvIHRoZSB7QGxpbmsgY2hhaW59IG1ldGhvZC4gSWYgYVxuICogcHJvdmlkZXIgaW4gdGhlIGNoYWluIGlzIHJlamVjdGVkIHdpdGggYW4gZXJyb3IsIHRoZSBjaGFpbiB3aWxsIG9ubHkgcHJvY2VlZFxuICogdG8gdGhlIG5leHQgcHJvdmlkZXIgaWYgdGhlIHZhbHVlIG9mIHRoZSBgdHJ5TmV4dExpbmtgIHByb3BlcnR5IG9uIHRoZSBlcnJvclxuICogaXMgdHJ1dGh5LiBUaGlzIGFsbG93cyBpbmRpdmlkdWFsIHByb3ZpZGVycyB0byBoYWx0IHRoZSBjaGFpbiBhbmQgYWxzb1xuICogZW5zdXJlcyB0aGUgY2hhaW4gd2lsbCBzdG9wIGlmIGFuIGVudGlyZWx5IHVuZXhwZWN0ZWQgZXJyb3IgaXMgZW5jb3VudGVyZWQuXG4gKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGNsYXNzIFByb3ZpZGVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgcHVibGljIHJlYWRvbmx5IHRyeU5leHRMaW5rOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICB9XG4gIHN0YXRpYyBmcm9tKGVycm9yOiBFcnJvciwgdHJ5TmV4dExpbmsgPSB0cnVlKTogUHJvdmlkZXJFcnJvciB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVycm9yLCBcInRyeU5leHRMaW5rXCIsIHtcbiAgICAgIHZhbHVlOiB0cnlOZXh0TGluayxcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICB9KTtcbiAgICByZXR1cm4gZXJyb3IgYXMgUHJvdmlkZXJFcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIEFuIGVycm9yIHJlcHJlc2VudGluZyBhIGZhaWx1cmUgb2YgYW4gaW5kaXZpZHVhbCBjcmVkZW50aWFsIHByb3ZpZGVyLlxuICpcbiAqIFRoaXMgZXJyb3IgY2xhc3MgaGFzIHNwZWNpYWwgbWVhbmluZyB0byB0aGUge0BsaW5rIGNoYWlufSBtZXRob2QuIElmIGFcbiAqIHByb3ZpZGVyIGluIHRoZSBjaGFpbiBpcyByZWplY3RlZCB3aXRoIGFuIGVycm9yLCB0aGUgY2hhaW4gd2lsbCBvbmx5IHByb2NlZWRcbiAqIHRvIHRoZSBuZXh0IHByb3ZpZGVyIGlmIHRoZSB2YWx1ZSBvZiB0aGUgYHRyeU5leHRMaW5rYCBwcm9wZXJ0eSBvbiB0aGUgZXJyb3JcbiAqIGlzIHRydXRoeS4gVGhpcyBhbGxvd3MgaW5kaXZpZHVhbCBwcm92aWRlcnMgdG8gaGFsdCB0aGUgY2hhaW4gYW5kIGFsc29cbiAqIGVuc3VyZXMgdGhlIGNoYWluIHdpbGwgc3RvcCBpZiBhbiBlbnRpcmVseSB1bmV4cGVjdGVkIGVycm9yIGlzIGVuY291bnRlcmVkLlxuICovXG5leHBvcnQgY2xhc3MgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICByZWFkb25seSBuYW1lID0gXCJDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3JcIjtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBwdWJsaWMgcmVhZG9ubHkgdHJ5TmV4dExpbms6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gIH1cbiAgc3RhdGljIGZyb20oZXJyb3I6IEVycm9yLCB0cnlOZXh0TGluayA9IHRydWUpOiBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3Ige1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnJvciwgXCJ0cnlOZXh0TGlua1wiLCB7XG4gICAgICB2YWx1ZTogdHJ5TmV4dExpbmssXG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIGVycm9yIGFzIENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcjtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\n/**\n * Compose a single credential provider function from multiple credential\n * providers. The first provider in the argument list will always be invoked;\n * subsequent providers in the list will be invoked in the order in which the\n * were received if the preceding provider did not successfully resolve.\n *\n * If no providers were received or no provider resolves successfully, the\n * returned promise will be rejected.\n */\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2hhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsbURBQWdEO0FBRWhEOzs7Ozs7OztHQVFHO0FBQ0gsU0FBZ0IsS0FBSyxDQUFJLEdBQUcsU0FBNkI7SUFDdkQsT0FBTyxHQUFHLEVBQUU7UUFDVixJQUFJLE9BQU8sR0FBZSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksNkJBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7UUFDckYsS0FBSyxNQUFNLFFBQVEsSUFBSSxTQUFTLEVBQUU7WUFDaEMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtnQkFDbkMsSUFBSSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsV0FBVyxFQUFFO29CQUNwQixPQUFPLFFBQVEsRUFBRSxDQUFDO2lCQUNuQjtnQkFFRCxNQUFNLEdBQUcsQ0FBQztZQUNaLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDLENBQUM7QUFDSixDQUFDO0FBZkQsc0JBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIi4vUHJvdmlkZXJFcnJvclwiO1xuXG4vKipcbiAqIENvbXBvc2UgYSBzaW5nbGUgY3JlZGVudGlhbCBwcm92aWRlciBmdW5jdGlvbiBmcm9tIG11bHRpcGxlIGNyZWRlbnRpYWxcbiAqIHByb3ZpZGVycy4gVGhlIGZpcnN0IHByb3ZpZGVyIGluIHRoZSBhcmd1bWVudCBsaXN0IHdpbGwgYWx3YXlzIGJlIGludm9rZWQ7XG4gKiBzdWJzZXF1ZW50IHByb3ZpZGVycyBpbiB0aGUgbGlzdCB3aWxsIGJlIGludm9rZWQgaW4gdGhlIG9yZGVyIGluIHdoaWNoIHRoZVxuICogd2VyZSByZWNlaXZlZCBpZiB0aGUgcHJlY2VkaW5nIHByb3ZpZGVyIGRpZCBub3Qgc3VjY2Vzc2Z1bGx5IHJlc29sdmUuXG4gKlxuICogSWYgbm8gcHJvdmlkZXJzIHdlcmUgcmVjZWl2ZWQgb3Igbm8gcHJvdmlkZXIgcmVzb2x2ZXMgc3VjY2Vzc2Z1bGx5LCB0aGVcbiAqIHJldHVybmVkIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYWluPFQ+KC4uLnByb3ZpZGVyczogQXJyYXk8UHJvdmlkZXI8VD4+KTogUHJvdmlkZXI8VD4ge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGxldCBwcm9taXNlOiBQcm9taXNlPFQ+ID0gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJObyBwcm92aWRlcnMgaW4gY2hhaW5cIikpO1xuICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgcHJvdmlkZXJzKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS5jYXRjaCgoZXJyOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGVycj8udHJ5TmV4dExpbmspIHtcbiAgICAgICAgICByZXR1cm4gcHJvdmlkZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVPLE1BQU0sVUFBVSxHQUNyQixDQUFJLFdBQWMsRUFBZSxFQUFFLENBQ25DLEdBQUcsRUFBRSxDQUNILE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFIcEIsUUFBQSxVQUFVLGNBR1UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZnJvbVN0YXRpYyA9XG4gIDxUPihzdGF0aWNWYWx1ZTogVCk6IFByb3ZpZGVyPFQ+ID0+XG4gICgpID0+XG4gICAgUHJvbWlzZS5yZXNvbHZlKHN0YXRpY1ZhbHVlKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./chain\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./memoize\"), exports);\ntslib_1.__exportStar(require(\"./ProviderError\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0RBQXdCO0FBQ3hCLHVEQUE2QjtBQUM3QixvREFBMEI7QUFDMUIsMERBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY2hhaW5cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21TdGF0aWNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21lbW9pemVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1Byb3ZpZGVyRXJyb3JcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let result;\n    let hasResult;\n    if (isExpired === undefined) {\n        // This is a static memoization; no need to incorporate refreshing\n        return () => {\n            if (!hasResult) {\n                result = provider();\n                hasResult = true;\n            }\n            return result;\n        };\n    }\n    let isConstant = false;\n    return async () => {\n        if (!hasResult) {\n            result = provider();\n            hasResult = true;\n        }\n        if (isConstant) {\n            return result;\n        }\n        const resolved = await result;\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            return (result = provider());\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZW1vaXplLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQTBDTyxNQUFNLE9BQU8sR0FBb0IsQ0FDdEMsUUFBcUIsRUFDckIsU0FBb0MsRUFDcEMsZUFBMEMsRUFDN0IsRUFBRTtJQUNmLElBQUksTUFBVyxDQUFDO0lBQ2hCLElBQUksU0FBa0IsQ0FBQztJQUN2QixJQUFJLFNBQVMsS0FBSyxTQUFTLEVBQUU7UUFDM0Isa0VBQWtFO1FBQ2xFLE9BQU8sR0FBRyxFQUFFO1lBQ1YsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDZCxNQUFNLEdBQUcsUUFBUSxFQUFFLENBQUM7Z0JBQ3BCLFNBQVMsR0FBRyxJQUFJLENBQUM7YUFDbEI7WUFDRCxPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUM7S0FDSDtJQUVELElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUV2QixPQUFPLEtBQUssSUFBSSxFQUFFO1FBQ2hCLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDZCxNQUFNLEdBQUcsUUFBUSxFQUFFLENBQUM7WUFDcEIsU0FBUyxHQUFHLElBQUksQ0FBQztTQUNsQjtRQUNELElBQUksVUFBVSxFQUFFO1lBQ2QsT0FBTyxNQUFNLENBQUM7U0FDZjtRQUVELE1BQU0sUUFBUSxHQUFHLE1BQU0sTUFBTSxDQUFDO1FBQzlCLElBQUksZUFBZSxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ2pELFVBQVUsR0FBRyxJQUFJLENBQUM7WUFDbEIsT0FBTyxRQUFRLENBQUM7U0FDakI7UUFDRCxJQUFJLFNBQVMsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUN2QixPQUFPLENBQUMsTUFBTSxHQUFHLFFBQVEsRUFBRSxDQUFDLENBQUM7U0FDOUI7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUF2Q1csUUFBQSxPQUFPLFdBdUNsQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmludGVyZmFjZSBNZW1vaXplT3ZlcmxvYWQge1xuICAvKipcbiAgICpcbiAgICogRGVjb3JhdGVzIGEgcHJvdmlkZXIgZnVuY3Rpb24gd2l0aCBlaXRoZXIgc3RhdGljIG1lbW9pemF0aW9uLlxuICAgKlxuICAgKiBUbyBjcmVhdGUgYSBzdGF0aWNhbGx5IG1lbW9pemVkIHByb3ZpZGVyLCBzdXBwbHkgYSBwcm92aWRlciBhcyB0aGUgb25seVxuICAgKiBhcmd1bWVudCB0byB0aGlzIGZ1bmN0aW9uLiBUaGUgcHJvdmlkZXIgd2lsbCBiZSBpbnZva2VkIG9uY2UsIGFuZCBhbGxcbiAgICogaW52b2NhdGlvbnMgb2YgdGhlIHByb3ZpZGVyIHJldHVybmVkIGJ5IGBtZW1vaXplYCB3aWxsIHJldHVybiB0aGUgc2FtZVxuICAgKiBwcm9taXNlIG9iamVjdC5cbiAgICpcbiAgICogQHBhcmFtIHByb3ZpZGVyIFRoZSBwcm92aWRlciB3aG9zZSByZXN1bHQgc2hvdWxkIGJlIGNhY2hlZCBpbmRlZmluaXRlbHkuXG4gICAqL1xuICA8VD4ocHJvdmlkZXI6IFByb3ZpZGVyPFQ+KTogUHJvdmlkZXI8VD47XG5cbiAgLyoqXG4gICAqIERlY29yYXRlcyBhIHByb3ZpZGVyIGZ1bmN0aW9uIHdpdGggcmVmcmVzaGluZyBtZW1vaXphdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHByb3ZpZGVyICAgICAgICAgIFRoZSBwcm92aWRlciB3aG9zZSByZXN1bHQgc2hvdWxkIGJlIGNhY2hlZC5cbiAgICogQHBhcmFtIGlzRXhwaXJlZCAgICAgICAgIEEgZnVuY3Rpb24gdGhhdCB3aWxsIGV2YWx1YXRlIHRoZSByZXNvbHZlZCB2YWx1ZSBhbmRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGRldGVybWluZSBpZiBpdCBpcyBleHBpcmVkLiBGb3IgZXhhbXBsZSwgd2hlblxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgbWVtb2l6aW5nIEFXUyBjcmVkZW50aWFsIHByb3ZpZGVycywgdGhpcyBmdW5jdGlvblxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkIHJldHVybiBgdHJ1ZWAgd2hlbiB0aGUgY3JlZGVudGlhbCdzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBleHBpcmF0aW9uIGlzIGluIHRoZSBwYXN0IChvciB2ZXJ5IG5lYXIgZnV0dXJlKSBhbmRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICAgKiBAcGFyYW0gcmVxdWlyZXNSZWZyZXNoICAgQSBmdW5jdGlvbiB0aGF0IHdpbGwgZXZhbHVhdGUgdGhlIHJlc29sdmVkIHZhbHVlIGFuZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0ZXJtaW5lIGlmIGl0IHJlcHJlc2VudHMgc3RhdGljIHZhbHVlIG9yIG9uZSB0aGF0XG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGV2ZW50dWFsbHkgbmVlZCB0byBiZSByZWZyZXNoZWQuIEZvciBleGFtcGxlLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQVdTIGNyZWRlbnRpYWxzIHRoYXQgaGF2ZSBubyBkZWZpbmVkIGV4cGlyYXRpb24gd2lsbFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgbmV2ZXIgbmVlZCB0byBiZSByZWZyZXNoZWQsIHNvIHRoaXMgZnVuY3Rpb24gd291bGRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBgdHJ1ZWAgaWYgdGhlIGNyZWRlbnRpYWxzIHJlc29sdmVkIGJ5IHRoZVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJseWluZyBwcm92aWRlciBoYWQgYW4gZXhwaXJhdGlvbiBhbmQgYGZhbHNlYFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgb3RoZXJ3aXNlLlxuICAgKi9cbiAgPFQ+KFxuICAgIHByb3ZpZGVyOiBQcm92aWRlcjxUPixcbiAgICBpc0V4cGlyZWQ6IChyZXNvbHZlZDogVCkgPT4gYm9vbGVhbixcbiAgICByZXF1aXJlc1JlZnJlc2g/OiAocmVzb2x2ZWQ6IFQpID0+IGJvb2xlYW5cbiAgKTogUHJvdmlkZXI8VD47XG59XG5cbmV4cG9ydCBjb25zdCBtZW1vaXplOiBNZW1vaXplT3ZlcmxvYWQgPSA8VD4oXG4gIHByb3ZpZGVyOiBQcm92aWRlcjxUPixcbiAgaXNFeHBpcmVkPzogKHJlc29sdmVkOiBUKSA9PiBib29sZWFuLFxuICByZXF1aXJlc1JlZnJlc2g/OiAocmVzb2x2ZWQ6IFQpID0+IGJvb2xlYW5cbik6IFByb3ZpZGVyPFQ+ID0+IHtcbiAgbGV0IHJlc3VsdDogYW55O1xuICBsZXQgaGFzUmVzdWx0OiBib29sZWFuO1xuICBpZiAoaXNFeHBpcmVkID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyBUaGlzIGlzIGEgc3RhdGljIG1lbW9pemF0aW9uOyBubyBuZWVkIHRvIGluY29ycG9yYXRlIHJlZnJlc2hpbmdcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKCFoYXNSZXN1bHQpIHtcbiAgICAgICAgcmVzdWx0ID0gcHJvdmlkZXIoKTtcbiAgICAgICAgaGFzUmVzdWx0ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgfVxuXG4gIGxldCBpc0NvbnN0YW50ID0gZmFsc2U7XG5cbiAgcmV0dXJuIGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWhhc1Jlc3VsdCkge1xuICAgICAgcmVzdWx0ID0gcHJvdmlkZXIoKTtcbiAgICAgIGhhc1Jlc3VsdCA9IHRydWU7XG4gICAgfVxuICAgIGlmIChpc0NvbnN0YW50KSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIGNvbnN0IHJlc29sdmVkID0gYXdhaXQgcmVzdWx0O1xuICAgIGlmIChyZXF1aXJlc1JlZnJlc2ggJiYgIXJlcXVpcmVzUmVmcmVzaChyZXNvbHZlZCkpIHtcbiAgICAgIGlzQ29uc3RhbnQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHJlc29sdmVkO1xuICAgIH1cbiAgICBpZiAoaXNFeHBpcmVkKHJlc29sdmVkKSkge1xuICAgICAgcmV0dXJuIChyZXN1bHQgPSBwcm92aWRlcigpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc29sdmVkO1xuICB9O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cEhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cEhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBIYW5kbGVyT3B0aW9ucywgUmVxdWVzdEhhbmRsZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuaW1wb3J0IHsgSHR0cFJlc3BvbnNlIH0gZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5cbmV4cG9ydCB0eXBlIEh0dHBIYW5kbGVyID0gUmVxdWVzdEhhbmRsZXI8SHR0cFJlcXVlc3QsIEh0dHBSZXNwb25zZSwgSHR0cEhhbmRsZXJPcHRpb25zPjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        //determine if request is a valid httpRequest\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBTUEsTUFBYSxXQUFXO0lBVXRCLFlBQVksT0FBMkI7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksV0FBVyxDQUFDO1FBQ2hELElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVE7WUFDOUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRztnQkFDbkMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsR0FBRztnQkFDeEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRO1lBQ3BCLENBQUMsQ0FBQyxRQUFRLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDeEcsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBZ0I7UUFDaEMsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDM0IsTUFBTSxHQUFHLEdBQVEsT0FBTyxDQUFDO1FBQ3pCLE9BQU8sQ0FDTCxRQUFRLElBQUksR0FBRztZQUNmLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLE1BQU0sSUFBSSxHQUFHO1lBQ2IsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUTtZQUNoQyxPQUFPLEdBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxRQUFRLENBQ25DLENBQUM7SUFDSixDQUFDO0lBRUQsS0FBSztRQUNILE1BQU0sTUFBTSxHQUFHLElBQUksV0FBVyxDQUFDO1lBQzdCLEdBQUcsSUFBSTtZQUNQLE9BQU8sRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtTQUM3QixDQUFDLENBQUM7UUFDSCxJQUFJLE1BQU0sQ0FBQyxLQUFLO1lBQUUsTUFBTSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRjtBQS9DRCxrQ0ErQ0M7QUFFRCxTQUFTLFVBQVUsQ0FBQyxLQUF3QjtJQUMxQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBd0IsRUFBRSxTQUFpQixFQUFFLEVBQUU7UUFDL0UsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9CLE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztTQUN2RCxDQUFDO0lBQ0osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZHBvaW50LCBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVxdWVzdCBhcyBJSHR0cFJlcXVlc3QsIFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbnR5cGUgSHR0cFJlcXVlc3RPcHRpb25zID0gUGFydGlhbDxIdHRwTWVzc2FnZT4gJiBQYXJ0aWFsPEVuZHBvaW50PiAmIHsgbWV0aG9kPzogc3RyaW5nIH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHR0cFJlcXVlc3QgZXh0ZW5kcyBJSHR0cFJlcXVlc3Qge31cblxuZXhwb3J0IGNsYXNzIEh0dHBSZXF1ZXN0IGltcGxlbWVudHMgSHR0cE1lc3NhZ2UsIEVuZHBvaW50IHtcbiAgcHVibGljIG1ldGhvZDogc3RyaW5nO1xuICBwdWJsaWMgcHJvdG9jb2w6IHN0cmluZztcbiAgcHVibGljIGhvc3RuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyBwb3J0PzogbnVtYmVyO1xuICBwdWJsaWMgcGF0aDogc3RyaW5nO1xuICBwdWJsaWMgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVxdWVzdE9wdGlvbnMpIHtcbiAgICB0aGlzLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8IFwiR0VUXCI7XG4gICAgdGhpcy5ob3N0bmFtZSA9IG9wdGlvbnMuaG9zdG5hbWUgfHwgXCJsb2NhbGhvc3RcIjtcbiAgICB0aGlzLnBvcnQgPSBvcHRpb25zLnBvcnQ7XG4gICAgdGhpcy5xdWVyeSA9IG9wdGlvbnMucXVlcnkgfHwge307XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzIHx8IHt9O1xuICAgIHRoaXMuYm9keSA9IG9wdGlvbnMuYm9keTtcbiAgICB0aGlzLnByb3RvY29sID0gb3B0aW9ucy5wcm90b2NvbFxuICAgICAgPyBvcHRpb25zLnByb3RvY29sLnN1YnN0cigtMSkgIT09IFwiOlwiXG4gICAgICAgID8gYCR7b3B0aW9ucy5wcm90b2NvbH06YFxuICAgICAgICA6IG9wdGlvbnMucHJvdG9jb2xcbiAgICAgIDogXCJodHRwczpcIjtcbiAgICB0aGlzLnBhdGggPSBvcHRpb25zLnBhdGggPyAob3B0aW9ucy5wYXRoLmNoYXJBdCgwKSAhPT0gXCIvXCIgPyBgLyR7b3B0aW9ucy5wYXRofWAgOiBvcHRpb25zLnBhdGgpIDogXCIvXCI7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXF1ZXN0OiB1bmtub3duKTogcmVxdWVzdCBpcyBIdHRwUmVxdWVzdCB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVxdWVzdCBpcyBhIHZhbGlkIGh0dHBSZXF1ZXN0XG4gICAgaWYgKCFyZXF1ZXN0KSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVxOiBhbnkgPSByZXF1ZXN0O1xuICAgIHJldHVybiAoXG4gICAgICBcIm1ldGhvZFwiIGluIHJlcSAmJlxuICAgICAgXCJwcm90b2NvbFwiIGluIHJlcSAmJlxuICAgICAgXCJob3N0bmFtZVwiIGluIHJlcSAmJlxuICAgICAgXCJwYXRoXCIgaW4gcmVxICYmXG4gICAgICB0eXBlb2YgcmVxW1wicXVlcnlcIl0gPT09IFwib2JqZWN0XCIgJiZcbiAgICAgIHR5cGVvZiByZXFbXCJoZWFkZXJzXCJdID09PSBcIm9iamVjdFwiXG4gICAgKTtcbiAgfVxuXG4gIGNsb25lKCk6IEh0dHBSZXF1ZXN0IHtcbiAgICBjb25zdCBjbG9uZWQgPSBuZXcgSHR0cFJlcXVlc3Qoe1xuICAgICAgLi4udGhpcyxcbiAgICAgIGhlYWRlcnM6IHsgLi4udGhpcy5oZWFkZXJzIH0sXG4gICAgfSk7XG4gICAgaWYgKGNsb25lZC5xdWVyeSkgY2xvbmVkLnF1ZXJ5ID0gY2xvbmVRdWVyeShjbG9uZWQucXVlcnkpO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVRdWVyeShxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcpOiBRdWVyeVBhcmFtZXRlckJhZyB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkucmVkdWNlKChjYXJyeTogUXVlcnlQYXJhbWV0ZXJCYWcsIHBhcmFtTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcGFyYW0gPSBxdWVyeVtwYXJhbU5hbWVdO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5jYXJyeSxcbiAgICAgIFtwYXJhbU5hbWVdOiBBcnJheS5pc0FycmF5KHBhcmFtKSA/IFsuLi5wYXJhbV0gOiBwYXJhbSxcbiAgICB9O1xuICB9LCB7fSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        //determine if response is a valid HttpResponse\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlc3BvbnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2h0dHBSZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFRQSxNQUFhLFlBQVk7SUFLdkIsWUFBWSxPQUE0QjtRQUN0QyxJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBaUI7UUFDakMsK0NBQStDO1FBQy9DLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDNUIsTUFBTSxJQUFJLEdBQUcsUUFBZSxDQUFDO1FBQzdCLE9BQU8sT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUFDO0lBQ2pGLENBQUM7Q0FDRjtBQWpCRCxvQ0FpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVzcG9uc2UgYXMgSUh0dHBSZXNwb25zZSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG50eXBlIEh0dHBSZXNwb25zZU9wdGlvbnMgPSBQYXJ0aWFsPEh0dHBNZXNzYWdlPiAmIHtcbiAgc3RhdHVzQ29kZTogbnVtYmVyO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBIdHRwUmVzcG9uc2UgZXh0ZW5kcyBJSHR0cFJlc3BvbnNlIHt9XG5cbmV4cG9ydCBjbGFzcyBIdHRwUmVzcG9uc2Uge1xuICBwdWJsaWMgc3RhdHVzQ29kZTogbnVtYmVyO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVzcG9uc2VPcHRpb25zKSB7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gb3B0aW9ucy5zdGF0dXNDb2RlO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycyB8fCB7fTtcbiAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXNwb25zZTogdW5rbm93bik6IHJlc3BvbnNlIGlzIEh0dHBSZXNwb25zZSB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVzcG9uc2UgaXMgYSB2YWxpZCBIdHRwUmVzcG9uc2VcbiAgICBpZiAoIXJlc3BvbnNlKSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVzcCA9IHJlc3BvbnNlIGFzIGFueTtcbiAgICByZXR1cm4gdHlwZW9mIHJlc3Auc3RhdHVzQ29kZSA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgcmVzcC5oZWFkZXJzID09PSBcIm9iamVjdFwiO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./httpResponse\"), exports);\ntslib_1.__exportStar(require(\"./httpRequest\"), exports);\ntslib_1.__exportStar(require(\"./httpHandler\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostname\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseURBQStCO0FBQy9CLHdEQUE4QjtBQUM5Qix3REFBOEI7QUFDOUIsNERBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHR0cEhhbmRsZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzVmFsaWRIb3N0bmFtZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNWYWxpZEhvc3RuYW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2lzVmFsaWRIb3N0bmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxTQUFnQixlQUFlLENBQUMsUUFBZ0I7SUFDOUMsTUFBTSxXQUFXLEdBQUcsaUNBQWlDLENBQUM7SUFDdEQsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFIRCwwQ0FHQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkSG9zdG5hbWUoaG9zdG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBjb25zdCBob3N0UGF0dGVybiA9IC9eW2EtejAtOV1bYS16MC05XFwuXFwtXSpbYS16MC05XSQvO1xuICByZXR1cm4gaG9zdFBhdHRlcm4udGVzdChob3N0bmFtZSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = util_uri_escape_1.escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${util_uri_escape_1.escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${util_uri_escape_1.escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsOERBQXFEO0FBRXJELFNBQWdCLGdCQUFnQixDQUFDLEtBQXdCO0lBQ3ZELE1BQU0sS0FBSyxHQUFhLEVBQUUsQ0FBQztJQUMzQixLQUFLLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDekMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsR0FBRywyQkFBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN4QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNsRCxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLDJCQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQzdDO1NBQ0Y7YUFBTTtZQUNMLElBQUksT0FBTyxHQUFHLEdBQUcsQ0FBQztZQUNsQixJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQ3RDLE9BQU8sSUFBSSxJQUFJLDJCQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQzthQUNuQztZQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDckI7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN6QixDQUFDO0FBbkJELDRDQW1CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBlc2NhcGVVcmkgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFF1ZXJ5U3RyaW5nKHF1ZXJ5OiBRdWVyeVBhcmFtZXRlckJhZyk6IHN0cmluZyB7XG4gIGNvbnN0IHBhcnRzOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGxldCBrZXkgb2YgT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSkge1xuICAgIGNvbnN0IHZhbHVlID0gcXVlcnlba2V5XTtcbiAgICBrZXkgPSBlc2NhcGVVcmkoa2V5KTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBpTGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgaUxlbjsgaSsrKSB7XG4gICAgICAgIHBhcnRzLnB1c2goYCR7a2V5fT0ke2VzY2FwZVVyaSh2YWx1ZVtpXSl9YCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBxc0VudHJ5ID0ga2V5O1xuICAgICAgaWYgKHZhbHVlIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBxc0VudHJ5ICs9IGA9JHtlc2NhcGVVcmkodmFsdWUpfWA7XG4gICAgICB9XG4gICAgICBwYXJ0cy5wdXNoKHFzRW50cnkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKFwiJlwiKTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsU0FBZ0IsZ0JBQWdCLENBQUMsV0FBbUI7SUFDbEQsTUFBTSxLQUFLLEdBQXNCLEVBQUUsQ0FBQztJQUNwQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFN0MsSUFBSSxXQUFXLEVBQUU7UUFDZixLQUFLLE1BQU0sSUFBSSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDekMsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMxQyxHQUFHLEdBQUcsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsS0FBSyxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ25DO1lBQ0QsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxFQUFFO2dCQUNuQixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ3BCO2lCQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtnQkFDbkMsS0FBSyxDQUFDLEdBQUcsQ0FBbUIsQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7YUFDckQ7aUJBQU07Z0JBQ0wsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBVyxFQUFFLEtBQWUsQ0FBQyxDQUFDO2FBQ3REO1NBQ0Y7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQXRCRCw0Q0FzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VRdWVyeVN0cmluZyhxdWVyeXN0cmluZzogc3RyaW5nKTogUXVlcnlQYXJhbWV0ZXJCYWcge1xuICBjb25zdCBxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcgPSB7fTtcbiAgcXVlcnlzdHJpbmcgPSBxdWVyeXN0cmluZy5yZXBsYWNlKC9eXFw/LywgXCJcIik7XG5cbiAgaWYgKHF1ZXJ5c3RyaW5nKSB7XG4gICAgZm9yIChjb25zdCBwYWlyIG9mIHF1ZXJ5c3RyaW5nLnNwbGl0KFwiJlwiKSkge1xuICAgICAgbGV0IFtrZXksIHZhbHVlID0gbnVsbF0gPSBwYWlyLnNwbGl0KFwiPVwiKTtcbiAgICAgIGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChrZXkpO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGlmICghKGtleSBpbiBxdWVyeSkpIHtcbiAgICAgICAgcXVlcnlba2V5XSA9IHZhbHVlO1xuICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5W2tleV0pKSB7XG4gICAgICAgIChxdWVyeVtrZXldIGFzIEFycmF5PHN0cmluZz4pLnB1c2godmFsdWUgYXMgc3RyaW5nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXJ5W2tleV0gPSBbcXVlcnlba2V5XSBhcyBzdHJpbmcsIHZhbHVlIGFzIHN0cmluZ107XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1ZXJ5O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\n/**\n * Errors encountered when the client clock and server clock cannot agree on the\n * current time.\n *\n * These errors are retryable, assuming the SDK has enabled clock skew\n * correction.\n */\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\n/**\n * Errors that indicate the SDK is being throttled.\n *\n * These errors are always retryable.\n */\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\", // DynamoDB\n];\n/**\n * Error codes that indicate transient issues\n */\nexports.TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\n/**\n * Error codes that indicate transient issues\n */\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7Ozs7O0dBTUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHO0lBQ3BDLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsdUJBQXVCO0NBQ3hCLENBQUM7QUFFRjs7OztHQUlHO0FBQ1UsUUFBQSxzQkFBc0IsR0FBRztJQUNwQyx3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsd0NBQXdDO0lBQ3hDLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLFVBQVU7SUFDVixvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQiwwQkFBMEI7SUFDMUIsZ0NBQWdDLEVBQUUsV0FBVztDQUM5QyxDQUFDO0FBRUY7O0dBRUc7QUFDVSxRQUFBLHFCQUFxQixHQUFHLENBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0FBRWpIOztHQUVHO0FBQ1UsUUFBQSw0QkFBNEIsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvcnMgZW5jb3VudGVyZWQgd2hlbiB0aGUgY2xpZW50IGNsb2NrIGFuZCBzZXJ2ZXIgY2xvY2sgY2Fubm90IGFncmVlIG9uIHRoZVxuICogY3VycmVudCB0aW1lLlxuICpcbiAqIFRoZXNlIGVycm9ycyBhcmUgcmV0cnlhYmxlLCBhc3N1bWluZyB0aGUgU0RLIGhhcyBlbmFibGVkIGNsb2NrIHNrZXdcbiAqIGNvcnJlY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBDTE9DS19TS0VXX0VSUk9SX0NPREVTID0gW1xuICBcIkF1dGhGYWlsdXJlXCIsXG4gIFwiSW52YWxpZFNpZ25hdHVyZUV4Y2VwdGlvblwiLFxuICBcIlJlcXVlc3RFeHBpcmVkXCIsXG4gIFwiUmVxdWVzdEluVGhlRnV0dXJlXCIsXG4gIFwiUmVxdWVzdFRpbWVUb29Ta2V3ZWRcIixcbiAgXCJTaWduYXR1cmVEb2VzTm90TWF0Y2hcIixcbl07XG5cbi8qKlxuICogRXJyb3JzIHRoYXQgaW5kaWNhdGUgdGhlIFNESyBpcyBiZWluZyB0aHJvdHRsZWQuXG4gKlxuICogVGhlc2UgZXJyb3JzIGFyZSBhbHdheXMgcmV0cnlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19FUlJPUl9DT0RFUyA9IFtcbiAgXCJCYW5kd2lkdGhMaW1pdEV4Y2VlZGVkXCIsXG4gIFwiRUMyVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiTGltaXRFeGNlZWRlZEV4Y2VwdGlvblwiLFxuICBcIlByaW9yUmVxdWVzdE5vdENvbXBsZXRlXCIsXG4gIFwiUHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25cIixcbiAgXCJSZXF1ZXN0TGltaXRFeGNlZWRlZFwiLFxuICBcIlJlcXVlc3RUaHJvdHRsZWRcIixcbiAgXCJSZXF1ZXN0VGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiU2xvd0Rvd25cIixcbiAgXCJUaHJvdHRsZWRFeGNlcHRpb25cIixcbiAgXCJUaHJvdHRsaW5nXCIsXG4gIFwiVGhyb3R0bGluZ0V4Y2VwdGlvblwiLFxuICBcIlRvb01hbnlSZXF1ZXN0c0V4Y2VwdGlvblwiLFxuICBcIlRyYW5zYWN0aW9uSW5Qcm9ncmVzc0V4Y2VwdGlvblwiLCAvLyBEeW5hbW9EQlxuXTtcblxuLyoqXG4gKiBFcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRyYW5zaWVudCBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IFRSQU5TSUVOVF9FUlJPUl9DT0RFUyA9IFtcIkFib3J0RXJyb3JcIiwgXCJUaW1lb3V0RXJyb3JcIiwgXCJSZXF1ZXN0VGltZW91dFwiLCBcIlJlcXVlc3RUaW1lb3V0RXhjZXB0aW9uXCJdO1xuXG4vKipcbiAqIEVycm9yIGNvZGVzIHRoYXQgaW5kaWNhdGUgdHJhbnNpZW50IGlzc3Vlc1xuICovXG5leHBvcnQgY29uc3QgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUyA9IFs1MDAsIDUwMiwgNTAzLCA1MDRdO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsMkNBS3FCO0FBRWQsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLEtBQWUsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsS0FBSyxTQUFTLENBQUM7QUFBekUsUUFBQSxrQkFBa0Isc0JBQXVEO0FBRS9FLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRSxDQUFDLGtDQUFzQixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFBcEYsUUFBQSxnQkFBZ0Isb0JBQW9FO0FBRTFGLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTs7SUFDbkQsT0FBQSxDQUFBLE1BQUEsS0FBSyxDQUFDLFNBQVMsMENBQUUsY0FBYyxNQUFLLEdBQUc7UUFDdkMsa0NBQXNCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQSxNQUFBLEtBQUssQ0FBQyxVQUFVLDBDQUFFLFVBQVUsS0FBSSxJQUFJLENBQUE7Q0FBQSxDQUFDO0FBSDFCLFFBQUEsaUJBQWlCLHFCQUdTO0FBRWhDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTs7SUFDbEQsT0FBQSxpQ0FBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMxQyx3Q0FBNEIsQ0FBQyxRQUFRLENBQUMsQ0FBQSxNQUFBLEtBQUssQ0FBQyxTQUFTLDBDQUFFLGNBQWMsS0FBSSxDQUFDLENBQUMsQ0FBQTtDQUFBLENBQUM7QUFGakUsUUFBQSxnQkFBZ0Isb0JBRWlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2RrRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvc21pdGh5LWNsaWVudFwiO1xuXG5pbXBvcnQge1xuICBDTE9DS19TS0VXX0VSUk9SX0NPREVTLFxuICBUSFJPVFRMSU5HX0VSUk9SX0NPREVTLFxuICBUUkFOU0lFTlRfRVJST1JfQ09ERVMsXG4gIFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMsXG59IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgY29uc3QgaXNSZXRyeWFibGVCeVRyYWl0ID0gKGVycm9yOiBTZGtFcnJvcikgPT4gZXJyb3IuJHJldHJ5YWJsZSAhPT0gdW5kZWZpbmVkO1xuXG5leHBvcnQgY29uc3QgaXNDbG9ja1NrZXdFcnJvciA9IChlcnJvcjogU2RrRXJyb3IpID0+IENMT0NLX1NLRVdfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSk7XG5cbmV4cG9ydCBjb25zdCBpc1Rocm90dGxpbmdFcnJvciA9IChlcnJvcjogU2RrRXJyb3IpID0+XG4gIGVycm9yLiRtZXRhZGF0YT8uaHR0cFN0YXR1c0NvZGUgPT09IDQyOSB8fFxuICBUSFJPVFRMSU5HX0VSUk9SX0NPREVTLmluY2x1ZGVzKGVycm9yLm5hbWUpIHx8XG4gIGVycm9yLiRyZXRyeWFibGU/LnRocm90dGxpbmcgPT0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IGlzVHJhbnNpZW50RXJyb3IgPSAoZXJyb3I6IFNka0Vycm9yKSA9PlxuICBUUkFOU0lFTlRfRVJST1JfQ09ERVMuaW5jbHVkZXMoZXJyb3IubmFtZSkgfHxcbiAgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUy5pbmNsdWRlcyhlcnJvci4kbWV0YWRhdGE/Lmh0dHBTdGF0dXNDb2RlIHx8IDApO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = exports.loadSharedConfigFiles = exports.ENV_CONFIG_PATH = exports.ENV_CREDENTIALS_PATH = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = (init = {}) => {\n    const { filepath = process.env[exports.ENV_CREDENTIALS_PATH] || path_1.join(exports.getHomeDir(), \".aws\", \"credentials\"), configFilepath = process.env[exports.ENV_CONFIG_PATH] || path_1.join(exports.getHomeDir(), \".aws\", \"config\"), } = init;\n    return Promise.all([\n        slurpFile(configFilepath).then(parseIni).then(normalizeConfigFile).catch(swallowError),\n        slurpFile(filepath).then(parseIni).catch(swallowError),\n    ]).then((parsedFiles) => {\n        const [configFile, credentialsFile] = parsedFiles;\n        return {\n            configFile,\n            credentialsFile,\n        };\n    });\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst normalizeConfigFile = (data) => {\n    const map = {};\n    for (const key of Object.keys(data)) {\n        let matches;\n        if (key === \"default\") {\n            map.default = data.default;\n        }\n        else if ((matches = profileKeyRegex.exec(key))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_1, _2, normalizedKey] = matches;\n            if (normalizedKey) {\n                map[normalizedKey] = data[key];\n            }\n        }\n    }\n    return map;\n};\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n        const section = line.match(/^\\s*\\[([^\\[\\]]+)]\\s*$/);\n        if (section) {\n            currentSection = section[1];\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n            if (item) {\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][item[1]] = item[2];\n            }\n        }\n    }\n    return map;\n};\nconst slurpFile = (path) => new Promise((resolve, reject) => {\n    fs_1.readFile(path, \"utf8\", (err, data) => {\n        if (err) {\n            reject(err);\n        }\n        else {\n            resolve(data);\n        }\n    });\n});\n/**\n * Get the HOME directory for the current runtime.\n *\n * @internal\n */\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return os_1.homedir();\n};\nexports.getHomeDir = getHomeDir;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst hasHeader_1 = require(\"./hasHeader\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        // default to true if applyChecksum isn't set\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeRegionProvider(region);\n        this.credentialProvider = normalizeCredentialsProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = moveHeadersToQuery_1.moveHeadersToQuery(prepareRequest_1.prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash_1.getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await getPayloadHash_1.getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = util_hex_encoding_1.toHex(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = prepareRequest_1.prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash_1.getPayloadHash(request, this.sha256);\n        if (!hasHeader_1.hasHeader(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery_1.getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${util_hex_encoding_1.toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n            return `/${doubleEncoded.replace(/%2F/g, \"/\")}`;\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return credentialDerivation_1.getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = utilDate_1.iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.substr(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\nconst normalizeRegionProvider = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    else {\n        return region;\n    }\n};\nconst normalizeCredentialsProvider = (credentials) => {\n    if (typeof credentials === \"object\") {\n        const promisified = Promise.resolve(credentials);\n        return () => promisified;\n    }\n    else {\n        return credentials;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneRequest = void 0;\n/**\n * @internal\n */\nfunction cloneRequest({ headers, query, ...rest }) {\n    return {\n        ...rest,\n        headers: { ...headers },\n        query: query ? cloneQuery(query) : undefined,\n    };\n}\nexports.cloneRequest = cloneRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvbmVSZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nsb25lUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQTs7R0FFRztBQUNILFNBQWdCLFlBQVksQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLEVBQWU7SUFDbkUsT0FBTztRQUNMLEdBQUcsSUFBSTtRQUNQLE9BQU8sRUFBRSxFQUFFLEdBQUcsT0FBTyxFQUFFO1FBQ3ZCLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztLQUM3QyxDQUFDO0FBQ0osQ0FBQztBQU5ELG9DQU1DO0FBRUQsU0FBUyxVQUFVLENBQUMsS0FBd0I7SUFDMUMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQXdCLEVBQUUsU0FBaUIsRUFBRSxFQUFFO1FBQy9FLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMvQixPQUFPO1lBQ0wsR0FBRyxLQUFLO1lBQ1IsQ0FBQyxTQUFTLENBQUMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7U0FDdkQsQ0FBQztJQUNKLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNULENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCwgUXVlcnlQYXJhbWV0ZXJCYWcgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsb25lUmVxdWVzdCh7IGhlYWRlcnMsIHF1ZXJ5LCAuLi5yZXN0IH06IEh0dHBSZXF1ZXN0KTogSHR0cFJlcXVlc3Qge1xuICByZXR1cm4ge1xuICAgIC4uLnJlc3QsXG4gICAgaGVhZGVyczogeyAuLi5oZWFkZXJzIH0sXG4gICAgcXVlcnk6IHF1ZXJ5ID8gY2xvbmVRdWVyeShxdWVyeSkgOiB1bmRlZmluZWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsb25lUXVlcnkocXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnKTogUXVlcnlQYXJhbWV0ZXJCYWcge1xuICByZXR1cm4gT2JqZWN0LmtleXMocXVlcnkpLnJlZHVjZSgoY2Fycnk6IFF1ZXJ5UGFyYW1ldGVyQmFnLCBwYXJhbU5hbWU6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHBhcmFtID0gcXVlcnlbcGFyYW1OYW1lXTtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uY2FycnksXG4gICAgICBbcGFyYW1OYW1lXTogQXJyYXkuaXNBcnJheShwYXJhbSkgPyBbLi4ucGFyYW1dIDogcGFyYW0sXG4gICAgfTtcbiAgfSwge30pO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLHFCQUFxQixHQUFHLGlCQUFpQixDQUFDO0FBQzFDLFFBQUEsc0JBQXNCLEdBQUcsa0JBQWtCLENBQUM7QUFDNUMsUUFBQSxvQkFBb0IsR0FBRyxZQUFZLENBQUM7QUFDcEMsUUFBQSwwQkFBMEIsR0FBRyxxQkFBcUIsQ0FBQztBQUNuRCxRQUFBLG1CQUFtQixHQUFHLGVBQWUsQ0FBQztBQUN0QyxRQUFBLHFCQUFxQixHQUFHLGlCQUFpQixDQUFDO0FBQzFDLFFBQUEsaUJBQWlCLEdBQUcsc0JBQXNCLENBQUM7QUFFM0MsUUFBQSxXQUFXLEdBQUcsZUFBZSxDQUFDO0FBQzlCLFFBQUEsZUFBZSxHQUFHLDRCQUFvQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3JELFFBQUEsV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUNyQixRQUFBLGlCQUFpQixHQUFHLENBQUMsbUJBQVcsRUFBRSx1QkFBZSxFQUFFLG1CQUFXLENBQUMsQ0FBQztBQUNoRSxRQUFBLGdCQUFnQixHQUFHLDZCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3ZELFFBQUEsYUFBYSxHQUFHLHNCQUFzQixDQUFDO0FBQ3ZDLFFBQUEsWUFBWSxHQUFHLHlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQy9DLFFBQUEsV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUVyQixRQUFBLHlCQUF5QixHQUFHO0lBQ3ZDLGFBQWEsRUFBRSxJQUFJO0lBQ25CLGVBQWUsRUFBRSxJQUFJO0lBQ3JCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLE1BQU0sRUFBRSxJQUFJO0lBQ1osSUFBSSxFQUFFLElBQUk7SUFDVixZQUFZLEVBQUUsSUFBSTtJQUNsQixjQUFjLEVBQUUsSUFBSTtJQUNwQixNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxJQUFJO0lBQ2IsRUFBRSxFQUFFLElBQUk7SUFDUixPQUFPLEVBQUUsSUFBSTtJQUNiLG1CQUFtQixFQUFFLElBQUk7SUFDekIsT0FBTyxFQUFFLElBQUk7SUFDYixZQUFZLEVBQUUsSUFBSTtJQUNsQixpQkFBaUIsRUFBRSxJQUFJO0NBQ3hCLENBQUM7QUFFVyxRQUFBLG9CQUFvQixHQUFHLFNBQVMsQ0FBQztBQUVqQyxRQUFBLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztBQUU3QixRQUFBLG1CQUFtQixHQUFHLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBRTdDLFFBQUEsb0JBQW9CLEdBQUcsa0JBQWtCLENBQUM7QUFFMUMsUUFBQSwwQkFBMEIsR0FBRywwQkFBMEIsQ0FBQztBQUV4RCxRQUFBLGdCQUFnQixHQUFHLGtCQUFrQixDQUFDO0FBRXRDLFFBQUEsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUNwQixRQUFBLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztBQUVyQyxRQUFBLGlCQUFpQixHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBTEdPUklUSE1fUVVFUllfUEFSQU0gPSBcIlgtQW16LUFsZ29yaXRobVwiO1xuZXhwb3J0IGNvbnN0IENSRURFTlRJQUxfUVVFUllfUEFSQU0gPSBcIlgtQW16LUNyZWRlbnRpYWxcIjtcbmV4cG9ydCBjb25zdCBBTVpfREFURV9RVUVSWV9QQVJBTSA9IFwiWC1BbXotRGF0ZVwiO1xuZXhwb3J0IGNvbnN0IFNJR05FRF9IRUFERVJTX1FVRVJZX1BBUkFNID0gXCJYLUFtei1TaWduZWRIZWFkZXJzXCI7XG5leHBvcnQgY29uc3QgRVhQSVJFU19RVUVSWV9QQVJBTSA9IFwiWC1BbXotRXhwaXJlc1wiO1xuZXhwb3J0IGNvbnN0IFNJR05BVFVSRV9RVUVSWV9QQVJBTSA9IFwiWC1BbXotU2lnbmF0dXJlXCI7XG5leHBvcnQgY29uc3QgVE9LRU5fUVVFUllfUEFSQU0gPSBcIlgtQW16LVNlY3VyaXR5LVRva2VuXCI7XG5cbmV4cG9ydCBjb25zdCBBVVRIX0hFQURFUiA9IFwiYXV0aG9yaXphdGlvblwiO1xuZXhwb3J0IGNvbnN0IEFNWl9EQVRFX0hFQURFUiA9IEFNWl9EQVRFX1FVRVJZX1BBUkFNLnRvTG93ZXJDYXNlKCk7XG5leHBvcnQgY29uc3QgREFURV9IRUFERVIgPSBcImRhdGVcIjtcbmV4cG9ydCBjb25zdCBHRU5FUkFURURfSEVBREVSUyA9IFtBVVRIX0hFQURFUiwgQU1aX0RBVEVfSEVBREVSLCBEQVRFX0hFQURFUl07XG5leHBvcnQgY29uc3QgU0lHTkFUVVJFX0hFQURFUiA9IFNJR05BVFVSRV9RVUVSWV9QQVJBTS50b0xvd2VyQ2FzZSgpO1xuZXhwb3J0IGNvbnN0IFNIQTI1Nl9IRUFERVIgPSBcIngtYW16LWNvbnRlbnQtc2hhMjU2XCI7XG5leHBvcnQgY29uc3QgVE9LRU5fSEVBREVSID0gVE9LRU5fUVVFUllfUEFSQU0udG9Mb3dlckNhc2UoKTtcbmV4cG9ydCBjb25zdCBIT1NUX0hFQURFUiA9IFwiaG9zdFwiO1xuXG5leHBvcnQgY29uc3QgQUxXQVlTX1VOU0lHTkFCTEVfSEVBREVSUyA9IHtcbiAgYXV0aG9yaXphdGlvbjogdHJ1ZSxcbiAgXCJjYWNoZS1jb250cm9sXCI6IHRydWUsXG4gIGNvbm5lY3Rpb246IHRydWUsXG4gIGV4cGVjdDogdHJ1ZSxcbiAgZnJvbTogdHJ1ZSxcbiAgXCJrZWVwLWFsaXZlXCI6IHRydWUsXG4gIFwibWF4LWZvcndhcmRzXCI6IHRydWUsXG4gIHByYWdtYTogdHJ1ZSxcbiAgcmVmZXJlcjogdHJ1ZSxcbiAgdGU6IHRydWUsXG4gIHRyYWlsZXI6IHRydWUsXG4gIFwidHJhbnNmZXItZW5jb2RpbmdcIjogdHJ1ZSxcbiAgdXBncmFkZTogdHJ1ZSxcbiAgXCJ1c2VyLWFnZW50XCI6IHRydWUsXG4gIFwieC1hbXpuLXRyYWNlLWlkXCI6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgUFJPWFlfSEVBREVSX1BBVFRFUk4gPSAvXnByb3h5LS87XG5cbmV4cG9ydCBjb25zdCBTRUNfSEVBREVSX1BBVFRFUk4gPSAvXnNlYy0vO1xuXG5leHBvcnQgY29uc3QgVU5TSUdOQUJMRV9QQVRURVJOUyA9IFsvXnByb3h5LS9pLCAvXnNlYy0vaV07XG5cbmV4cG9ydCBjb25zdCBBTEdPUklUSE1fSURFTlRJRklFUiA9IFwiQVdTNC1ITUFDLVNIQTI1NlwiO1xuXG5leHBvcnQgY29uc3QgRVZFTlRfQUxHT1JJVEhNX0lERU5USUZJRVIgPSBcIkFXUzQtSE1BQy1TSEEyNTYtUEFZTE9BRFwiO1xuXG5leHBvcnQgY29uc3QgVU5TSUdORURfUEFZTE9BRCA9IFwiVU5TSUdORUQtUEFZTE9BRFwiO1xuXG5leHBvcnQgY29uc3QgTUFYX0NBQ0hFX1NJWkUgPSA1MDtcbmV4cG9ydCBjb25zdCBLRVlfVFlQRV9JREVOVElGSUVSID0gXCJhd3M0X3JlcXVlc3RcIjtcblxuZXhwb3J0IGNvbnN0IE1BWF9QUkVTSUdORURfVFRMID0gNjAgKiA2MCAqIDI0ICogNztcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\n/**\n * Create a string describing the scope of credentials used to sign a request.\n *\n * @param shortDate The current calendar date in the form YYYYMMDD.\n * @param region    The AWS region in which the service resides.\n * @param service   The service to which the signed request is being sent.\n */\nfunction createScope(shortDate, region, service) {\n    return `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\n}\nexports.createScope = createScope;\n/**\n * Derive a signing key from its composite parts\n *\n * @param sha256Constructor A constructor function that can instantiate SHA-256\n *                          hash objects.\n * @param credentials       The credentials with which the request will be\n *                          signed.\n * @param shortDate         The current calendar date in the form YYYYMMDD.\n * @param region            The AWS region in which the service resides.\n * @param service           The service to which the signed request is being\n *                          sent.\n */\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${util_hex_encoding_1.toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\n/**\n * @internal\n */\nfunction clearCredentialCache() {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n}\nexports.clearCredentialCache = clearCredentialCache;\nfunction hmac(ctor, secret, data) {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGVudGlhbERlcml2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3JlZGVudGlhbERlcml2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0Esa0VBQW1EO0FBRW5ELDJDQUFrRTtBQUVsRSxNQUFNLGVBQWUsR0FBa0MsRUFBRSxDQUFDO0FBQzFELE1BQU0sVUFBVSxHQUFrQixFQUFFLENBQUM7QUFFckM7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsV0FBVyxDQUFDLFNBQWlCLEVBQUUsTUFBYyxFQUFFLE9BQWU7SUFDNUUsT0FBTyxHQUFHLFNBQVMsSUFBSSxNQUFNLElBQUksT0FBTyxJQUFJLCtCQUFtQixFQUFFLENBQUM7QUFDcEUsQ0FBQztBQUZELGtDQUVDO0FBRUQ7Ozs7Ozs7Ozs7O0dBV0c7QUFDSSxNQUFNLGFBQWEsR0FBRyxLQUFLLEVBQ2hDLGlCQUFrQyxFQUNsQyxXQUF3QixFQUN4QixTQUFpQixFQUNqQixNQUFjLEVBQ2QsT0FBZSxFQUNNLEVBQUU7SUFDdkIsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsV0FBVyxDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDdEcsTUFBTSxRQUFRLEdBQUcsR0FBRyxTQUFTLElBQUksTUFBTSxJQUFJLE9BQU8sSUFBSSx5QkFBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNyRyxJQUFJLFFBQVEsSUFBSSxlQUFlLEVBQUU7UUFDL0IsT0FBTyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbEM7SUFFRCxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFCLE9BQU8sVUFBVSxDQUFDLE1BQU0sR0FBRywwQkFBYyxFQUFFO1FBQ3pDLE9BQU8sZUFBZSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQVksQ0FBQyxDQUFDO0tBQ3REO0lBRUQsSUFBSSxHQUFHLEdBQWUsT0FBTyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0QsS0FBSyxNQUFNLFFBQVEsSUFBSSxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLCtCQUFtQixDQUFDLEVBQUU7UUFDeEUsR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNwRDtJQUNELE9BQU8sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBaUIsQ0FBQyxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQXZCVyxRQUFBLGFBQWEsaUJBdUJ4QjtBQUVGOztHQUVHO0FBQ0gsU0FBZ0Isb0JBQW9CO0lBQ2xDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7UUFDaEQsT0FBTyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBTEQsb0RBS0M7QUFFRCxTQUFTLElBQUksQ0FBQyxJQUFxQixFQUFFLE1BQWtCLEVBQUUsSUFBZ0I7SUFDdkUsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHMsIEhhc2hDb25zdHJ1Y3RvciwgU291cmNlRGF0YSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgdG9IZXggfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1oZXgtZW5jb2RpbmdcIjtcblxuaW1wb3J0IHsgS0VZX1RZUEVfSURFTlRJRklFUiwgTUFYX0NBQ0hFX1NJWkUgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuY29uc3Qgc2lnbmluZ0tleUNhY2hlOiB7IFtrZXk6IHN0cmluZ106IFVpbnQ4QXJyYXkgfSA9IHt9O1xuY29uc3QgY2FjaGVRdWV1ZTogQXJyYXk8c3RyaW5nPiA9IFtdO1xuXG4vKipcbiAqIENyZWF0ZSBhIHN0cmluZyBkZXNjcmliaW5nIHRoZSBzY29wZSBvZiBjcmVkZW50aWFscyB1c2VkIHRvIHNpZ24gYSByZXF1ZXN0LlxuICpcbiAqIEBwYXJhbSBzaG9ydERhdGUgVGhlIGN1cnJlbnQgY2FsZW5kYXIgZGF0ZSBpbiB0aGUgZm9ybSBZWVlZTU1ERC5cbiAqIEBwYXJhbSByZWdpb24gICAgVGhlIEFXUyByZWdpb24gaW4gd2hpY2ggdGhlIHNlcnZpY2UgcmVzaWRlcy5cbiAqIEBwYXJhbSBzZXJ2aWNlICAgVGhlIHNlcnZpY2UgdG8gd2hpY2ggdGhlIHNpZ25lZCByZXF1ZXN0IGlzIGJlaW5nIHNlbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTY29wZShzaG9ydERhdGU6IHN0cmluZywgcmVnaW9uOiBzdHJpbmcsIHNlcnZpY2U6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBgJHtzaG9ydERhdGV9LyR7cmVnaW9ufS8ke3NlcnZpY2V9LyR7S0VZX1RZUEVfSURFTlRJRklFUn1gO1xufVxuXG4vKipcbiAqIERlcml2ZSBhIHNpZ25pbmcga2V5IGZyb20gaXRzIGNvbXBvc2l0ZSBwYXJ0c1xuICpcbiAqIEBwYXJhbSBzaGEyNTZDb25zdHJ1Y3RvciBBIGNvbnN0cnVjdG9yIGZ1bmN0aW9uIHRoYXQgY2FuIGluc3RhbnRpYXRlIFNIQS0yNTZcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNoIG9iamVjdHMuXG4gKiBAcGFyYW0gY3JlZGVudGlhbHMgICAgICAgVGhlIGNyZWRlbnRpYWxzIHdpdGggd2hpY2ggdGhlIHJlcXVlc3Qgd2lsbCBiZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25lZC5cbiAqIEBwYXJhbSBzaG9ydERhdGUgICAgICAgICBUaGUgY3VycmVudCBjYWxlbmRhciBkYXRlIGluIHRoZSBmb3JtIFlZWVlNTURELlxuICogQHBhcmFtIHJlZ2lvbiAgICAgICAgICAgIFRoZSBBV1MgcmVnaW9uIGluIHdoaWNoIHRoZSBzZXJ2aWNlIHJlc2lkZXMuXG4gKiBAcGFyYW0gc2VydmljZSAgICAgICAgICAgVGhlIHNlcnZpY2UgdG8gd2hpY2ggdGhlIHNpZ25lZCByZXF1ZXN0IGlzIGJlaW5nXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VudC5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFNpZ25pbmdLZXkgPSBhc3luYyAoXG4gIHNoYTI1NkNvbnN0cnVjdG9yOiBIYXNoQ29uc3RydWN0b3IsXG4gIGNyZWRlbnRpYWxzOiBDcmVkZW50aWFscyxcbiAgc2hvcnREYXRlOiBzdHJpbmcsXG4gIHJlZ2lvbjogc3RyaW5nLFxuICBzZXJ2aWNlOiBzdHJpbmdcbik6IFByb21pc2U8VWludDhBcnJheT4gPT4ge1xuICBjb25zdCBjcmVkc0hhc2ggPSBhd2FpdCBobWFjKHNoYTI1NkNvbnN0cnVjdG9yLCBjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXksIGNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkKTtcbiAgY29uc3QgY2FjaGVLZXkgPSBgJHtzaG9ydERhdGV9OiR7cmVnaW9ufToke3NlcnZpY2V9OiR7dG9IZXgoY3JlZHNIYXNoKX06JHtjcmVkZW50aWFscy5zZXNzaW9uVG9rZW59YDtcbiAgaWYgKGNhY2hlS2V5IGluIHNpZ25pbmdLZXlDYWNoZSkge1xuICAgIHJldHVybiBzaWduaW5nS2V5Q2FjaGVbY2FjaGVLZXldO1xuICB9XG5cbiAgY2FjaGVRdWV1ZS5wdXNoKGNhY2hlS2V5KTtcbiAgd2hpbGUgKGNhY2hlUXVldWUubGVuZ3RoID4gTUFYX0NBQ0hFX1NJWkUpIHtcbiAgICBkZWxldGUgc2lnbmluZ0tleUNhY2hlW2NhY2hlUXVldWUuc2hpZnQoKSBhcyBzdHJpbmddO1xuICB9XG5cbiAgbGV0IGtleTogU291cmNlRGF0YSA9IGBBV1M0JHtjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXl9YDtcbiAgZm9yIChjb25zdCBzaWduYWJsZSBvZiBbc2hvcnREYXRlLCByZWdpb24sIHNlcnZpY2UsIEtFWV9UWVBFX0lERU5USUZJRVJdKSB7XG4gICAga2V5ID0gYXdhaXQgaG1hYyhzaGEyNTZDb25zdHJ1Y3Rvciwga2V5LCBzaWduYWJsZSk7XG4gIH1cbiAgcmV0dXJuIChzaWduaW5nS2V5Q2FjaGVbY2FjaGVLZXldID0ga2V5IGFzIFVpbnQ4QXJyYXkpO1xufTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ3JlZGVudGlhbENhY2hlKCk6IHZvaWQge1xuICBjYWNoZVF1ZXVlLmxlbmd0aCA9IDA7XG4gIE9iamVjdC5rZXlzKHNpZ25pbmdLZXlDYWNoZSkuZm9yRWFjaCgoY2FjaGVLZXkpID0+IHtcbiAgICBkZWxldGUgc2lnbmluZ0tleUNhY2hlW2NhY2hlS2V5XTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGhtYWMoY3RvcjogSGFzaENvbnN0cnVjdG9yLCBzZWNyZXQ6IFNvdXJjZURhdGEsIGRhdGE6IFNvdXJjZURhdGEpOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgY29uc3QgaGFzaCA9IG5ldyBjdG9yKHNlY3JldCk7XG4gIGhhc2gudXBkYXRlKGRhdGEpO1xuICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nfunction getCanonicalHeaders({ headers }, unsignableHeaders, signableHeaders) {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n}\nexports.getCanonicalHeaders = getCanonicalHeaders;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsSGVhZGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZXRDYW5vbmljYWxIZWFkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLDJDQUFrRztBQUVsRzs7R0FFRztBQUNILFNBQWdCLG1CQUFtQixDQUNqQyxFQUFFLE9BQU8sRUFBZSxFQUN4QixpQkFBK0IsRUFDL0IsZUFBNkI7SUFFN0IsTUFBTSxTQUFTLEdBQWMsRUFBRSxDQUFDO0lBQ2hDLEtBQUssTUFBTSxVQUFVLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUNwRCxNQUFNLG1CQUFtQixHQUFHLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNyRCxJQUNFLG1CQUFtQixJQUFJLHFDQUF5QjthQUNoRCxpQkFBaUIsYUFBakIsaUJBQWlCLHVCQUFqQixpQkFBaUIsQ0FBRSxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtZQUMzQyxnQ0FBb0IsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUM7WUFDOUMsOEJBQWtCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEVBQzVDO1lBQ0EsSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxFQUFFO2dCQUN0RixTQUFTO2FBQ1Y7U0FDRjtRQUVELFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0tBQ2xGO0lBRUQsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQXZCRCxrREF1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcsIEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IEFMV0FZU19VTlNJR05BQkxFX0hFQURFUlMsIFBST1hZX0hFQURFUl9QQVRURVJOLCBTRUNfSEVBREVSX1BBVFRFUk4gfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENhbm9uaWNhbEhlYWRlcnMoXG4gIHsgaGVhZGVycyB9OiBIdHRwUmVxdWVzdCxcbiAgdW5zaWduYWJsZUhlYWRlcnM/OiBTZXQ8c3RyaW5nPixcbiAgc2lnbmFibGVIZWFkZXJzPzogU2V0PHN0cmluZz5cbik6IEhlYWRlckJhZyB7XG4gIGNvbnN0IGNhbm9uaWNhbDogSGVhZGVyQmFnID0ge307XG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhoZWFkZXJzKS5zb3J0KCkpIHtcbiAgICBjb25zdCBjYW5vbmljYWxIZWFkZXJOYW1lID0gaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChcbiAgICAgIGNhbm9uaWNhbEhlYWRlck5hbWUgaW4gQUxXQVlTX1VOU0lHTkFCTEVfSEVBREVSUyB8fFxuICAgICAgdW5zaWduYWJsZUhlYWRlcnM/LmhhcyhjYW5vbmljYWxIZWFkZXJOYW1lKSB8fFxuICAgICAgUFJPWFlfSEVBREVSX1BBVFRFUk4udGVzdChjYW5vbmljYWxIZWFkZXJOYW1lKSB8fFxuICAgICAgU0VDX0hFQURFUl9QQVRURVJOLnRlc3QoY2Fub25pY2FsSGVhZGVyTmFtZSlcbiAgICApIHtcbiAgICAgIGlmICghc2lnbmFibGVIZWFkZXJzIHx8IChzaWduYWJsZUhlYWRlcnMgJiYgIXNpZ25hYmxlSGVhZGVycy5oYXMoY2Fub25pY2FsSGVhZGVyTmFtZSkpKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNhbm9uaWNhbFtjYW5vbmljYWxIZWFkZXJOYW1lXSA9IGhlYWRlcnNbaGVhZGVyTmFtZV0udHJpbSgpLnJlcGxhY2UoL1xccysvZywgXCIgXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbm9uaWNhbDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nfunction getCanonicalQuery({ query = {} }) {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized) // omit any falsy values\n        .join(\"&\");\n}\nexports.getCanonicalQuery = getCanonicalQuery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsUXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0Q2Fub25pY2FsUXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsOERBQXFEO0FBRXJELDJDQUErQztBQUUvQzs7R0FFRztBQUNILFNBQWdCLGlCQUFpQixDQUFDLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBZTtJQUMzRCxNQUFNLElBQUksR0FBa0IsRUFBRSxDQUFDO0lBQy9CLE1BQU0sVUFBVSxHQUE4QixFQUFFLENBQUM7SUFDakQsS0FBSyxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1FBQzNDLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLDRCQUFnQixFQUFFO1lBQzFDLFNBQVM7U0FDVjtRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDZixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekIsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDN0IsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsMkJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSwyQkFBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDM0Q7YUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDL0IsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUs7aUJBQ3BCLEtBQUssQ0FBQyxDQUFDLENBQUM7aUJBQ1IsSUFBSSxFQUFFO2lCQUNOLE1BQU0sQ0FDTCxDQUFDLE9BQXNCLEVBQUUsS0FBYSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRywyQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLDJCQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ3BHLEVBQUUsQ0FDSDtpQkFDQSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDZDtLQUNGO0lBRUQsT0FBTyxJQUFJO1NBQ1IsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDN0IsTUFBTSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyx3QkFBd0I7U0FDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2YsQ0FBQztBQTVCRCw4Q0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgZXNjYXBlVXJpIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXJpLWVzY2FwZVwiO1xuXG5pbXBvcnQgeyBTSUdOQVRVUkVfSEVBREVSIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYW5vbmljYWxRdWVyeSh7IHF1ZXJ5ID0ge30gfTogSHR0cFJlcXVlc3QpOiBzdHJpbmcge1xuICBjb25zdCBrZXlzOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIGNvbnN0IHNlcmlhbGl6ZWQ6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7fTtcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSkge1xuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gU0lHTkFUVVJFX0hFQURFUikge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAga2V5cy5wdXNoKGtleSk7XG4gICAgY29uc3QgdmFsdWUgPSBxdWVyeVtrZXldO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHNlcmlhbGl6ZWRba2V5XSA9IGAke2VzY2FwZVVyaShrZXkpfT0ke2VzY2FwZVVyaSh2YWx1ZSl9YDtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBzZXJpYWxpemVkW2tleV0gPSB2YWx1ZVxuICAgICAgICAuc2xpY2UoMClcbiAgICAgICAgLnNvcnQoKVxuICAgICAgICAucmVkdWNlKFxuICAgICAgICAgIChlbmNvZGVkOiBBcnJheTxzdHJpbmc+LCB2YWx1ZTogc3RyaW5nKSA9PiBlbmNvZGVkLmNvbmNhdChbYCR7ZXNjYXBlVXJpKGtleSl9PSR7ZXNjYXBlVXJpKHZhbHVlKX1gXSksXG4gICAgICAgICAgW11cbiAgICAgICAgKVxuICAgICAgICAuam9pbihcIiZcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGtleXNcbiAgICAubWFwKChrZXkpID0+IHNlcmlhbGl6ZWRba2V5XSlcbiAgICAuZmlsdGVyKChzZXJpYWxpemVkKSA9PiBzZXJpYWxpemVkKSAvLyBvbWl0IGFueSBmYWxzeSB2YWx1ZXNcbiAgICAuam9pbihcIiZcIik7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nasync function getPayloadHash({ headers, body }, hashConstructor) {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || is_array_buffer_1.isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return util_hex_encoding_1.toHex(await hashCtor.digest());\n    }\n    // As any defined body that is not a string or binary data is a stream, this\n    // body is unsignable. Attempt to send the request with an unsigned payload,\n    // which may or may not be accepted by the service.\n    return constants_1.UNSIGNED_PAYLOAD;\n}\nexports.getPayloadHash = getPayloadHash;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UGF5bG9hZEhhc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0UGF5bG9hZEhhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQXlEO0FBRXpELGtFQUFtRDtBQUVuRCwyQ0FBOEQ7QUFFOUQ7O0dBRUc7QUFDSSxLQUFLLFVBQVUsY0FBYyxDQUNsQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQWUsRUFDOUIsZUFBZ0M7SUFFaEMsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzdDLElBQUksVUFBVSxDQUFDLFdBQVcsRUFBRSxLQUFLLHlCQUFhLEVBQUU7WUFDOUMsT0FBTyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDNUI7S0FDRjtJQUVELElBQUksSUFBSSxJQUFJLFNBQVMsRUFBRTtRQUNyQixPQUFPLGtFQUFrRSxDQUFDO0tBQzNFO1NBQU0sSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSwrQkFBYSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3RGLE1BQU0sUUFBUSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7UUFDdkMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QixPQUFPLHlCQUFLLENBQUMsTUFBTSxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztLQUN2QztJQUVELDRFQUE0RTtJQUM1RSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sNEJBQWdCLENBQUM7QUFDMUIsQ0FBQztBQXRCRCx3Q0FzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0FycmF5QnVmZmVyIH0gZnJvbSBcIkBhd3Mtc2RrL2lzLWFycmF5LWJ1ZmZlclwiO1xuaW1wb3J0IHsgSGFzaENvbnN0cnVjdG9yLCBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgdG9IZXggfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1oZXgtZW5jb2RpbmdcIjtcblxuaW1wb3J0IHsgU0hBMjU2X0hFQURFUiwgVU5TSUdORURfUEFZTE9BRCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGF5bG9hZEhhc2goXG4gIHsgaGVhZGVycywgYm9keSB9OiBIdHRwUmVxdWVzdCxcbiAgaGFzaENvbnN0cnVjdG9yOiBIYXNoQ29uc3RydWN0b3Jcbik6IFByb21pc2U8c3RyaW5nPiB7XG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhoZWFkZXJzKSkge1xuICAgIGlmIChoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFNIQTI1Nl9IRUFERVIpIHtcbiAgICAgIHJldHVybiBoZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgIH1cbiAgfVxuXG4gIGlmIChib2R5ID09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBcImUzYjBjNDQyOThmYzFjMTQ5YWZiZjRjODk5NmZiOTI0MjdhZTQxZTQ2NDliOTM0Y2E0OTU5OTFiNzg1MmI4NTVcIjtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYm9keSA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcoYm9keSkgfHwgaXNBcnJheUJ1ZmZlcihib2R5KSkge1xuICAgIGNvbnN0IGhhc2hDdG9yID0gbmV3IGhhc2hDb25zdHJ1Y3RvcigpO1xuICAgIGhhc2hDdG9yLnVwZGF0ZShib2R5KTtcbiAgICByZXR1cm4gdG9IZXgoYXdhaXQgaGFzaEN0b3IuZGlnZXN0KCkpO1xuICB9XG5cbiAgLy8gQXMgYW55IGRlZmluZWQgYm9keSB0aGF0IGlzIG5vdCBhIHN0cmluZyBvciBiaW5hcnkgZGF0YSBpcyBhIHN0cmVhbSwgdGhpc1xuICAvLyBib2R5IGlzIHVuc2lnbmFibGUuIEF0dGVtcHQgdG8gc2VuZCB0aGUgcmVxdWVzdCB3aXRoIGFuIHVuc2lnbmVkIHBheWxvYWQsXG4gIC8vIHdoaWNoIG1heSBvciBtYXkgbm90IGJlIGFjY2VwdGVkIGJ5IHRoZSBzZXJ2aWNlLlxuICByZXR1cm4gVU5TSUdORURfUEFZTE9BRDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasHeader = void 0;\nfunction hasHeader(soughtHeader, headers) {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasHeader = hasHeader;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzSGVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hhc0hlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxTQUFnQixTQUFTLENBQUMsWUFBb0IsRUFBRSxPQUFrQjtJQUNoRSxZQUFZLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFDLEtBQUssTUFBTSxVQUFVLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUM3QyxJQUFJLFlBQVksS0FBSyxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDN0MsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBVEQsOEJBU0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0hlYWRlcihzb3VnaHRIZWFkZXI6IHN0cmluZywgaGVhZGVyczogSGVhZGVyQmFnKTogYm9vbGVhbiB7XG4gIHNvdWdodEhlYWRlciA9IHNvdWdodEhlYWRlci50b0xvd2VyQ2FzZSgpO1xuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMoaGVhZGVycykpIHtcbiAgICBpZiAoc291Z2h0SGVhZGVyID09PSBoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./credentialDerivation\"), exports);\ntslib_1.__exportStar(require(\"./SignatureV4\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQXVDO0FBQ3ZDLHdEQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NyZWRlbnRpYWxEZXJpdmF0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9TaWduYXR1cmVWNFwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\n/**\n * @internal\n */\nfunction moveHeadersToQuery(request, options = {}) {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.substr(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n}\nexports.moveHeadersToQuery = moveHeadersToQuery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92ZUhlYWRlcnNUb1F1ZXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vdmVIZWFkZXJzVG9RdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxpREFBOEM7QUFFOUM7O0dBRUc7QUFDSCxTQUFnQixrQkFBa0IsQ0FDaEMsT0FBb0IsRUFDcEIsVUFBZ0QsRUFBRTs7SUFFbEQsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEdBQUcsRUFBdUIsRUFBRSxHQUNoRCxPQUFRLE9BQWUsQ0FBQyxLQUFLLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBRSxPQUFlLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLDJCQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEcsS0FBSyxNQUFNLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ3ZDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNqQyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUEsTUFBQSxPQUFPLENBQUMsa0JBQWtCLDBDQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQSxFQUFFO1lBQzlFLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDNUIsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7S0FDRjtJQUVELE9BQU87UUFDTCxHQUFHLE9BQU87UUFDVixPQUFPO1FBQ1AsS0FBSztLQUNOLENBQUM7QUFDSixDQUFDO0FBbkJELGdEQW1CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0LCBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1vdmVIZWFkZXJzVG9RdWVyeShcbiAgcmVxdWVzdDogSHR0cFJlcXVlc3QsXG4gIG9wdGlvbnM6IHsgdW5ob2lzdGFibGVIZWFkZXJzPzogU2V0PHN0cmluZz4gfSA9IHt9XG4pOiBIdHRwUmVxdWVzdCAmIHsgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnIH0ge1xuICBjb25zdCB7IGhlYWRlcnMsIHF1ZXJ5ID0ge30gYXMgUXVlcnlQYXJhbWV0ZXJCYWcgfSA9XG4gICAgdHlwZW9mIChyZXF1ZXN0IGFzIGFueSkuY2xvbmUgPT09IFwiZnVuY3Rpb25cIiA/IChyZXF1ZXN0IGFzIGFueSkuY2xvbmUoKSA6IGNsb25lUmVxdWVzdChyZXF1ZXN0KTtcbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgbG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGxuYW1lLnN1YnN0cigwLCA2KSA9PT0gXCJ4LWFtei1cIiAmJiAhb3B0aW9ucy51bmhvaXN0YWJsZUhlYWRlcnM/LmhhcyhsbmFtZSkpIHtcbiAgICAgIHF1ZXJ5W25hbWVdID0gaGVhZGVyc1tuYW1lXTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4ucmVxdWVzdCxcbiAgICBoZWFkZXJzLFxuICAgIHF1ZXJ5LFxuICB9O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nfunction prepareRequest(request) {\n    // Create a clone of the request object that does not clone the body\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n}\nexports.prepareRequest = prepareRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlcGFyZVJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcHJlcGFyZVJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsaURBQThDO0FBQzlDLDJDQUFnRDtBQUVoRDs7R0FFRztBQUNILFNBQWdCLGNBQWMsQ0FBQyxPQUFvQjtJQUNqRCxvRUFBb0U7SUFDcEUsT0FBTyxHQUFHLE9BQVEsT0FBZSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsMkJBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUUxRyxLQUFLLE1BQU0sVUFBVSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ3JELElBQUksNkJBQWlCLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQzVELE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUNwQztLQUNGO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQztBQVhELHdDQVdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgY2xvbmVSZXF1ZXN0IH0gZnJvbSBcIi4vY2xvbmVSZXF1ZXN0XCI7XG5pbXBvcnQgeyBHRU5FUkFURURfSEVBREVSUyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZVJlcXVlc3QocmVxdWVzdDogSHR0cFJlcXVlc3QpOiBIdHRwUmVxdWVzdCB7XG4gIC8vIENyZWF0ZSBhIGNsb25lIG9mIHRoZSByZXF1ZXN0IG9iamVjdCB0aGF0IGRvZXMgbm90IGNsb25lIHRoZSBib2R5XG4gIHJlcXVlc3QgPSB0eXBlb2YgKHJlcXVlc3QgYXMgYW55KS5jbG9uZSA9PT0gXCJmdW5jdGlvblwiID8gKHJlcXVlc3QgYXMgYW55KS5jbG9uZSgpIDogY2xvbmVSZXF1ZXN0KHJlcXVlc3QpO1xuXG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhyZXF1ZXN0LmhlYWRlcnMpKSB7XG4gICAgaWYgKEdFTkVSQVRFRF9IRUFERVJTLmluZGV4T2YoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdC5oZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXF1ZXN0O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nfunction iso8601(time) {\n    return toDate(time)\n        .toISOString()\n        .replace(/\\.\\d{3}Z$/, \"Z\");\n}\nexports.iso8601 = iso8601;\nfunction toDate(time) {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n}\nexports.toDate = toDate;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbERhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbERhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsU0FBZ0IsT0FBTyxDQUFDLElBQTRCO0lBQ2xELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQztTQUNoQixXQUFXLEVBQUU7U0FDYixPQUFPLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFKRCwwQkFJQztBQUVELFNBQWdCLE1BQU0sQ0FBQyxJQUE0QjtJQUNqRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztLQUM5QjtJQUVELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hCLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN2QjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQWJELHdCQWFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzbzg2MDEodGltZTogbnVtYmVyIHwgc3RyaW5nIHwgRGF0ZSk6IHN0cmluZyB7XG4gIHJldHVybiB0b0RhdGUodGltZSlcbiAgICAudG9JU09TdHJpbmcoKVxuICAgIC5yZXBsYWNlKC9cXC5cXGR7M31aJC8sIFwiWlwiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvRGF0ZSh0aW1lOiBudW1iZXIgfCBzdHJpbmcgfCBEYXRlKTogRGF0ZSB7XG4gIGlmICh0eXBlb2YgdGltZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lICogMTAwMCk7XG4gIH1cblxuICBpZiAodHlwZW9mIHRpbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICBpZiAoTnVtYmVyKHRpbWUpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTnVtYmVyKHRpbWUpICogMTAwMCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aW1lO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = middleware_stack_1.constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(\n            // prevent any errors thrown in the callback from triggering an\n            // unhandled promise rejection\n            () => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnRUFBMkQ7QUFlM0QsTUFBYSxNQUFNO0lBU2pCLFlBQVksTUFBbUM7UUFGeEMsb0JBQWUsR0FBRyxpQ0FBYyxFQUE2QixDQUFDO1FBR25FLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFjRCxJQUFJLENBQ0YsT0FBK0csRUFDL0csV0FBc0UsRUFDdEUsRUFBMEM7UUFFMUMsTUFBTSxPQUFPLEdBQUcsT0FBTyxXQUFXLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUM1RSxNQUFNLFFBQVEsR0FBRyxPQUFPLFdBQVcsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLFdBQXFELENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqSCxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGVBQXNCLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUM3RixJQUFJLFFBQVEsRUFBRTtZQUNaLE9BQU8sQ0FBQyxPQUFPLENBQUM7aUJBQ2IsSUFBSSxDQUNILENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFDekMsQ0FBQyxHQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FDNUI7aUJBQ0EsS0FBSztZQUNKLCtEQUErRDtZQUMvRCw4QkFBOEI7WUFDOUIsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUNULENBQUM7U0FDTDthQUFNO1lBQ0wsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTztZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9FLENBQUM7Q0FDRjtBQXBERCx3QkFvREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdHJ1Y3RTdGFjayB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXN0YWNrXCI7XG5pbXBvcnQgeyBDbGllbnQgYXMgSUNsaWVudCwgQ29tbWFuZCwgTWV0YWRhdGFCZWFyZXIsIFJlcXVlc3RIYW5kbGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU21pdGh5Q29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4ge1xuICByZXF1ZXN0SGFuZGxlcjogUmVxdWVzdEhhbmRsZXI8YW55LCBhbnksIEhhbmRsZXJPcHRpb25zPjtcbiAgLyoqXG4gICAqIFRoZSBBUEkgdmVyc2lvbiBzZXQgaW50ZXJuYWxseSBieSB0aGUgU0RLLCBhbmQgaXNcbiAgICogbm90IHBsYW5uZWQgdG8gYmUgdXNlZCBieSBjdXN0b21lciBjb2RlLlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHJlYWRvbmx5IGFwaVZlcnNpb246IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPiA9IFNtaXRoeUNvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+O1xuXG5leHBvcnQgY2xhc3MgQ2xpZW50PFxuICBIYW5kbGVyT3B0aW9ucyxcbiAgQ2xpZW50SW5wdXQgZXh0ZW5kcyBvYmplY3QsXG4gIENsaWVudE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyLFxuICBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24gZXh0ZW5kcyBTbWl0aHlSZXNvbHZlZENvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+XG4+IGltcGxlbWVudHMgSUNsaWVudDxDbGllbnRJbnB1dCwgQ2xpZW50T3V0cHV0LCBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24+XG57XG4gIHB1YmxpYyBtaWRkbGV3YXJlU3RhY2sgPSBjb25zdHJ1Y3RTdGFjazxDbGllbnRJbnB1dCwgQ2xpZW50T3V0cHV0PigpO1xuICByZWFkb25seSBjb25maWc6IFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbjtcbiAgY29uc3RydWN0b3IoY29uZmlnOiBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24pIHtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgfVxuICBzZW5kPElucHV0VHlwZSBleHRlbmRzIENsaWVudElucHV0LCBPdXRwdXRUeXBlIGV4dGVuZHMgQ2xpZW50T3V0cHV0PihcbiAgICBjb21tYW5kOiBDb21tYW5kPENsaWVudElucHV0LCBJbnB1dFR5cGUsIENsaWVudE91dHB1dCwgT3V0cHV0VHlwZSwgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPj4sXG4gICAgb3B0aW9ucz86IEhhbmRsZXJPcHRpb25zXG4gICk6IFByb21pc2U8T3V0cHV0VHlwZT47XG4gIHNlbmQ8SW5wdXRUeXBlIGV4dGVuZHMgQ2xpZW50SW5wdXQsIE91dHB1dFR5cGUgZXh0ZW5kcyBDbGllbnRPdXRwdXQ+KFxuICAgIGNvbW1hbmQ6IENvbW1hbmQ8Q2xpZW50SW5wdXQsIElucHV0VHlwZSwgQ2xpZW50T3V0cHV0LCBPdXRwdXRUeXBlLCBTbWl0aHlSZXNvbHZlZENvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+PixcbiAgICBjYjogKGVycjogYW55LCBkYXRhPzogT3V0cHV0VHlwZSkgPT4gdm9pZFxuICApOiB2b2lkO1xuICBzZW5kPElucHV0VHlwZSBleHRlbmRzIENsaWVudElucHV0LCBPdXRwdXRUeXBlIGV4dGVuZHMgQ2xpZW50T3V0cHV0PihcbiAgICBjb21tYW5kOiBDb21tYW5kPENsaWVudElucHV0LCBJbnB1dFR5cGUsIENsaWVudE91dHB1dCwgT3V0cHV0VHlwZSwgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPj4sXG4gICAgb3B0aW9uczogSGFuZGxlck9wdGlvbnMsXG4gICAgY2I6IChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWRcbiAgKTogdm9pZDtcbiAgc2VuZDxJbnB1dFR5cGUgZXh0ZW5kcyBDbGllbnRJbnB1dCwgT3V0cHV0VHlwZSBleHRlbmRzIENsaWVudE91dHB1dD4oXG4gICAgY29tbWFuZDogQ29tbWFuZDxDbGllbnRJbnB1dCwgSW5wdXRUeXBlLCBDbGllbnRPdXRwdXQsIE91dHB1dFR5cGUsIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4+LFxuICAgIG9wdGlvbnNPckNiPzogSGFuZGxlck9wdGlvbnMgfCAoKGVycjogYW55LCBkYXRhPzogT3V0cHV0VHlwZSkgPT4gdm9pZCksXG4gICAgY2I/OiAoZXJyOiBhbnksIGRhdGE/OiBPdXRwdXRUeXBlKSA9PiB2b2lkXG4gICk6IFByb21pc2U8T3V0cHV0VHlwZT4gfCB2b2lkIHtcbiAgICBjb25zdCBvcHRpb25zID0gdHlwZW9mIG9wdGlvbnNPckNiICE9PSBcImZ1bmN0aW9uXCIgPyBvcHRpb25zT3JDYiA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBjYWxsYmFjayA9IHR5cGVvZiBvcHRpb25zT3JDYiA9PT0gXCJmdW5jdGlvblwiID8gKG9wdGlvbnNPckNiIGFzIChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWQpIDogY2I7XG4gICAgY29uc3QgaGFuZGxlciA9IGNvbW1hbmQucmVzb2x2ZU1pZGRsZXdhcmUodGhpcy5taWRkbGV3YXJlU3RhY2sgYXMgYW55LCB0aGlzLmNvbmZpZywgb3B0aW9ucyk7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBoYW5kbGVyKGNvbW1hbmQpXG4gICAgICAgIC50aGVuKFxuICAgICAgICAgIChyZXN1bHQpID0+IGNhbGxiYWNrKG51bGwsIHJlc3VsdC5vdXRwdXQpLFxuICAgICAgICAgIChlcnI6IGFueSkgPT4gY2FsbGJhY2soZXJyKVxuICAgICAgICApXG4gICAgICAgIC5jYXRjaChcbiAgICAgICAgICAvLyBwcmV2ZW50IGFueSBlcnJvcnMgdGhyb3duIGluIHRoZSBjYWxsYmFjayBmcm9tIHRyaWdnZXJpbmcgYW5cbiAgICAgICAgICAvLyB1bmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb25cbiAgICAgICAgICAoKSA9PiB7fVxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gaGFuZGxlcihjb21tYW5kKS50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5vdXRwdXQpO1xuICAgIH1cbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuY29uZmlnLnJlcXVlc3RIYW5kbGVyLmRlc3Ryb3kpIHRoaXMuY29uZmlnLnJlcXVlc3RIYW5kbGVyLmRlc3Ryb3koKTtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = middleware_stack_1.constructStack();\n    }\n}\nexports.Command = Command;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdFQUEyRDtBQUczRCxNQUFzQixPQUFPO0lBQTdCO1FBU1csb0JBQWUsR0FBb0MsaUNBQWMsRUFBaUIsQ0FBQztJQU05RixDQUFDO0NBQUE7QUFmRCwwQkFlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnN0cnVjdFN0YWNrIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtc3RhY2tcIjtcbmltcG9ydCB7IENvbW1hbmQgYXMgSUNvbW1hbmQsIEhhbmRsZXIsIE1ldGFkYXRhQmVhcmVyLCBNaWRkbGV3YXJlU3RhY2sgYXMgSU1pZGRsZXdhcmVTdGFjayB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tbWFuZDxcbiAgSW5wdXQgZXh0ZW5kcyBDbGllbnRJbnB1dCxcbiAgT3V0cHV0IGV4dGVuZHMgQ2xpZW50T3V0cHV0LFxuICBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24sXG4gIENsaWVudElucHV0IGV4dGVuZHMgb2JqZWN0ID0gYW55LFxuICBDbGllbnRPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlciA9IGFueVxuPiBpbXBsZW1lbnRzIElDb21tYW5kPENsaWVudElucHV0LCBJbnB1dCwgQ2xpZW50T3V0cHV0LCBPdXRwdXQsIFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbj5cbntcbiAgYWJzdHJhY3QgaW5wdXQ6IElucHV0O1xuICByZWFkb25seSBtaWRkbGV3YXJlU3RhY2s6IElNaWRkbGV3YXJlU3RhY2s8SW5wdXQsIE91dHB1dD4gPSBjb25zdHJ1Y3RTdGFjazxJbnB1dCwgT3V0cHV0PigpO1xuICBhYnN0cmFjdCByZXNvbHZlTWlkZGxld2FyZShcbiAgICBzdGFjazogSU1pZGRsZXdhcmVTdGFjazxDbGllbnRJbnB1dCwgQ2xpZW50T3V0cHV0PixcbiAgICBjb25maWd1cmF0aW9uOiBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb24sXG4gICAgb3B0aW9uczogYW55XG4gICk6IEhhbmRsZXI8SW5wdXQsIE91dHB1dD47XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLGdCQUFnQixHQUFHLDRCQUE0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFNFTlNJVElWRV9TVFJJTkcgPSBcIioqKlNlbnNpdGl2ZUluZm9ybWF0aW9uKioqXCI7XG4iXX0=","\"use strict\";\n/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dateToUtcString = void 0;\n// Build indexes outside so we allocate them once.\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    // Build 0 prefixed strings for contents that need to be\n    // two digits and where we get an integer back.\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7OztHQVVHOzs7QUFFSCxrREFBa0Q7QUFDbEQsTUFBTSxJQUFJLEdBQWtCLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDOUUsa0JBQWtCO0FBQ2xCLE1BQU0sTUFBTSxHQUFrQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFbkgsU0FBZ0IsZUFBZSxDQUFDLElBQVU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ25DLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNqQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNwQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDeEMsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBRXhDLHdEQUF3RDtJQUN4RCwrQ0FBK0M7SUFDL0MsTUFBTSxnQkFBZ0IsR0FBRyxhQUFhLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBQ3ZGLE1BQU0sV0FBVyxHQUFHLFFBQVEsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxFQUFFLENBQUM7SUFDbkUsTUFBTSxhQUFhLEdBQUcsVUFBVSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQztJQUMzRSxNQUFNLGFBQWEsR0FBRyxVQUFVLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLFVBQVUsRUFBRSxDQUFDO0lBRTNFLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssZ0JBQWdCLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksSUFBSSxXQUFXLElBQUksYUFBYSxJQUFJLGFBQWEsTUFBTSxDQUFDO0FBQ2pJLENBQUM7QUFqQkQsMENBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCdWlsZHMgYSBwcm9wZXIgVVRDIEh0dHBEYXRlIHRpbWVzdGFtcCBmcm9tIGEgRGF0ZSBvYmplY3RcbiAqIHNpbmNlIG5vdCBhbGwgZW52aXJvbm1lbnRzIHdpbGwgaGF2ZSB0aGlzIGFzIHRoZSBleHBlY3RlZFxuICogZm9ybWF0LlxuICpcbiAqIFNlZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS90b1VUQ1N0cmluZ1xuICogPiBQcmlvciB0byBFQ01BU2NyaXB0IDIwMTgsIHRoZSBmb3JtYXQgb2YgdGhlIHJldHVybiB2YWx1ZVxuICogPiB2YXJpZWQgYWNjb3JkaW5nIHRvIHRoZSBwbGF0Zm9ybS4gVGhlIG1vc3QgY29tbW9uIHJldHVyblxuICogPiB2YWx1ZSB3YXMgYW4gUkZDLTExMjMgZm9ybWF0dGVkIGRhdGUgc3RhbXAsIHdoaWNoIGlzIGFcbiAqID4gc2xpZ2h0bHkgdXBkYXRlZCB2ZXJzaW9uIG9mIFJGQy04MjIgZGF0ZSBzdGFtcHMuXG4gKi9cblxuLy8gQnVpbGQgaW5kZXhlcyBvdXRzaWRlIHNvIHdlIGFsbG9jYXRlIHRoZW0gb25jZS5cbmNvbnN0IGRheXM6IEFycmF5PFN0cmluZz4gPSBbXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIl07XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IG1vbnRoczogQXJyYXk8U3RyaW5nPiA9IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRhdGVUb1V0Y1N0cmluZyhkYXRlOiBEYXRlKTogc3RyaW5nIHtcbiAgY29uc3QgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG4gIGNvbnN0IGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gIGNvbnN0IGRheU9mTW9udGhJbnQgPSBkYXRlLmdldFVUQ0RhdGUoKTtcbiAgY29uc3QgaG91cnNJbnQgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XG4gIGNvbnN0IG1pbnV0ZXNJbnQgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKTtcbiAgY29uc3Qgc2Vjb25kc0ludCA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xuXG4gIC8vIEJ1aWxkIDAgcHJlZml4ZWQgc3RyaW5ncyBmb3IgY29udGVudHMgdGhhdCBuZWVkIHRvIGJlXG4gIC8vIHR3byBkaWdpdHMgYW5kIHdoZXJlIHdlIGdldCBhbiBpbnRlZ2VyIGJhY2suXG4gIGNvbnN0IGRheU9mTW9udGhTdHJpbmcgPSBkYXlPZk1vbnRoSW50IDwgMTAgPyBgMCR7ZGF5T2ZNb250aEludH1gIDogYCR7ZGF5T2ZNb250aEludH1gO1xuICBjb25zdCBob3Vyc1N0cmluZyA9IGhvdXJzSW50IDwgMTAgPyBgMCR7aG91cnNJbnR9YCA6IGAke2hvdXJzSW50fWA7XG4gIGNvbnN0IG1pbnV0ZXNTdHJpbmcgPSBtaW51dGVzSW50IDwgMTAgPyBgMCR7bWludXRlc0ludH1gIDogYCR7bWludXRlc0ludH1gO1xuICBjb25zdCBzZWNvbmRzU3RyaW5nID0gc2Vjb25kc0ludCA8IDEwID8gYDAke3NlY29uZHNJbnR9YCA6IGAke3NlY29uZHNJbnR9YDtcblxuICByZXR1cm4gYCR7ZGF5c1tkYXlPZldlZWtdfSwgJHtkYXlPZk1vbnRoU3RyaW5nfSAke21vbnRoc1ttb250aF19ICR7eWVhcn0gJHtob3Vyc1N0cmluZ306JHttaW51dGVzU3RyaW5nfToke3NlY29uZHNTdHJpbmd9IEdNVGA7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtdHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kb2N1bWVudC10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNtaXRoeSBkb2N1bWVudCB0eXBlIHZhbHVlcy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbmV4cG9ydCBuYW1lc3BhY2UgRG9jdW1lbnRUeXBlIHtcbiAgZXhwb3J0IHR5cGUgVmFsdWUgPSBTY2FsYXIgfCBTdHJ1Y3R1cmUgfCBMaXN0O1xuICBleHBvcnQgdHlwZSBTY2FsYXIgPSBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbDtcbiAgZXhwb3J0IHR5cGUgU3RydWN0dXJlID0geyBbbWVtYmVyOiBzdHJpbmddOiBWYWx1ZSB9O1xuICBleHBvcnQgaW50ZXJmYWNlIExpc3QgZXh0ZW5kcyBBcnJheTxWYWx1ZT4ge31cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2V4Y2VwdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmV0cnlhYmxlVHJhaXQgfSBmcm9tIFwiLi9yZXRyeWFibGUtdHJhaXRcIjtcblxuLyoqXG4gKiBUeXBlIHRoYXQgaXMgaW1wbGVtZW50ZWQgYnkgYWxsIFNtaXRoeSBzaGFwZXMgbWFya2VkIHdpdGggdGhlXG4gKiBlcnJvciB0cmFpdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTbWl0aHlFeGNlcHRpb24ge1xuICAvKipcbiAgICogVGhlIHNoYXBlIElEIG5hbWUgb2YgdGhlIGV4Y2VwdGlvbi5cbiAgICovXG4gIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgY2xpZW50IG9yIHNlcnZlciBhcmUgYXQgZmF1bHQuXG4gICAqL1xuICByZWFkb25seSAkZmF1bHQ6IFwiY2xpZW50XCIgfCBcInNlcnZlclwiO1xuXG4gIC8qKlxuICAgKiBUaGUgc2VydmljZSB0aGF0IGVuY291bnRlcmVkIHRoZSBleGNlcHRpb24uXG4gICAqL1xuICByZWFkb25seSAkc2VydmljZT86IHN0cmluZztcblxuICAvKipcbiAgICogSW5kaWNhdGVzIHRoYXQgYW4gZXJyb3IgTUFZIGJlIHJldHJpZWQgYnkgdGhlIGNsaWVudC5cbiAgICovXG4gIHJlYWRvbmx5ICRyZXRyeWFibGU/OiBSZXRyeWFibGVUcmFpdDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\n/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7OztHQUdHO0FBQ0gsU0FBZ0IsMEJBQTBCLENBQUMsR0FBVztJQUNwRCxPQUFPLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDO1FBQzVELE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUpELGdFQUlDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHdyYXBzIGVuY29kZVVSSUNvbXBvbmVudCB0byBlbmNvZGUgYWRkaXRpb25hbCBjaGFyYWN0ZXJzXG4gKiB0byBmdWxseSBhZGhlcmUgdG8gUkZDIDM5ODYuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmRlZEVuY29kZVVSSUNvbXBvbmVudChzdHI6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKSpdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIFwiJVwiICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuICB9KTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\n/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWFycmF5LWlmLXNpbmdsZS1pdGVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC1hcnJheS1pZi1zaW5nbGUtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDSSxNQUFNLG9CQUFvQixHQUFHLENBQUksVUFBYSxFQUFXLEVBQUUsQ0FDaEUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRDNDLFFBQUEsb0JBQW9CLHdCQUN1QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIFhNTCBwYXJzZXIgd2lsbCBzZXQgb25lIEs6ViBmb3IgYSBtZW1iZXIgdGhhdCBjb3VsZFxuICogcmV0dXJuIG11bHRpcGxlIGVudHJpZXMgYnV0IG9ubHkgaGFzIG9uZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldEFycmF5SWZTaW5nbGVJdGVtID0gPFQ+KG1heUJlQXJyYXk6IFQpOiBUIHwgVFtdID0+XG4gIEFycmF5LmlzQXJyYXkobWF5QmVBcnJheSkgPyBtYXlCZUFycmF5IDogW21heUJlQXJyYXldO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\n/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = exports.getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXZhbHVlLWZyb20tdGV4dC1ub2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDSSxNQUFNLG9CQUFvQixHQUFHLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDL0MsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDO0lBQzdCLEtBQUssTUFBTSxHQUFHLElBQUksR0FBRyxFQUFFO1FBQ3JCLElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQ25FLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkM7YUFBTSxJQUFJLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQzVELEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyw0QkFBb0IsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMzQztLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUM7QUFWVyxRQUFBLG9CQUFvQix3QkFVL0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlY3Vyc2l2ZWx5IHBhcnNlcyBvYmplY3QgYW5kIHBvcHVsYXRlcyB2YWx1ZSBpcyBub2RlIGZyb21cbiAqIFwiI3RleHRcIiBrZXkgaWYgaXQncyBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFZhbHVlRnJvbVRleHROb2RlID0gKG9iajogYW55KSA9PiB7XG4gIGNvbnN0IHRleHROb2RlTmFtZSA9IFwiI3RleHRcIjtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIG9ialtrZXldW3RleHROb2RlTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgb2JqW2tleV0gPSBvYmpba2V5XVt0ZXh0Tm9kZU5hbWVdO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9ialtrZXldID09PSBcIm9iamVjdFwiICYmIG9ialtrZXldICE9PSBudWxsKSB7XG4gICAgICBvYmpba2V5XSA9IGdldFZhbHVlRnJvbVRleHROb2RlKG9ialtrZXldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iajtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./document-type\"), exports);\ntslib_1.__exportStar(require(\"./exception\"), exports);\ntslib_1.__exportStar(require(\"./extended-encode-uri-component\"), exports);\ntslib_1.__exportStar(require(\"./get-array-if-single-item\"), exports);\ntslib_1.__exportStar(require(\"./get-value-from-text-node\"), exports);\ntslib_1.__exportStar(require(\"./lazy-json\"), exports);\ntslib_1.__exportStar(require(\"./date-utils\"), exports);\ntslib_1.__exportStar(require(\"./split-every\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./retryable-trait\"), exports);\ntslib_1.__exportStar(require(\"./sdk-error\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsbURBQXlCO0FBQ3pCLG9EQUEwQjtBQUMxQiwwREFBZ0M7QUFDaEMsc0RBQTRCO0FBQzVCLDBFQUFnRDtBQUNoRCxxRUFBMkM7QUFDM0MscUVBQTJDO0FBQzNDLHNEQUE0QjtBQUM1Qix1REFBNkI7QUFDN0Isd0RBQThCO0FBQzlCLHNEQUE0QjtBQUM1Qiw0REFBa0M7QUFDbEMsc0RBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21tYW5kXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kb2N1bWVudC10eXBlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9leGNlcHRpb25cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V4dGVuZGVkLWVuY29kZS11cmktY29tcG9uZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nZXQtYXJyYXktaWYtc2luZ2xlLWl0ZW1cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGF6eS1qc29uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlLXV0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zcGxpdC1ldmVyeVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXRyeWFibGUtdHJhaXRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Nkay1lcnJvclwiO1xuIl19","\"use strict\";\n/**\n * Lazy String holder for JSON typed contents.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nconst StringWrapper = function () {\n    //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF6eS1qc29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xhenktanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQU1IOzs7OztHQUtHO0FBQ0gsc0VBQXNFO0FBQy9ELE1BQU0sYUFBYSxHQUFrQjtJQUMxQyxvRkFBb0Y7SUFDcEYsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUM7SUFDdEQsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBVyxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUM3RSw4RUFBOEU7SUFDOUUsTUFBTSxRQUFRLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztJQUNuQyxNQUFNLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakQsT0FBTyxRQUFrQixDQUFDO0FBQzVCLENBQUMsQ0FBQztBQVJXLFFBQUEsYUFBYSxpQkFReEI7QUFDRixxQkFBYSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7SUFDeEQsV0FBVyxFQUFFO1FBQ1gsS0FBSyxFQUFFLHFCQUFhO1FBQ3BCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsWUFBWSxFQUFFLElBQUk7S0FDbkI7Q0FDRixDQUFDLENBQUM7QUFDSCxNQUFNLENBQUMsY0FBYyxDQUFDLHFCQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFN0MsTUFBYSxjQUFlLFNBQVEscUJBQWE7SUFDL0MsZUFBZTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsTUFBTTtRQUNKLE9BQU8sS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQVc7UUFDM0IsSUFBSSxNQUFNLFlBQVksY0FBYyxFQUFFO1lBQ3BDLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7YUFBTSxJQUFJLE1BQU0sWUFBWSxNQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQ2pFLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDbkM7UUFDRCxPQUFPLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0Y7QUFqQkQsd0NBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMYXp5IFN0cmluZyBob2xkZXIgZm9yIEpTT04gdHlwZWQgY29udGVudHMuXG4gKi9cblxuaW50ZXJmYWNlIFN0cmluZ1dyYXBwZXIge1xuICBuZXcgKGFyZzogYW55KTogU3RyaW5nO1xufVxuXG4vKipcbiAqIEJlY2F1c2Ugb2YgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC90c2xpYi9pc3N1ZXMvOTUsXG4gKiBUUyAnZXh0ZW5kcycgc2hpbSBkb2Vzbid0IHN1cHBvcnQgZXh0ZW5kaW5nIG5hdGl2ZSB0eXBlcyBsaWtlIFN0cmluZy5cbiAqIFNvIGhlcmUgd2UgY3JlYXRlIFN0cmluZ1dyYXBwZXIgdGhhdCBkdXBsaWNhdGUgZXZlcnl0aGluZyBmcm9tIFN0cmluZ1xuICogY2xhc3MgaW5jbHVkaW5nIGl0cyBwcm90b3R5cGUgY2hhaW4uIFNvIHdlIGNhbiBleHRlbmQgZnJvbSBoZXJlLlxuICovXG4vLyBAdHMtaWdub3JlIFN0cmluZ1dyYXBwZXIgaW1wbGVtZW50YXRpb24gaXMgbm90IGEgc2ltcGxlIGNvbnN0cnVjdG9yXG5leHBvcnQgY29uc3QgU3RyaW5nV3JhcHBlcjogU3RyaW5nV3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcbiAgLy9AdHMtaWdub3JlICd0aGlzJyBjYW5ub3QgYmUgYXNzaWduZWQgdG8gYW55LCBidXQgT2JqZWN0LmdldFByb3RvdHlwZU9mIGFjY2VwdHMgYW55XG4gIGNvbnN0IENsYXNzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICBjb25zdCBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoU3RyaW5nLCBbbnVsbCBhcyBhbnksIC4uLmFyZ3VtZW50c10pO1xuICAvL0B0cy1pZ25vcmUgQ2FsbCB3cmFwcGVkIFN0cmluZyBjb25zdHJ1Y3RvciBkaXJlY3RseSwgZG9uJ3QgYm90aGVyIHR5cGluZyBpdC5cbiAgY29uc3QgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICByZXR1cm4gaW5zdGFuY2UgYXMgU3RyaW5nO1xufTtcblN0cmluZ1dyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdHJpbmcucHJvdG90eXBlLCB7XG4gIGNvbnN0cnVjdG9yOiB7XG4gICAgdmFsdWU6IFN0cmluZ1dyYXBwZXIsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICB9LFxufSk7XG5PYmplY3Quc2V0UHJvdG90eXBlT2YoU3RyaW5nV3JhcHBlciwgU3RyaW5nKTtcblxuZXhwb3J0IGNsYXNzIExhenlKc29uU3RyaW5nIGV4dGVuZHMgU3RyaW5nV3JhcHBlciB7XG4gIGRlc2VyaWFsaXplSlNPTigpOiBhbnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN1cGVyLnRvU3RyaW5nKCkpO1xuICB9XG5cbiAgdG9KU09OKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN1cGVyLnRvU3RyaW5nKCk7XG4gIH1cblxuICBzdGF0aWMgZnJvbU9iamVjdChvYmplY3Q6IGFueSk6IExhenlKc29uU3RyaW5nIHtcbiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTGF6eUpzb25TdHJpbmcpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfSBlbHNlIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIG9iamVjdCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG5ldyBMYXp5SnNvblN0cmluZyhvYmplY3QpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IExhenlKc29uU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlhYmxlLXRyYWl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5YWJsZS10cmFpdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHN0cnVjdHVyZSBzaGFwZSB3aXRoIHRoZSBlcnJvciB0cmFpdC5cbiAqIGh0dHBzOi8vYXdzbGFicy5naXRodWIuaW8vc21pdGh5L3NwZWMvY29yZS5odG1sI3JldHJ5YWJsZS10cmFpdFxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJldHJ5YWJsZVRyYWl0IHtcbiAgLyoqXG4gICAqIEluZGljYXRlcyB0aGF0IHRoZSBlcnJvciBpcyBhIHJldHJ5YWJsZSB0aHJvdHRsaW5nIGVycm9yLlxuICAgKi9cbiAgcmVhZG9ubHkgdGhyb3R0bGluZz86IGJvb2xlYW47XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2RrLWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Nkay1lcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWV0YWRhdGFCZWFyZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgU21pdGh5RXhjZXB0aW9uIH0gZnJvbSBcIi4vZXhjZXB0aW9uXCI7XG5cbmV4cG9ydCB0eXBlIFNka0Vycm9yID0gRXJyb3IgJiBQYXJ0aWFsPFNtaXRoeUV4Y2VwdGlvbj4gJiBQYXJ0aWFsPE1ldGFkYXRhQmVhcmVyPjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\n/**\n * Given an input string, splits based on the delimiter after a given\n * number of delimiters has been encountered.\n *\n * @param value The input string to split.\n * @param delimiter The delimiter to split on.\n * @param numDelimiters The number of delimiters to have encountered to split.\n */\nfunction splitEvery(value, delimiter, numDelimiters) {\n    // Fail if we don't have a clear number to split on.\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    // Short circuit extra logic for the simple case.\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            // Start a new segment.\n            currentSegment = segments[i];\n        }\n        else {\n            // Compound the current segment with the delimiter.\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            // We encountered the right number of delimiters, so add the entry.\n            compoundSegments.push(currentSegment);\n            // And reset the current segment.\n            currentSegment = \"\";\n        }\n    }\n    // Handle any leftover segment portion.\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtZXZlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3BsaXQtZXZlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7R0FPRztBQUNILFNBQWdCLFVBQVUsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsRUFBRSxhQUFxQjtJQUNoRixvREFBb0Q7SUFDcEQsSUFBSSxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUMxRCxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxHQUFHLGFBQWEsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0tBQ3pGO0lBRUQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4QyxpREFBaUQ7SUFDakQsSUFBSSxhQUFhLEtBQUssQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sUUFBUSxDQUFDO0tBQ2pCO0lBRUQsTUFBTSxnQkFBZ0IsR0FBa0IsRUFBRSxDQUFDO0lBQzNDLElBQUksY0FBYyxHQUFHLEVBQUUsQ0FBQztJQUN4QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxJQUFJLGNBQWMsS0FBSyxFQUFFLEVBQUU7WUFDekIsdUJBQXVCO1lBQ3ZCLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLG1EQUFtRDtZQUNuRCxjQUFjLElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMzQztRQUVELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsYUFBYSxLQUFLLENBQUMsRUFBRTtZQUNqQyxtRUFBbUU7WUFDbkUsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ3RDLGlDQUFpQztZQUNqQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1NBQ3JCO0tBQ0Y7SUFFRCx1Q0FBdUM7SUFDdkMsSUFBSSxjQUFjLEtBQUssRUFBRSxFQUFFO1FBQ3pCLGdCQUFnQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUN2QztJQUVELE9BQU8sZ0JBQWdCLENBQUM7QUFDMUIsQ0FBQztBQXJDRCxnQ0FxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGlucHV0IHN0cmluZywgc3BsaXRzIGJhc2VkIG9uIHRoZSBkZWxpbWl0ZXIgYWZ0ZXIgYSBnaXZlblxuICogbnVtYmVyIG9mIGRlbGltaXRlcnMgaGFzIGJlZW4gZW5jb3VudGVyZWQuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBpbnB1dCBzdHJpbmcgdG8gc3BsaXQuXG4gKiBAcGFyYW0gZGVsaW1pdGVyIFRoZSBkZWxpbWl0ZXIgdG8gc3BsaXQgb24uXG4gKiBAcGFyYW0gbnVtRGVsaW1pdGVycyBUaGUgbnVtYmVyIG9mIGRlbGltaXRlcnMgdG8gaGF2ZSBlbmNvdW50ZXJlZCB0byBzcGxpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0RXZlcnkodmFsdWU6IHN0cmluZywgZGVsaW1pdGVyOiBzdHJpbmcsIG51bURlbGltaXRlcnM6IG51bWJlcik6IEFycmF5PHN0cmluZz4ge1xuICAvLyBGYWlsIGlmIHdlIGRvbid0IGhhdmUgYSBjbGVhciBudW1iZXIgdG8gc3BsaXQgb24uXG4gIGlmIChudW1EZWxpbWl0ZXJzIDw9IDAgfHwgIU51bWJlci5pc0ludGVnZXIobnVtRGVsaW1pdGVycykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG51bWJlciBvZiBkZWxpbWl0ZXJzIChcIiArIG51bURlbGltaXRlcnMgKyBcIikgZm9yIHNwbGl0RXZlcnkuXCIpO1xuICB9XG5cbiAgY29uc3Qgc2VnbWVudHMgPSB2YWx1ZS5zcGxpdChkZWxpbWl0ZXIpO1xuICAvLyBTaG9ydCBjaXJjdWl0IGV4dHJhIGxvZ2ljIGZvciB0aGUgc2ltcGxlIGNhc2UuXG4gIGlmIChudW1EZWxpbWl0ZXJzID09PSAxKSB7XG4gICAgcmV0dXJuIHNlZ21lbnRzO1xuICB9XG5cbiAgY29uc3QgY29tcG91bmRTZWdtZW50czogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBsZXQgY3VycmVudFNlZ21lbnQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGN1cnJlbnRTZWdtZW50ID09PSBcIlwiKSB7XG4gICAgICAvLyBTdGFydCBhIG5ldyBzZWdtZW50LlxuICAgICAgY3VycmVudFNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ29tcG91bmQgdGhlIGN1cnJlbnQgc2VnbWVudCB3aXRoIHRoZSBkZWxpbWl0ZXIuXG4gICAgICBjdXJyZW50U2VnbWVudCArPSBkZWxpbWl0ZXIgKyBzZWdtZW50c1tpXTtcbiAgICB9XG5cbiAgICBpZiAoKGkgKyAxKSAlIG51bURlbGltaXRlcnMgPT09IDApIHtcbiAgICAgIC8vIFdlIGVuY291bnRlcmVkIHRoZSByaWdodCBudW1iZXIgb2YgZGVsaW1pdGVycywgc28gYWRkIHRoZSBlbnRyeS5cbiAgICAgIGNvbXBvdW5kU2VnbWVudHMucHVzaChjdXJyZW50U2VnbWVudCk7XG4gICAgICAvLyBBbmQgcmVzZXQgdGhlIGN1cnJlbnQgc2VnbWVudC5cbiAgICAgIGN1cnJlbnRTZWdtZW50ID0gXCJcIjtcbiAgICB9XG4gIH1cblxuICAvLyBIYW5kbGUgYW55IGxlZnRvdmVyIHNlZ21lbnQgcG9ydGlvbi5cbiAgaWYgKGN1cnJlbnRTZWdtZW50ICE9PSBcIlwiKSB7XG4gICAgY29tcG91bmRTZWdtZW50cy5wdXNoKGN1cnJlbnRTZWdtZW50KTtcbiAgfVxuXG4gIHJldHVybiBjb21wb3VuZFNlZ21lbnRzO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nconst parseUrl = (url) => {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    let query;\n    if (search) {\n        query = querystring_parser_1.parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQStEO0FBR3hELE1BQU0sUUFBUSxHQUFjLENBQUMsR0FBVyxFQUFZLEVBQUU7SUFDM0QsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVwRSxJQUFJLEtBQW9DLENBQUM7SUFDekMsSUFBSSxNQUFNLEVBQUU7UUFDVixLQUFLLEdBQUcscUNBQWdCLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPO1FBQ0wsUUFBUTtRQUNSLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUN2QyxRQUFRO1FBQ1IsSUFBSSxFQUFFLFFBQVE7UUFDZCxLQUFLO0tBQ04sQ0FBQztBQUNKLENBQUMsQ0FBQztBQWZXLFFBQUEsUUFBUSxZQWVuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUXVlcnlTdHJpbmcgfSBmcm9tIFwiQGF3cy1zZGsvcXVlcnlzdHJpbmctcGFyc2VyXCI7XG5pbXBvcnQgeyBFbmRwb2ludCwgUXVlcnlQYXJhbWV0ZXJCYWcsIFVybFBhcnNlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgcGFyc2VVcmw6IFVybFBhcnNlciA9ICh1cmw6IHN0cmluZyk6IEVuZHBvaW50ID0+IHtcbiAgY29uc3QgeyBob3N0bmFtZSwgcGF0aG5hbWUsIHBvcnQsIHByb3RvY29sLCBzZWFyY2ggfSA9IG5ldyBVUkwodXJsKTtcblxuICBsZXQgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnIHwgdW5kZWZpbmVkO1xuICBpZiAoc2VhcmNoKSB7XG4gICAgcXVlcnkgPSBwYXJzZVF1ZXJ5U3RyaW5nKHNlYXJjaCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGhvc3RuYW1lLFxuICAgIHBvcnQ6IHBvcnQgPyBwYXJzZUludChwb3J0KSA6IHVuZGVmaW5lZCxcbiAgICBwcm90b2NvbCxcbiAgICBwYXRoOiBwYXRobmFtZSxcbiAgICBxdWVyeSxcbiAgfTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = exports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\n/**\n * Converts a base-64 encoded string to a Uint8Array of bytes using Node.JS's\n * `buffer` module.\n *\n * @param input The base-64 encoded string\n */\nfunction fromBase64(input) {\n    const buffer = util_buffer_from_1.fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\nexports.fromBase64 = fromBase64;\n/**\n * Converts a Uint8Array of binary data to a base-64 encoded string using\n * Node.JS's `buffer` module.\n *\n * @param input The binary data to encode\n */\nfunction toBase64(input) {\n    return util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\nexports.toBase64 = toBase64;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQXdFO0FBRXhFOzs7OztHQUtHO0FBQ0gsU0FBZ0IsVUFBVSxDQUFDLEtBQWE7SUFDdEMsTUFBTSxNQUFNLEdBQUcsNkJBQVUsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFM0MsT0FBTyxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzdFLENBQUM7QUFKRCxnQ0FJQztBQUVEOzs7OztHQUtHO0FBQ0gsU0FBZ0IsUUFBUSxDQUFDLEtBQWlCO0lBQ3hDLE9BQU8sa0NBQWUsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM5RixDQUFDO0FBRkQsNEJBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tQXJyYXlCdWZmZXIsIGZyb21TdHJpbmcgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbVwiO1xuXG4vKipcbiAqIENvbnZlcnRzIGEgYmFzZS02NCBlbmNvZGVkIHN0cmluZyB0byBhIFVpbnQ4QXJyYXkgb2YgYnl0ZXMgdXNpbmcgTm9kZS5KUydzXG4gKiBgYnVmZmVyYCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBiYXNlLTY0IGVuY29kZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQmFzZTY0KGlucHV0OiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgY29uc3QgYnVmZmVyID0gZnJvbVN0cmluZyhpbnB1dCwgXCJiYXNlNjRcIik7XG5cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1ZmZlci5idWZmZXIsIGJ1ZmZlci5ieXRlT2Zmc2V0LCBidWZmZXIuYnl0ZUxlbmd0aCk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBVaW50OEFycmF5IG9mIGJpbmFyeSBkYXRhIHRvIGEgYmFzZS02NCBlbmNvZGVkIHN0cmluZyB1c2luZ1xuICogTm9kZS5KUydzIGBidWZmZXJgIG1vZHVsZS5cbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIGJpbmFyeSBkYXRhIHRvIGVuY29kZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjQoaW5wdXQ6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xuICByZXR1cm4gZnJvbUFycmF5QnVmZmVyKGlucHV0LmJ1ZmZlciwgaW5wdXQuYnl0ZU9mZnNldCwgaW5wdXQuYnl0ZUxlbmd0aCkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nfunction calculateBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\") {\n        // handles fs readable streams\n        return fs_1.lstatSync(body.path).size;\n    }\n}\nexports.calculateBodyLength = calculateBodyLength;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkJBQStCO0FBRS9CLFNBQWdCLG1CQUFtQixDQUFDLElBQVM7SUFDM0MsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNULE9BQU8sQ0FBQyxDQUFDO0tBQ1Y7SUFDRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDO0tBQ2pDO1NBQU0sSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssUUFBUSxFQUFFO1FBQzlDLCtEQUErRDtRQUMvRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7S0FDeEI7U0FBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDeEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQ3hDLDhCQUE4QjtRQUM5QixPQUFPLGNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDO0tBQ2xDO0FBQ0gsQ0FBQztBQWZELGtEQWVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbHN0YXRTeW5jIH0gZnJvbSBcImZzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVCb2R5TGVuZ3RoKGJvZHk6IGFueSk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gIGlmICghYm9keSkge1xuICAgIHJldHVybiAwO1xuICB9XG4gIGlmICh0eXBlb2YgYm9keSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShib2R5KS5sZW5ndGg7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkuYnl0ZUxlbmd0aCA9PT0gXCJudW1iZXJcIikge1xuICAgIC8vIGhhbmRsZXMgVWludDhBcnJheSwgQXJyYXlCdWZmZXIsIEJ1ZmZlciwgYW5kIEFycmF5QnVmZmVyVmlld1xuICAgIHJldHVybiBib2R5LmJ5dGVMZW5ndGg7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkuc2l6ZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiBib2R5LnNpemU7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkucGF0aCA9PT0gXCJzdHJpbmdcIikge1xuICAgIC8vIGhhbmRsZXMgZnMgcmVhZGFibGUgc3RyZWFtc1xuICAgIHJldHVybiBsc3RhdFN5bmMoYm9keS5wYXRoKS5zaXplO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!is_array_buffer_1.isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQXlEO0FBQ3pELG1DQUFnQztBQUV6QixNQUFNLGVBQWUsR0FBRyxDQUFDLEtBQWtCLEVBQUUsTUFBTSxHQUFHLENBQUMsRUFBRSxTQUFpQixLQUFLLENBQUMsVUFBVSxHQUFHLE1BQU0sRUFBVSxFQUFFO0lBQ3BILElBQUksQ0FBQywrQkFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3pCLE1BQU0sSUFBSSxTQUFTLENBQUMsMkRBQTJELE9BQU8sS0FBSyxLQUFLLEtBQUssR0FBRyxDQUFDLENBQUM7S0FDM0c7SUFFRCxPQUFPLGVBQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM1QyxDQUFDLENBQUM7QUFOVyxRQUFBLGVBQWUsbUJBTTFCO0FBSUssTUFBTSxVQUFVLEdBQUcsQ0FBQyxLQUFhLEVBQUUsUUFBeUIsRUFBVSxFQUFFO0lBQzdFLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCLE1BQU0sSUFBSSxTQUFTLENBQUMsOERBQThELE9BQU8sS0FBSyxLQUFLLEtBQUssR0FBRyxDQUFDLENBQUM7S0FDOUc7SUFFRCxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEUsQ0FBQyxDQUFDO0FBTlcsUUFBQSxVQUFVLGNBTXJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBcnJheUJ1ZmZlciB9IGZyb20gXCJAYXdzLXNkay9pcy1hcnJheS1idWZmZXJcIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcblxuZXhwb3J0IGNvbnN0IGZyb21BcnJheUJ1ZmZlciA9IChpbnB1dDogQXJyYXlCdWZmZXIsIG9mZnNldCA9IDAsIGxlbmd0aDogbnVtYmVyID0gaW5wdXQuYnl0ZUxlbmd0aCAtIG9mZnNldCk6IEJ1ZmZlciA9PiB7XG4gIGlmICghaXNBcnJheUJ1ZmZlcihpbnB1dCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBUaGUgXCJpbnB1dFwiIGFyZ3VtZW50IG11c3QgYmUgQXJyYXlCdWZmZXIuIFJlY2VpdmVkIHR5cGUgJHt0eXBlb2YgaW5wdXR9ICgke2lucHV0fSlgKTtcbiAgfVxuXG4gIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgb2Zmc2V0LCBsZW5ndGgpO1xufTtcblxuZXhwb3J0IHR5cGUgU3RyaW5nRW5jb2RpbmcgPSBcImFzY2lpXCIgfCBcInV0ZjhcIiB8IFwidXRmMTZsZVwiIHwgXCJ1Y3MyXCIgfCBcImJhc2U2NFwiIHwgXCJsYXRpbjFcIiB8IFwiYmluYXJ5XCIgfCBcImhleFwiO1xuXG5leHBvcnQgY29uc3QgZnJvbVN0cmluZyA9IChpbnB1dDogc3RyaW5nLCBlbmNvZGluZz86IFN0cmluZ0VuY29kaW5nKTogQnVmZmVyID0+IHtcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBcImlucHV0XCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSAke3R5cGVvZiBpbnB1dH0gKCR7aW5wdXR9KWApO1xuICB9XG5cbiAgcmV0dXJuIGVuY29kaW5nID8gQnVmZmVyLmZyb20oaW5wdXQsIGVuY29kaW5nKSA6IEJ1ZmZlci5mcm9tKGlucHV0KTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxZQUFZLEdBQThCLEVBQUUsQ0FBQztBQUNuRCxNQUFNLFlBQVksR0FBOEIsRUFBRSxDQUFDO0FBRW5ELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7SUFDNUIsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMvQyxJQUFJLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVCLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO0tBQ2pDO0lBRUQsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQztJQUM5QixZQUFZLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQy9CO0FBRUQ7Ozs7R0FJRztBQUNILFNBQWdCLE9BQU8sQ0FBQyxPQUFlO0lBQ3JDLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQzVCLE1BQU0sSUFBSSxLQUFLLENBQUMscURBQXFELENBQUMsQ0FBQztLQUN4RTtJQUVELE1BQU0sR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMxQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2RCxJQUFJLFdBQVcsSUFBSSxZQUFZLEVBQUU7WUFDL0IsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsdUNBQXVDLFdBQVcsaUJBQWlCLENBQUMsQ0FBQztTQUN0RjtLQUNGO0lBRUQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBaEJELDBCQWdCQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQixLQUFLLENBQUMsS0FBaUI7SUFDckMsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDekMsR0FBRyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQVBELHNCQU9DIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0hPUlRfVE9fSEVYOiB7IFtrZXk6IG51bWJlcl06IHN0cmluZyB9ID0ge307XG5jb25zdCBIRVhfVE9fU0hPUlQ6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICBsZXQgZW5jb2RlZEJ5dGUgPSBpLnRvU3RyaW5nKDE2KS50b0xvd2VyQ2FzZSgpO1xuICBpZiAoZW5jb2RlZEJ5dGUubGVuZ3RoID09PSAxKSB7XG4gICAgZW5jb2RlZEJ5dGUgPSBgMCR7ZW5jb2RlZEJ5dGV9YDtcbiAgfVxuXG4gIFNIT1JUX1RPX0hFWFtpXSA9IGVuY29kZWRCeXRlO1xuICBIRVhfVE9fU0hPUlRbZW5jb2RlZEJ5dGVdID0gaTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nIHRvIGEgVWludDhBcnJheSBvZiBieXRlcy5cbiAqXG4gKiBAcGFyYW0gZW5jb2RlZCBUaGUgaGV4YWRlY2ltYWwgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21IZXgoZW5jb2RlZDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIGlmIChlbmNvZGVkLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggZW5jb2RlZCBzdHJpbmdzIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBsZW5ndGhcIik7XG4gIH1cblxuICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShlbmNvZGVkLmxlbmd0aCAvIDIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVuY29kZWQubGVuZ3RoOyBpICs9IDIpIHtcbiAgICBjb25zdCBlbmNvZGVkQnl0ZSA9IGVuY29kZWQuc3Vic3RyKGksIDIpLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGVuY29kZWRCeXRlIGluIEhFWF9UT19TSE9SVCkge1xuICAgICAgb3V0W2kgLyAyXSA9IEhFWF9UT19TSE9SVFtlbmNvZGVkQnl0ZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGRlY29kZSB1bnJlY29nbml6ZWQgc2VxdWVuY2UgJHtlbmNvZGVkQnl0ZX0gYXMgaGV4YWRlY2ltYWxgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgVWludDhBcnJheSBvZiBiaW5hcnkgZGF0YSB0byBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBieXRlcyBUaGUgYmluYXJ5IGRhdGEgdG8gZW5jb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hleChieXRlczogVWludDhBcnJheSk6IHN0cmluZyB7XG4gIGxldCBvdXQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgIG91dCArPSBTSE9SVF9UT19IRVhbYnl0ZXNbaV1dO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS1wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VzY2FwZS11cmktcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBeUM7QUFFbEMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFXLEVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLHNCQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFBakYsUUFBQSxhQUFhLGlCQUFvRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVzY2FwZVVyaSB9IGZyb20gXCIuL2VzY2FwZS11cmlcIjtcblxuZXhwb3J0IGNvbnN0IGVzY2FwZVVyaVBhdGggPSAodXJpOiBzdHJpbmcpOiBzdHJpbmcgPT4gdXJpLnNwbGl0KFwiL1wiKS5tYXAoZXNjYXBlVXJpKS5qb2luKFwiL1wiKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => \n// AWS percent-encodes some extra non-standard characters in a URI\nencodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lc2NhcGUtdXJpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFPLE1BQU0sU0FBUyxHQUFHLENBQUMsR0FBVyxFQUFVLEVBQUU7QUFDL0Msa0VBQWtFO0FBQ2xFLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFGNUMsUUFBQSxTQUFTLGFBRW1DO0FBRXpELE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZXNjYXBlVXJpID0gKHVyaTogc3RyaW5nKTogc3RyaW5nID0+XG4gIC8vIEFXUyBwZXJjZW50LWVuY29kZXMgc29tZSBleHRyYSBub24tc3RhbmRhcmQgY2hhcmFjdGVycyBpbiBhIFVSSVxuICBlbmNvZGVVUklDb21wb25lbnQodXJpKS5yZXBsYWNlKC9bIScoKSpdL2csIGhleEVuY29kZSk7XG5cbmNvbnN0IGhleEVuY29kZSA9IChjOiBzdHJpbmcpID0+IGAlJHtjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9YDtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./escape-uri\"), exports);\ntslib_1.__exportStar(require(\"./escape-uri-path\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQTZCO0FBQzdCLDREQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmktcGF0aFwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\n/**\n * Collect metrics from runtime to put into user agent.\n */\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        // sdk-metadata\n        [\"aws-sdk-js\", clientVersion],\n        // os-metadata\n        [`os/${os_1.platform()}`, os_1.release()],\n        // language-metadata\n        // ECMAScript edition doesn't matter in JS, so no version needed.\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    if (serviceId) {\n        // api-metadata\n        // service Id may not appear in non-AWS clients\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        // env-metadata\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = node_config_provider_1.loadConfig({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0VBQTJEO0FBRTNELDJCQUF1QztBQUN2QyxxQ0FBd0M7QUFFM0IsUUFBQSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQztBQUN6QyxRQUFBLGtCQUFrQixHQUFHLGVBQWUsQ0FBQztBQU9sRDs7R0FFRztBQUNJLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQTJCLEVBQXVCLEVBQUU7SUFDN0csTUFBTSxRQUFRLEdBQWM7UUFDMUIsZUFBZTtRQUNmLENBQUMsWUFBWSxFQUFFLGFBQWEsQ0FBQztRQUM3QixjQUFjO1FBQ2QsQ0FBQyxNQUFNLGFBQVEsRUFBRSxFQUFFLEVBQUUsWUFBTyxFQUFFLENBQUM7UUFDL0Isb0JBQW9CO1FBQ3BCLGlFQUFpRTtRQUNqRSxDQUFDLFNBQVMsQ0FBQztRQUNYLENBQUMsV0FBVyxFQUFFLEdBQUcsa0JBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUNsQyxDQUFDO0lBRUYsSUFBSSxTQUFTLEVBQUU7UUFDYixlQUFlO1FBQ2YsK0NBQStDO1FBQy9DLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLFNBQVMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7S0FDcEQ7SUFFRCxJQUFJLGFBQUcsQ0FBQyxpQkFBaUIsRUFBRTtRQUN6QixlQUFlO1FBQ2YsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksYUFBRyxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3REO0lBRUQsTUFBTSxZQUFZLEdBQUcsaUNBQVUsQ0FBcUI7UUFDbEQsMkJBQTJCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQywwQkFBa0IsQ0FBQztRQUM3RCxrQkFBa0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLDBCQUFrQixDQUFDO1FBQzVELE9BQU8sRUFBRSxTQUFTO0tBQ25CLENBQUMsRUFBRSxDQUFDO0lBRUwsSUFBSSxpQkFBaUIsR0FBMEIsU0FBUyxDQUFDO0lBQ3pELE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDaEIsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLE1BQU0sWUFBWSxDQUFDO1lBQ2pDLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLFFBQVEsRUFBRSxDQUFDLE9BQU8sS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUM7U0FDN0U7UUFDRCxPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQXJDVyxRQUFBLGdCQUFnQixvQkFxQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZENvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9ub2RlLWNvbmZpZy1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIsIFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgcGxhdGZvcm0sIHJlbGVhc2UgfSBmcm9tIFwib3NcIjtcbmltcG9ydCB7IGVudiwgdmVyc2lvbnMgfSBmcm9tIFwicHJvY2Vzc1wiO1xuXG5leHBvcnQgY29uc3QgVUFfQVBQX0lEX0VOVl9OQU1FID0gXCJBV1NfU0RLX1VBX0FQUF9JRFwiO1xuZXhwb3J0IGNvbnN0IFVBX0FQUF9JRF9JTklfTkFNRSA9IFwic2RrLXVhLWFwcC1pZFwiO1xuXG5pbnRlcmZhY2UgRGVmYXVsdFVzZXJBZ2VudE9wdGlvbnMge1xuICBzZXJ2aWNlSWQ/OiBzdHJpbmc7XG4gIGNsaWVudFZlcnNpb246IHN0cmluZztcbn1cblxuLyoqXG4gKiBDb2xsZWN0IG1ldHJpY3MgZnJvbSBydW50aW1lIHRvIHB1dCBpbnRvIHVzZXIgYWdlbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0VXNlckFnZW50ID0gKHsgc2VydmljZUlkLCBjbGllbnRWZXJzaW9uIH06IERlZmF1bHRVc2VyQWdlbnRPcHRpb25zKTogUHJvdmlkZXI8VXNlckFnZW50PiA9PiB7XG4gIGNvbnN0IHNlY3Rpb25zOiBVc2VyQWdlbnQgPSBbXG4gICAgLy8gc2RrLW1ldGFkYXRhXG4gICAgW1wiYXdzLXNkay1qc1wiLCBjbGllbnRWZXJzaW9uXSxcbiAgICAvLyBvcy1tZXRhZGF0YVxuICAgIFtgb3MvJHtwbGF0Zm9ybSgpfWAsIHJlbGVhc2UoKV0sXG4gICAgLy8gbGFuZ3VhZ2UtbWV0YWRhdGFcbiAgICAvLyBFQ01BU2NyaXB0IGVkaXRpb24gZG9lc24ndCBtYXR0ZXIgaW4gSlMsIHNvIG5vIHZlcnNpb24gbmVlZGVkLlxuICAgIFtcImxhbmcvanNcIl0sXG4gICAgW1wibWQvbm9kZWpzXCIsIGAke3ZlcnNpb25zLm5vZGV9YF0sXG4gIF07XG5cbiAgaWYgKHNlcnZpY2VJZCkge1xuICAgIC8vIGFwaS1tZXRhZGF0YVxuICAgIC8vIHNlcnZpY2UgSWQgbWF5IG5vdCBhcHBlYXIgaW4gbm9uLUFXUyBjbGllbnRzXG4gICAgc2VjdGlvbnMucHVzaChbYGFwaS8ke3NlcnZpY2VJZH1gLCBjbGllbnRWZXJzaW9uXSk7XG4gIH1cblxuICBpZiAoZW52LkFXU19FWEVDVVRJT05fRU5WKSB7XG4gICAgLy8gZW52LW1ldGFkYXRhXG4gICAgc2VjdGlvbnMucHVzaChbYGV4ZWMtZW52LyR7ZW52LkFXU19FWEVDVVRJT05fRU5WfWBdKTtcbiAgfVxuXG4gIGNvbnN0IGFwcElkUHJvbWlzZSA9IGxvYWRDb25maWc8c3RyaW5nIHwgdW5kZWZpbmVkPih7XG4gICAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiAoZW52KSA9PiBlbnZbVUFfQVBQX0lEX0VOVl9OQU1FXSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBwcm9maWxlW1VBX0FQUF9JRF9JTklfTkFNRV0sXG4gICAgZGVmYXVsdDogdW5kZWZpbmVkLFxuICB9KSgpO1xuXG4gIGxldCByZXNvbHZlZFVzZXJBZ2VudDogVXNlckFnZW50IHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghcmVzb2x2ZWRVc2VyQWdlbnQpIHtcbiAgICAgIGNvbnN0IGFwcElkID0gYXdhaXQgYXBwSWRQcm9taXNlO1xuICAgICAgcmVzb2x2ZWRVc2VyQWdlbnQgPSBhcHBJZCA/IFsuLi5zZWN0aW9ucywgW2BhcHAvJHthcHBJZH1gXV0gOiBbLi4uc2VjdGlvbnNdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZWRVc2VyQWdlbnQ7XG4gIH07XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = util_buffer_from_1.fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQXdFO0FBRWpFLE1BQU0sUUFBUSxHQUFHLENBQUMsS0FBYSxFQUFjLEVBQUU7SUFDcEQsTUFBTSxHQUFHLEdBQUcsNkJBQVUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdEMsT0FBTyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUNuRyxDQUFDLENBQUM7QUFIVyxRQUFBLFFBQVEsWUFHbkI7QUFFSyxNQUFNLE1BQU0sR0FBRyxDQUFDLEtBQWlCLEVBQVUsRUFBRSxDQUNsRCxrQ0FBZSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRHhFLFFBQUEsTUFBTSxVQUNrRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21BcnJheUJ1ZmZlciwgZnJvbVN0cmluZyB9IGZyb20gXCJAYXdzLXNkay91dGlsLWJ1ZmZlci1mcm9tXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tVXRmOCA9IChpbnB1dDogc3RyaW5nKTogVWludDhBcnJheSA9PiB7XG4gIGNvbnN0IGJ1ZiA9IGZyb21TdHJpbmcoaW5wdXQsIFwidXRmOFwiKTtcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCAvIFVpbnQ4QXJyYXkuQllURVNfUEVSX0VMRU1FTlQpO1xufTtcblxuZXhwb3J0IGNvbnN0IHRvVXRmOCA9IChpbnB1dDogVWludDhBcnJheSk6IHN0cmluZyA9PlxuICBmcm9tQXJyYXlCdWZmZXIoaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyhcInV0ZjhcIik7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWaiter = void 0;\nconst poller_1 = require(\"./poller\");\nconst utils_1 = require(\"./utils\");\nconst waiter_1 = require(\"./waiter\");\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        abortSignal.onabort = () => resolve({ state: waiter_1.WaiterState.ABORTED });\n    });\n};\n/**\n * Create a waiter promise that only resolves when:\n * 1. Abort controller is signaled\n * 2. Max wait time is reached\n * 3. `acceptorChecks` succeeds, or fails\n * Otherwise, it invokes `acceptorChecks` with exponential-backoff delay.\n *\n * @internal\n */\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiter_1.waiterServiceDefaults,\n        ...options,\n    };\n    utils_1.validateWaiterOptions(params);\n    const exitConditions = [poller_1.runPolling(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\nexports.createWaiter = createWaiter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlV2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NyZWF0ZVdhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBc0M7QUFDdEMsbUNBQWdEO0FBQ2hELHFDQUEyRjtBQUUzRixNQUFNLFlBQVksR0FBRyxLQUFLLEVBQUUsV0FBd0IsRUFBeUIsRUFBRTtJQUM3RSxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDN0IsV0FBVyxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLEVBQUUsb0JBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RFLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUY7Ozs7Ozs7O0dBUUc7QUFDSSxNQUFNLFlBQVksR0FBRyxLQUFLLEVBQy9CLE9BQThCLEVBQzlCLEtBQVksRUFDWixjQUF1RSxFQUNoRCxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHO1FBQ2IsR0FBRyw4QkFBcUI7UUFDeEIsR0FBRyxPQUFPO0tBQ1gsQ0FBQztJQUNGLDZCQUFxQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTlCLE1BQU0sY0FBYyxHQUFHLENBQUMsbUJBQVUsQ0FBZ0IsTUFBTSxFQUFFLEtBQUssRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2xGLElBQUksT0FBTyxDQUFDLGVBQWUsRUFBRTtRQUMzQixjQUFjLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7S0FDbkU7SUFFRCxJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUU7UUFDdkIsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7S0FDeEQ7SUFFRCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDdEMsQ0FBQyxDQUFDO0FBckJXLFFBQUEsWUFBWSxnQkFxQnZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJvcnRTaWduYWwgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgcnVuUG9sbGluZyB9IGZyb20gXCIuL3BvbGxlclwiO1xuaW1wb3J0IHsgdmFsaWRhdGVXYWl0ZXJPcHRpb25zIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IFdhaXRlck9wdGlvbnMsIFdhaXRlclJlc3VsdCwgd2FpdGVyU2VydmljZURlZmF1bHRzLCBXYWl0ZXJTdGF0ZSB9IGZyb20gXCIuL3dhaXRlclwiO1xuXG5jb25zdCBhYm9ydFRpbWVvdXQgPSBhc3luYyAoYWJvcnRTaWduYWw6IEFib3J0U2lnbmFsKTogUHJvbWlzZTxXYWl0ZXJSZXN1bHQ+ID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgYWJvcnRTaWduYWwub25hYm9ydCA9ICgpID0+IHJlc29sdmUoeyBzdGF0ZTogV2FpdGVyU3RhdGUuQUJPUlRFRCB9KTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIENyZWF0ZSBhIHdhaXRlciBwcm9taXNlIHRoYXQgb25seSByZXNvbHZlcyB3aGVuOlxuICogMS4gQWJvcnQgY29udHJvbGxlciBpcyBzaWduYWxlZFxuICogMi4gTWF4IHdhaXQgdGltZSBpcyByZWFjaGVkXG4gKiAzLiBgYWNjZXB0b3JDaGVja3NgIHN1Y2NlZWRzLCBvciBmYWlsc1xuICogT3RoZXJ3aXNlLCBpdCBpbnZva2VzIGBhY2NlcHRvckNoZWNrc2Agd2l0aCBleHBvbmVudGlhbC1iYWNrb2ZmIGRlbGF5LlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlV2FpdGVyID0gYXN5bmMgPENsaWVudCwgSW5wdXQ+KFxuICBvcHRpb25zOiBXYWl0ZXJPcHRpb25zPENsaWVudD4sXG4gIGlucHV0OiBJbnB1dCxcbiAgYWNjZXB0b3JDaGVja3M6IChjbGllbnQ6IENsaWVudCwgaW5wdXQ6IElucHV0KSA9PiBQcm9taXNlPFdhaXRlclJlc3VsdD5cbik6IFByb21pc2U8V2FpdGVyUmVzdWx0PiA9PiB7XG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICAuLi53YWl0ZXJTZXJ2aWNlRGVmYXVsdHMsXG4gICAgLi4ub3B0aW9ucyxcbiAgfTtcbiAgdmFsaWRhdGVXYWl0ZXJPcHRpb25zKHBhcmFtcyk7XG5cbiAgY29uc3QgZXhpdENvbmRpdGlvbnMgPSBbcnVuUG9sbGluZzxDbGllbnQsIElucHV0PihwYXJhbXMsIGlucHV0LCBhY2NlcHRvckNoZWNrcyldO1xuICBpZiAob3B0aW9ucy5hYm9ydENvbnRyb2xsZXIpIHtcbiAgICBleGl0Q29uZGl0aW9ucy5wdXNoKGFib3J0VGltZW91dChvcHRpb25zLmFib3J0Q29udHJvbGxlci5zaWduYWwpKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmFib3J0U2lnbmFsKSB7XG4gICAgZXhpdENvbmRpdGlvbnMucHVzaChhYm9ydFRpbWVvdXQob3B0aW9ucy5hYm9ydFNpZ25hbCkpO1xuICB9XG5cbiAgcmV0dXJuIFByb21pc2UucmFjZShleGl0Q29uZGl0aW9ucyk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./createWaiter\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseURBQStCO0FBQy9CLG1EQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NyZWF0ZVdhaXRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FpdGVyXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runPolling = void 0;\nconst sleep_1 = require(\"./utils/sleep\");\nconst waiter_1 = require(\"./waiter\");\n/**\n * Reference: https://awslabs.github.io/smithy/1.0/spec/waiters.html#waiter-retries\n */\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Function that runs polling as part of waiters. This will make one inital attempt and then\n * subsequent attempts with an increasing delay.\n * @param params options passed to the waiter.\n * @param client AWS SDK Client\n * @param input client input\n * @param stateChecker function that checks the acceptor states on each poll.\n */\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    var _a;\n    const { state } = await acceptorChecks(client, input);\n    if (state !== waiter_1.WaiterState.RETRY) {\n        return { state };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    // The max attempt number that the derived delay time tend to increase.\n    // Pre-compute this number to avoid Number type overflow.\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (((_a = abortController === null || abortController === void 0 ? void 0 : abortController.signal) === null || _a === void 0 ? void 0 : _a.aborted) || (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted)) {\n            return { state: waiter_1.WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        // Resolve the promise explicitly at timeout or aborted. Otherwise this while loop will keep making API call until\n        // `acceptorCheck` returns non-retry status, even with the Promise.race() outside.\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: waiter_1.WaiterState.TIMEOUT };\n        }\n        await sleep_1.sleep(delay);\n        const { state } = await acceptorChecks(client, input);\n        if (state !== waiter_1.WaiterState.RETRY) {\n            return { state };\n        }\n        currentAttempt += 1;\n    }\n};\nexports.runPolling = runPolling;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FBc0M7QUFDdEMscUNBQW9FO0FBRXBFOztHQUVHO0FBQ0gsTUFBTSw0QkFBNEIsR0FBRyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0IsRUFBRSxjQUFzQixFQUFFLE9BQWUsRUFBRSxFQUFFO0lBQ25ILElBQUksT0FBTyxHQUFHLGNBQWM7UUFBRSxPQUFPLFFBQVEsQ0FBQztJQUM5QyxNQUFNLEtBQUssR0FBRyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzVDLE9BQU8sYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQVcsRUFBRSxHQUFXLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFFdEY7Ozs7Ozs7R0FPRztBQUNJLE1BQU0sVUFBVSxHQUFHLEtBQUssRUFDN0IsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBeUIsRUFDaEcsS0FBWSxFQUNaLGNBQXVFLEVBQ2hELEVBQUU7O0lBQ3pCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxNQUFNLGNBQWMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdEQsSUFBSSxLQUFLLEtBQUssb0JBQVcsQ0FBQyxLQUFLLEVBQUU7UUFDL0IsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO0tBQ2xCO0lBRUQsSUFBSSxjQUFjLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQ2xELHVFQUF1RTtJQUN2RSx5REFBeUQ7SUFDekQsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkUsT0FBTyxJQUFJLEVBQUU7UUFDWCxJQUFJLENBQUEsTUFBQSxlQUFlLGFBQWYsZUFBZSx1QkFBZixlQUFlLENBQUUsTUFBTSwwQ0FBRSxPQUFPLE1BQUksV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFFLE9BQU8sQ0FBQSxFQUFFO1lBQzVELE9BQU8sRUFBRSxLQUFLLEVBQUUsb0JBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUN2QztRQUNELE1BQU0sS0FBSyxHQUFHLDRCQUE0QixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQy9GLGtIQUFrSDtRQUNsSCxrRkFBa0Y7UUFDbEYsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxTQUFTLEVBQUU7WUFDekMsT0FBTyxFQUFFLEtBQUssRUFBRSxvQkFBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3ZDO1FBQ0QsTUFBTSxhQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkIsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLE1BQU0sY0FBYyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN0RCxJQUFJLEtBQUssS0FBSyxvQkFBVyxDQUFDLEtBQUssRUFBRTtZQUMvQixPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7U0FDbEI7UUFFRCxjQUFjLElBQUksQ0FBQyxDQUFDO0tBQ3JCO0FBQ0gsQ0FBQyxDQUFDO0FBakNXLFFBQUEsVUFBVSxjQWlDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzbGVlcCB9IGZyb20gXCIuL3V0aWxzL3NsZWVwXCI7XG5pbXBvcnQgeyBXYWl0ZXJPcHRpb25zLCBXYWl0ZXJSZXN1bHQsIFdhaXRlclN0YXRlIH0gZnJvbSBcIi4vd2FpdGVyXCI7XG5cbi8qKlxuICogUmVmZXJlbmNlOiBodHRwczovL2F3c2xhYnMuZ2l0aHViLmlvL3NtaXRoeS8xLjAvc3BlYy93YWl0ZXJzLmh0bWwjd2FpdGVyLXJldHJpZXNcbiAqL1xuY29uc3QgZXhwb25lbnRpYWxCYWNrb2ZmV2l0aEppdHRlciA9IChtaW5EZWxheTogbnVtYmVyLCBtYXhEZWxheTogbnVtYmVyLCBhdHRlbXB0Q2VpbGluZzogbnVtYmVyLCBhdHRlbXB0OiBudW1iZXIpID0+IHtcbiAgaWYgKGF0dGVtcHQgPiBhdHRlbXB0Q2VpbGluZykgcmV0dXJuIG1heERlbGF5O1xuICBjb25zdCBkZWxheSA9IG1pbkRlbGF5ICogMiAqKiAoYXR0ZW1wdCAtIDEpO1xuICByZXR1cm4gcmFuZG9tSW5SYW5nZShtaW5EZWxheSwgZGVsYXkpO1xufTtcblxuY29uc3QgcmFuZG9tSW5SYW5nZSA9IChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpID0+IG1pbiArIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKTtcblxuLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHJ1bnMgcG9sbGluZyBhcyBwYXJ0IG9mIHdhaXRlcnMuIFRoaXMgd2lsbCBtYWtlIG9uZSBpbml0YWwgYXR0ZW1wdCBhbmQgdGhlblxuICogc3Vic2VxdWVudCBhdHRlbXB0cyB3aXRoIGFuIGluY3JlYXNpbmcgZGVsYXkuXG4gKiBAcGFyYW0gcGFyYW1zIG9wdGlvbnMgcGFzc2VkIHRvIHRoZSB3YWl0ZXIuXG4gKiBAcGFyYW0gY2xpZW50IEFXUyBTREsgQ2xpZW50XG4gKiBAcGFyYW0gaW5wdXQgY2xpZW50IGlucHV0XG4gKiBAcGFyYW0gc3RhdGVDaGVja2VyIGZ1bmN0aW9uIHRoYXQgY2hlY2tzIHRoZSBhY2NlcHRvciBzdGF0ZXMgb24gZWFjaCBwb2xsLlxuICovXG5leHBvcnQgY29uc3QgcnVuUG9sbGluZyA9IGFzeW5jIDxDbGllbnQsIElucHV0PihcbiAgeyBtaW5EZWxheSwgbWF4RGVsYXksIG1heFdhaXRUaW1lLCBhYm9ydENvbnRyb2xsZXIsIGNsaWVudCwgYWJvcnRTaWduYWwgfTogV2FpdGVyT3B0aW9uczxDbGllbnQ+LFxuICBpbnB1dDogSW5wdXQsXG4gIGFjY2VwdG9yQ2hlY2tzOiAoY2xpZW50OiBDbGllbnQsIGlucHV0OiBJbnB1dCkgPT4gUHJvbWlzZTxXYWl0ZXJSZXN1bHQ+XG4pOiBQcm9taXNlPFdhaXRlclJlc3VsdD4gPT4ge1xuICBjb25zdCB7IHN0YXRlIH0gPSBhd2FpdCBhY2NlcHRvckNoZWNrcyhjbGllbnQsIGlucHV0KTtcbiAgaWYgKHN0YXRlICE9PSBXYWl0ZXJTdGF0ZS5SRVRSWSkge1xuICAgIHJldHVybiB7IHN0YXRlIH07XG4gIH1cblxuICBsZXQgY3VycmVudEF0dGVtcHQgPSAxO1xuICBjb25zdCB3YWl0VW50aWwgPSBEYXRlLm5vdygpICsgbWF4V2FpdFRpbWUgKiAxMDAwO1xuICAvLyBUaGUgbWF4IGF0dGVtcHQgbnVtYmVyIHRoYXQgdGhlIGRlcml2ZWQgZGVsYXkgdGltZSB0ZW5kIHRvIGluY3JlYXNlLlxuICAvLyBQcmUtY29tcHV0ZSB0aGlzIG51bWJlciB0byBhdm9pZCBOdW1iZXIgdHlwZSBvdmVyZmxvdy5cbiAgY29uc3QgYXR0ZW1wdENlaWxpbmcgPSBNYXRoLmxvZyhtYXhEZWxheSAvIG1pbkRlbGF5KSAvIE1hdGgubG9nKDIpICsgMTtcbiAgd2hpbGUgKHRydWUpIHtcbiAgICBpZiAoYWJvcnRDb250cm9sbGVyPy5zaWduYWw/LmFib3J0ZWQgfHwgYWJvcnRTaWduYWw/LmFib3J0ZWQpIHtcbiAgICAgIHJldHVybiB7IHN0YXRlOiBXYWl0ZXJTdGF0ZS5BQk9SVEVEIH07XG4gICAgfVxuICAgIGNvbnN0IGRlbGF5ID0gZXhwb25lbnRpYWxCYWNrb2ZmV2l0aEppdHRlcihtaW5EZWxheSwgbWF4RGVsYXksIGF0dGVtcHRDZWlsaW5nLCBjdXJyZW50QXR0ZW1wdCk7XG4gICAgLy8gUmVzb2x2ZSB0aGUgcHJvbWlzZSBleHBsaWNpdGx5IGF0IHRpbWVvdXQgb3IgYWJvcnRlZC4gT3RoZXJ3aXNlIHRoaXMgd2hpbGUgbG9vcCB3aWxsIGtlZXAgbWFraW5nIEFQSSBjYWxsIHVudGlsXG4gICAgLy8gYGFjY2VwdG9yQ2hlY2tgIHJldHVybnMgbm9uLXJldHJ5IHN0YXR1cywgZXZlbiB3aXRoIHRoZSBQcm9taXNlLnJhY2UoKSBvdXRzaWRlLlxuICAgIGlmIChEYXRlLm5vdygpICsgZGVsYXkgKiAxMDAwID4gd2FpdFVudGlsKSB7XG4gICAgICByZXR1cm4geyBzdGF0ZTogV2FpdGVyU3RhdGUuVElNRU9VVCB9O1xuICAgIH1cbiAgICBhd2FpdCBzbGVlcChkZWxheSk7XG4gICAgY29uc3QgeyBzdGF0ZSB9ID0gYXdhaXQgYWNjZXB0b3JDaGVja3MoY2xpZW50LCBpbnB1dCk7XG4gICAgaWYgKHN0YXRlICE9PSBXYWl0ZXJTdGF0ZS5SRVRSWSkge1xuICAgICAgcmV0dXJuIHsgc3RhdGUgfTtcbiAgICB9XG5cbiAgICBjdXJyZW50QXR0ZW1wdCArPSAxO1xuICB9XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./sleep\"), exports);\ntslib_1.__exportStar(require(\"./validate\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0RBQXdCO0FBQ3hCLHFEQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3NsZWVwXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0ZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = void 0;\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\nexports.sleep = sleep;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xlZXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvc2xlZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxLQUFLLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRTtJQUN2QyxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3ZFLENBQUMsQ0FBQztBQUZXLFFBQUEsS0FBSyxTQUVoQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzbGVlcCA9IChzZWNvbmRzOiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHNlY29uZHMgKiAxMDAwKSk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateWaiterOptions = void 0;\n/**\n * Validates that waiter options are passed correctly\n * @param options a waiter configuration object\n */\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\nexports.validateWaiterOptions = validateWaiterOptions;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvdmFsaWRhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUE7OztHQUdHO0FBQ0ksTUFBTSxxQkFBcUIsR0FBRyxDQUFTLE9BQThCLEVBQVEsRUFBRTtJQUNwRixJQUFJLE9BQU8sQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFO1FBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsd0RBQXdELENBQUMsQ0FBQztLQUMzRTtTQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUU7UUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO0tBQ3hFO1NBQU0sSUFBSSxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRTtRQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7S0FDeEU7U0FBTSxJQUFJLE9BQU8sQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtRQUNsRCxNQUFNLElBQUksS0FBSyxDQUNiLG9DQUFvQyxPQUFPLENBQUMsV0FBVyx3REFBd0QsT0FBTyxDQUFDLFFBQVEsbUJBQW1CLENBQ25KLENBQUM7S0FDSDtTQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxFQUFFO1FBQzlDLE1BQU0sSUFBSSxLQUFLLENBQ2IsaUNBQWlDLE9BQU8sQ0FBQyxRQUFRLHdEQUF3RCxPQUFPLENBQUMsUUFBUSxtQkFBbUIsQ0FDN0ksQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBaEJXLFFBQUEscUJBQXFCLHlCQWdCaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWl0ZXJPcHRpb25zIH0gZnJvbSBcIi4uL3dhaXRlclwiO1xuXG4vKipcbiAqIFZhbGlkYXRlcyB0aGF0IHdhaXRlciBvcHRpb25zIGFyZSBwYXNzZWQgY29ycmVjdGx5XG4gKiBAcGFyYW0gb3B0aW9ucyBhIHdhaXRlciBjb25maWd1cmF0aW9uIG9iamVjdFxuICovXG5leHBvcnQgY29uc3QgdmFsaWRhdGVXYWl0ZXJPcHRpb25zID0gPENsaWVudD4ob3B0aW9uczogV2FpdGVyT3B0aW9uczxDbGllbnQ+KTogdm9pZCA9PiB7XG4gIGlmIChvcHRpb25zLm1heFdhaXRUaW1lIDwgMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhXYWl0VGltZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwYCk7XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5taW5EZWxheSA8IDEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFdhaXRlckNvbmZpZ3VyYXRpb24ubWluRGVsYXkgbXVzdCBiZSBncmVhdGVyIHRoYW4gMGApO1xuICB9IGVsc2UgaWYgKG9wdGlvbnMubWF4RGVsYXkgPCAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBXYWl0ZXJDb25maWd1cmF0aW9uLm1heERlbGF5IG11c3QgYmUgZ3JlYXRlciB0aGFuIDBgKTtcbiAgfSBlbHNlIGlmIChvcHRpb25zLm1heFdhaXRUaW1lIDw9IG9wdGlvbnMubWluRGVsYXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhXYWl0VGltZSBbJHtvcHRpb25zLm1heFdhaXRUaW1lfV0gbXVzdCBiZSBncmVhdGVyIHRoYW4gV2FpdGVyQ29uZmlndXJhdGlvbi5taW5EZWxheSBbJHtvcHRpb25zLm1pbkRlbGF5fV0gZm9yIHRoaXMgd2FpdGVyYFxuICAgICk7XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5tYXhEZWxheSA8IG9wdGlvbnMubWluRGVsYXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhEZWxheSBbJHtvcHRpb25zLm1heERlbGF5fV0gbXVzdCBiZSBncmVhdGVyIHRoYW4gV2FpdGVyQ29uZmlndXJhdGlvbi5taW5EZWxheSBbJHtvcHRpb25zLm1pbkRlbGF5fV0gZm9yIHRoaXMgd2FpdGVyYFxuICAgICk7XG4gIH1cbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;\n/**\n * @private\n */\nexports.waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nvar WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));\n/**\n * Handles and throws exceptions resulting from the waiterResult\n * @param result WaiterResult\n */\nconst checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify({ result })}`);\n    }\n    return result;\n};\nexports.checkExceptions = checkExceptions;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQTs7R0FFRztBQUNVLFFBQUEscUJBQXFCLEdBQUc7SUFDbkMsUUFBUSxFQUFFLENBQUM7SUFDWCxRQUFRLEVBQUUsR0FBRztDQUNkLENBQUM7QUFRRixJQUFZLFdBTVg7QUFORCxXQUFZLFdBQVc7SUFDckIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsOEJBQWUsQ0FBQTtJQUNmLGtDQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFOVyxXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQU10QjtBQVdEOzs7R0FHRztBQUNJLE1BQU0sZUFBZSxHQUFHLENBQUMsTUFBb0IsRUFBZ0IsRUFBRTtJQUNwRSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLE9BQU8sRUFBRTtRQUN4QyxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FDMUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2hCLEdBQUcsTUFBTTtZQUNULE1BQU0sRUFBRSxxQkFBcUI7U0FDOUIsQ0FBQyxFQUFFLENBQ0wsQ0FBQztRQUNGLFVBQVUsQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO1FBQy9CLE1BQU0sVUFBVSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxNQUFNLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxPQUFPLEVBQUU7UUFDL0MsTUFBTSxZQUFZLEdBQUcsSUFBSSxLQUFLLENBQzVCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNoQixHQUFHLE1BQU07WUFDVCxNQUFNLEVBQUUsc0JBQXNCO1NBQy9CLENBQUMsRUFBRSxDQUNMLENBQUM7UUFDRixZQUFZLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztRQUNuQyxNQUFNLFlBQVksQ0FBQztLQUNwQjtTQUFNLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxXQUFXLENBQUMsT0FBTyxFQUFFO1FBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbEQ7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUF2QlcsUUFBQSxlQUFlLG1CQXVCMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWl0ZXJDb25maWd1cmF0aW9uIGFzIFdhaXRlckNvbmZpZ3VyYXRpb25fXyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhaXRlckNvbmZpZ3VyYXRpb248VD4gZXh0ZW5kcyBXYWl0ZXJDb25maWd1cmF0aW9uX188VD4ge31cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3Qgd2FpdGVyU2VydmljZURlZmF1bHRzID0ge1xuICBtaW5EZWxheTogMixcbiAgbWF4RGVsYXk6IDEyMCxcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IHR5cGUgV2FpdGVyT3B0aW9uczxDbGllbnQ+ID0gV2FpdGVyQ29uZmlndXJhdGlvbjxDbGllbnQ+ICZcbiAgUmVxdWlyZWQ8UGljazxXYWl0ZXJDb25maWd1cmF0aW9uPENsaWVudD4sIFwibWluRGVsYXlcIiB8IFwibWF4RGVsYXlcIj4+O1xuXG5leHBvcnQgZW51bSBXYWl0ZXJTdGF0ZSB7XG4gIEFCT1JURUQgPSBcIkFCT1JURURcIixcbiAgRkFJTFVSRSA9IFwiRkFJTFVSRVwiLFxuICBTVUNDRVNTID0gXCJTVUNDRVNTXCIsXG4gIFJFVFJZID0gXCJSRVRSWVwiLFxuICBUSU1FT1VUID0gXCJUSU1FT1VUXCIsXG59XG5cbmV4cG9ydCB0eXBlIFdhaXRlclJlc3VsdCA9IHtcbiAgc3RhdGU6IFdhaXRlclN0YXRlO1xuXG4gIC8qKlxuICAgKiAob3B0aW9uYWwpIEluZGljYXRlcyBhIHJlYXNvbiBmb3Igd2h5IGEgd2FpdGVyIGhhcyByZWFjaGVkIGl0cyBzdGF0ZS5cbiAgICovXG4gIHJlYXNvbj86IGFueTtcbn07XG5cbi8qKlxuICogSGFuZGxlcyBhbmQgdGhyb3dzIGV4Y2VwdGlvbnMgcmVzdWx0aW5nIGZyb20gdGhlIHdhaXRlclJlc3VsdFxuICogQHBhcmFtIHJlc3VsdCBXYWl0ZXJSZXN1bHRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrRXhjZXB0aW9ucyA9IChyZXN1bHQ6IFdhaXRlclJlc3VsdCk6IFdhaXRlclJlc3VsdCA9PiB7XG4gIGlmIChyZXN1bHQuc3RhdGUgPT09IFdhaXRlclN0YXRlLkFCT1JURUQpIHtcbiAgICBjb25zdCBhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuICAgICAgYCR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAuLi5yZXN1bHQsXG4gICAgICAgIHJlYXNvbjogXCJSZXF1ZXN0IHdhcyBhYm9ydGVkXCIsXG4gICAgICB9KX1gXG4gICAgKTtcbiAgICBhYm9ydEVycm9yLm5hbWUgPSBcIkFib3J0RXJyb3JcIjtcbiAgICB0aHJvdyBhYm9ydEVycm9yO1xuICB9IGVsc2UgaWYgKHJlc3VsdC5zdGF0ZSA9PT0gV2FpdGVyU3RhdGUuVElNRU9VVCkge1xuICAgIGNvbnN0IHRpbWVvdXRFcnJvciA9IG5ldyBFcnJvcihcbiAgICAgIGAke0pTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICByZWFzb246IFwiV2FpdGVyIGhhcyB0aW1lZCBvdXRcIixcbiAgICAgIH0pfWBcbiAgICApO1xuICAgIHRpbWVvdXRFcnJvci5uYW1lID0gXCJUaW1lb3V0RXJyb3JcIjtcbiAgICB0aHJvdyB0aW1lb3V0RXJyb3I7XG4gIH0gZWxzZSBpZiAocmVzdWx0LnN0YXRlICE9PSBXYWl0ZXJTdGF0ZS5TVUNDRVNTKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke0pTT04uc3RyaW5naWZ5KHsgcmVzdWx0IH0pfWApO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nasync function auth(token) {\n  const tokenType = token.split(/\\./).length === 3 ? \"app\" : /^v\\d+\\./.test(token) ? \"installation\" : \"oauth\";\n  return {\n    type: \"token\",\n    token: token,\n    tokenType\n  };\n}\n\n/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n\n  return `token ${token}`;\n}\n\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\nconst createTokenAuth = function createTokenAuth(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n\n  if (typeof token !== \"string\") {\n    throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n  }\n\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\n\nexports.createTokenAuth = createTokenAuth;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar universalUserAgent = require('universal-user-agent');\nvar beforeAfterHook = require('before-after-hook');\nvar request = require('@octokit/request');\nvar graphql = require('@octokit/graphql');\nvar authToken = require('@octokit/auth-token');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst VERSION = \"3.5.1\";\n\nconst _excluded = [\"authStrategy\"];\nclass Octokit {\n  constructor(options = {}) {\n    const hook = new beforeAfterHook.Collection();\n    const requestDefaults = {\n      baseUrl: request.request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    }; // prepend default user agent with `options.userAgent` if set\n\n    requestDefaults.headers[\"user-agent\"] = [options.userAgent, `octokit-core.js/${VERSION} ${universalUserAgent.getUserAgent()}`].filter(Boolean).join(\" \");\n\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n\n    this.request = request.request.defaults(requestDefaults);\n    this.graphql = graphql.withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign({\n      debug: () => {},\n      info: () => {},\n      warn: console.warn.bind(console),\n      error: console.error.bind(console)\n    }, options.log);\n    this.hook = hook; // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n    //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n    // (2) If only `options.auth` is set, use the default token authentication strategy.\n    // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n    // TODO: type `options.auth` based on `options.authStrategy`.\n\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        // (1)\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        // (2)\n        const auth = authToken.createTokenAuth(options.auth); // @ts-ignore  ¯\\_(ツ)_/¯\n\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const {\n        authStrategy\n      } = options,\n            otherOptions = _objectWithoutProperties(options, _excluded);\n\n      const auth = authStrategy(Object.assign({\n        request: this.request,\n        log: this.log,\n        // we pass the current octokit instance as well as its constructor options\n        // to allow for authentication strategies that return a new octokit instance\n        // that shares the same internal state as the current one. The original\n        // requirement for this was the \"event-octokit\" authentication strategy\n        // of https://github.com/probot/octokit-auth-probot.\n        octokit: this,\n        octokitOptions: otherOptions\n      }, options.auth)); // @ts-ignore  ¯\\_(ツ)_/¯\n\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    } // apply plugins\n    // https://stackoverflow.com/a/16345172\n\n\n    const classConstructor = this.constructor;\n    classConstructor.plugins.forEach(plugin => {\n      Object.assign(this, plugin(this, options));\n    });\n  }\n\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n\n        super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {\n          userAgent: `${options.userAgent} ${defaults.userAgent}`\n        } : null));\n      }\n\n    };\n    return OctokitWithDefaults;\n  }\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n\n\n  static plugin(...newPlugins) {\n    var _a;\n\n    const currentPlugins = this.plugins;\n    const NewOctokit = (_a = class extends this {}, _a.plugins = currentPlugins.concat(newPlugins.filter(plugin => !currentPlugins.includes(plugin))), _a);\n    return NewOctokit;\n  }\n\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n\nexports.Octokit = Octokit;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isPlainObject = require('is-plain-object');\nvar universalUserAgent = require('universal-user-agent');\n\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach(key => {\n    if (isPlainObject.isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, {\n        [key]: options[key]\n      });else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, {\n        [key]: options[key]\n      });\n    }\n  });\n  return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? {\n      method,\n      url\n    } : {\n      url: method\n    }, options);\n  } else {\n    options = Object.assign({}, route);\n  } // lowercase header names before merging with defaults to avoid duplicates\n\n\n  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging\n\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten\n\n  if (defaults && defaults.mediaType.previews.length) {\n    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n  }\n\n  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, \"\"));\n  return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n\n  if (names.length === 0) {\n    return url;\n  }\n\n  return url + separator + names.map(name => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\n\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\n\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n\n  if (!matches) {\n    return [];\n  }\n\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\n\n// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n\n    return part;\n  }).join(\"\");\n}\n\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\n\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key],\n      result = [];\n\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n\n      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            tmp.push(encodeValue(operator, value));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\n\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n    if (expression) {\n      let operator = \"\";\n      const values = [];\n\n      if (operators.indexOf(expression.charAt(0)) !== -1) {\n        operator = expression.charAt(0);\n        expression = expression.substr(1);\n      }\n\n      expression.split(/,/g).forEach(function (variable) {\n        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n      });\n\n      if (operator && operator !== \"+\") {\n        var separator = \",\";\n\n        if (operator === \"?\") {\n          separator = \"&\";\n        } else if (operator !== \"#\") {\n          separator = operator;\n        }\n\n        return (values.length !== 0 ? operator : \"\") + values.join(separator);\n      } else {\n        return values.join(\",\");\n      }\n    } else {\n      return encodeReserved(literal);\n    }\n  });\n}\n\nfunction parse(options) {\n  // https://fetch.spec.whatwg.org/#methods\n  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible\n\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]); // extract variable names from URL to calculate remaining variables later\n\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n\n  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n    }\n\n    if (options.mediaType.previews.length) {\n      const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {\n        const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n        return `application/vnd.github.${preview}-preview${format}`;\n      }).join(\",\");\n    }\n  } // for GET/HEAD requests, set URL query parameters from remaining parameters\n  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n\n\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      } else {\n        headers[\"content-length\"] = 0;\n      }\n    }\n  } // default content-type for JSON if body is set\n\n\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n  // fetch does not allow to set `content-length` header, but we can set body to an empty string\n\n\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  } // Only return body/request keys if present\n\n\n  return Object.assign({\n    method,\n    url,\n    headers\n  }, typeof body !== \"undefined\" ? {\n    body\n  } : null, options.request ? {\n    request: options.request\n  } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\n\nconst VERSION = \"6.0.12\";\n\nconst userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\n\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\",\n    previews: []\n  }\n};\n\nconst endpoint = withDefaults(null, DEFAULTS);\n\nexports.endpoint = endpoint;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar request = require('@octokit/request');\nvar universalUserAgent = require('universal-user-agent');\n\nconst VERSION = \"4.6.4\";\n\nclass GraphqlError extends Error {\n  constructor(request, response) {\n    const message = response.data.errors[0].message;\n    super(message);\n    Object.assign(this, response.data);\n    Object.assign(this, {\n      headers: response.headers\n    });\n    this.name = \"GraphqlError\";\n    this.request = request; // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n}\n\nconst NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n    }\n\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n    }\n  }\n\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n\n    if (!result.variables) {\n      result.variables = {};\n    }\n\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n\n  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n\n  return request(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n\n      throw new GraphqlError(requestOptions, {\n        headers,\n        data: response.data\n      });\n    }\n\n    return response.data.data;\n  });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n  const newRequest = request$1.defaults(newDefaults);\n\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: request.request.endpoint\n  });\n}\n\nconst graphql$1 = withDefaults(request.request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\n\nexports.graphql = graphql$1;\nexports.withCustomRequest = withCustomRequest;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst VERSION = \"2.13.6\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nfunction normalizePaginatedListResponse(response) {\n  // endpoints can respond with 204 if repository is empty\n  if (!response.data) {\n    return _objectSpread2(_objectSpread2({}, response), {}, {\n      data: []\n    });\n  }\n\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response; // keep the additional properties intact as there is currently no other way\n  // to retrieve the same information.\n\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n\n  response.data.total_count = totalCount;\n  return response;\n}\n\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return {\n          done: true\n        };\n\n        try {\n          const response = await requestMethod({\n            method,\n            url,\n            headers\n          });\n          const normalizedResponse = normalizePaginatedListResponse(response); // `response.headers.link` format:\n          // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n          // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n\n          url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n          return {\n            value: normalizedResponse\n          };\n        } catch (error) {\n          if (error.status !== 409) throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n\n    })\n  };\n}\n\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = undefined;\n  }\n\n  return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\n\nfunction gather(octokit, results, iterator, mapFn) {\n  return iterator.next().then(result => {\n    if (result.done) {\n      return results;\n    }\n\n    let earlyExit = false;\n\n    function done() {\n      earlyExit = true;\n    }\n\n    results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n\n    if (earlyExit) {\n      return results;\n    }\n\n    return gather(octokit, results, iterator, mapFn);\n  });\n}\n\nconst composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\nconst paginatingEndpoints = [\"GET /app/installations\", \"GET /applications/grants\", \"GET /authorizations\", \"GET /enterprises/{enterprise}/actions/permissions/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\", \"GET /enterprises/{enterprise}/actions/runners\", \"GET /enterprises/{enterprise}/actions/runners/downloads\", \"GET /events\", \"GET /gists\", \"GET /gists/public\", \"GET /gists/starred\", \"GET /gists/{gist_id}/comments\", \"GET /gists/{gist_id}/commits\", \"GET /gists/{gist_id}/forks\", \"GET /installation/repositories\", \"GET /issues\", \"GET /marketplace_listing/plans\", \"GET /marketplace_listing/plans/{plan_id}/accounts\", \"GET /marketplace_listing/stubbed/plans\", \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\", \"GET /networks/{owner}/{repo}/events\", \"GET /notifications\", \"GET /organizations\", \"GET /orgs/{org}/actions/permissions/repositories\", \"GET /orgs/{org}/actions/runner-groups\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\", \"GET /orgs/{org}/actions/runners\", \"GET /orgs/{org}/actions/runners/downloads\", \"GET /orgs/{org}/actions/secrets\", \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\", \"GET /orgs/{org}/blocks\", \"GET /orgs/{org}/credential-authorizations\", \"GET /orgs/{org}/events\", \"GET /orgs/{org}/failed_invitations\", \"GET /orgs/{org}/hooks\", \"GET /orgs/{org}/installations\", \"GET /orgs/{org}/invitations\", \"GET /orgs/{org}/invitations/{invitation_id}/teams\", \"GET /orgs/{org}/issues\", \"GET /orgs/{org}/members\", \"GET /orgs/{org}/migrations\", \"GET /orgs/{org}/migrations/{migration_id}/repositories\", \"GET /orgs/{org}/outside_collaborators\", \"GET /orgs/{org}/projects\", \"GET /orgs/{org}/public_members\", \"GET /orgs/{org}/repos\", \"GET /orgs/{org}/team-sync/groups\", \"GET /orgs/{org}/teams\", \"GET /orgs/{org}/teams/{team_slug}/discussions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/invitations\", \"GET /orgs/{org}/teams/{team_slug}/members\", \"GET /orgs/{org}/teams/{team_slug}/projects\", \"GET /orgs/{org}/teams/{team_slug}/repos\", \"GET /orgs/{org}/teams/{team_slug}/team-sync/group-mappings\", \"GET /orgs/{org}/teams/{team_slug}/teams\", \"GET /projects/columns/{column_id}/cards\", \"GET /projects/{project_id}/collaborators\", \"GET /projects/{project_id}/columns\", \"GET /repos/{owner}/{repo}/actions/artifacts\", \"GET /repos/{owner}/{repo}/actions/runners\", \"GET /repos/{owner}/{repo}/actions/runners/downloads\", \"GET /repos/{owner}/{repo}/actions/runs\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\", \"GET /repos/{owner}/{repo}/actions/secrets\", \"GET /repos/{owner}/{repo}/actions/workflows\", \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\", \"GET /repos/{owner}/{repo}/assignees\", \"GET /repos/{owner}/{repo}/branches\", \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\", \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\", \"GET /repos/{owner}/{repo}/code-scanning/alerts\", \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", \"GET /repos/{owner}/{repo}/code-scanning/analyses\", \"GET /repos/{owner}/{repo}/collaborators\", \"GET /repos/{owner}/{repo}/comments\", \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/commits\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\", \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\", \"GET /repos/{owner}/{repo}/contributors\", \"GET /repos/{owner}/{repo}/deployments\", \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\", \"GET /repos/{owner}/{repo}/events\", \"GET /repos/{owner}/{repo}/forks\", \"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\", \"GET /repos/{owner}/{repo}/hooks\", \"GET /repos/{owner}/{repo}/invitations\", \"GET /repos/{owner}/{repo}/issues\", \"GET /repos/{owner}/{repo}/issues/comments\", \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/issues/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", \"GET /repos/{owner}/{repo}/keys\", \"GET /repos/{owner}/{repo}/labels\", \"GET /repos/{owner}/{repo}/milestones\", \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\", \"GET /repos/{owner}/{repo}/notifications\", \"GET /repos/{owner}/{repo}/pages/builds\", \"GET /repos/{owner}/{repo}/projects\", \"GET /repos/{owner}/{repo}/pulls\", \"GET /repos/{owner}/{repo}/pulls/comments\", \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\", \"GET /repos/{owner}/{repo}/releases\", \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\", \"GET /repos/{owner}/{repo}/secret-scanning/alerts\", \"GET /repos/{owner}/{repo}/stargazers\", \"GET /repos/{owner}/{repo}/subscribers\", \"GET /repos/{owner}/{repo}/tags\", \"GET /repos/{owner}/{repo}/teams\", \"GET /repositories\", \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\", \"GET /scim/v2/enterprises/{enterprise}/Groups\", \"GET /scim/v2/enterprises/{enterprise}/Users\", \"GET /scim/v2/organizations/{org}/Users\", \"GET /search/code\", \"GET /search/commits\", \"GET /search/issues\", \"GET /search/labels\", \"GET /search/repositories\", \"GET /search/topics\", \"GET /search/users\", \"GET /teams/{team_id}/discussions\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\", \"GET /teams/{team_id}/invitations\", \"GET /teams/{team_id}/members\", \"GET /teams/{team_id}/projects\", \"GET /teams/{team_id}/repos\", \"GET /teams/{team_id}/team-sync/group-mappings\", \"GET /teams/{team_id}/teams\", \"GET /user/blocks\", \"GET /user/emails\", \"GET /user/followers\", \"GET /user/following\", \"GET /user/gpg_keys\", \"GET /user/installations\", \"GET /user/installations/{installation_id}/repositories\", \"GET /user/issues\", \"GET /user/keys\", \"GET /user/marketplace_purchases\", \"GET /user/marketplace_purchases/stubbed\", \"GET /user/memberships/orgs\", \"GET /user/migrations\", \"GET /user/migrations/{migration_id}/repositories\", \"GET /user/orgs\", \"GET /user/public_emails\", \"GET /user/repos\", \"GET /user/repository_invitations\", \"GET /user/starred\", \"GET /user/subscriptions\", \"GET /user/teams\", \"GET /users\", \"GET /users/{username}/events\", \"GET /users/{username}/events/orgs/{org}\", \"GET /users/{username}/events/public\", \"GET /users/{username}/followers\", \"GET /users/{username}/following\", \"GET /users/{username}/gists\", \"GET /users/{username}/gpg_keys\", \"GET /users/{username}/keys\", \"GET /users/{username}/orgs\", \"GET /users/{username}/projects\", \"GET /users/{username}/received_events\", \"GET /users/{username}/received_events/public\", \"GET /users/{username}/repos\", \"GET /users/{username}/starred\", \"GET /users/{username}/subscriptions\"];\n\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\n\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\n\nexports.composePaginateRest = composePaginateRest;\nexports.isPaginatingEndpoint = isPaginatingEndpoint;\nexports.paginateRest = paginateRest;\nexports.paginatingEndpoints = paginatingEndpoints;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst Endpoints = {\n  actions: {\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    approveWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"],\n    cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n    createOrUpdateEnvironmentSecret: [\"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n    createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n    createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n    deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    deleteEnvironmentSecret: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n    deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    disableSelectedRepositoryGithubActionsOrganization: [\"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    disableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"],\n    downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n    downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n    downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    enableSelectedRepositoryGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    enableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"],\n    getAllowedActionsOrganization: [\"GET /orgs/{org}/actions/permissions/selected-actions\"],\n    getAllowedActionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getEnvironmentPublicKey: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"],\n    getEnvironmentSecret: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    getGithubActionsPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions\"],\n    getGithubActionsPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions\"],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getPendingDeploymentsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    getRepoPermissions: [\"GET /repos/{owner}/{repo}/actions/permissions\", {}, {\n      renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"]\n    }],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getReviewsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n    getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"],\n    listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\"GET /orgs/{org}/actions/permissions/repositories\"],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n    listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    reviewPendingDeploymentsForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    setAllowedActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/selected-actions\"],\n    setAllowedActionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions\"],\n    setGithubActionsPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories\"]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createContentAttachment: [\"POST /content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createContentAttachmentForRepo: [\"POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n    getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n    listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n    removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n    getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n    getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"],\n    setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\"],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    deleteAnalysis: [\"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"],\n    getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n      renamedParameters: {\n        alert_id: \"alert_number\"\n      }\n    }],\n    getAnalysis: [\"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    listAlertInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", {}, {\n      renamed: [\"codeScanning\", \"listAlertInstances\"]\n    }],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getConductCode: [\"GET /codes_of_conduct/{key}\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getForRepo: [\"GET /repos/{owner}/{repo}/community/code_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }]\n  },\n  emojis: {\n    get: [\"GET /emojis\"]\n  },\n  enterpriseAdmin: {\n    disableSelectedOrganizationGithubActionsEnterprise: [\"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    enableSelectedOrganizationGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    getAllowedActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    getGithubActionsPermissionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions\"],\n    listSelectedOrganizationsEnabledGithubActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/organizations\"],\n    setAllowedActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions\"],\n    setSelectedOrganizationsEnabledGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations\"]\n  },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\"GET /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"]\n    }],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\"],\n    removeRestrictionsForYourPublicRepos: [\"DELETE /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"]\n    }],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\"PUT /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"]\n    }]\n  },\n  issues: {\n    addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", {\n      mediaType: {\n        previews: [\"mockingbird\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\"POST /markdown/raw\", {\n      headers: {\n        \"content-type\": \"text/plain; charset=utf-8\"\n      }\n    }]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n    deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n    getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n    getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n    setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n    unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    updateImport: [\"PATCH /repos/{owner}/{repo}/import\"]\n  },\n  orgs: {\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    get: [\"GET /orgs/{org}\"],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n    removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}\"],\n    deletePackageForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"],\n    deletePackageVersionForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    deletePackageVersionForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"]\n    }],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"]\n    }],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions\"],\n    getPackageForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}\"],\n    getPackageForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}\"],\n    getPackageForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}\"],\n    getPackageVersionForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    restorePackageForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageVersionForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n    restorePackageVersionForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createCard: [\"POST /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createColumn: [\"POST /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForAuthenticatedUser: [\"POST /user/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForOrg: [\"POST /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    delete: [\"DELETE /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    get: [\"GET /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getCard: [\"GET /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getColumn: [\"GET /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCards: [\"GET /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listColumns: [\"GET /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForUser: [\"GET /users/{username}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    update: [\"PATCH /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\", {\n      mediaType: {\n        previews: [\"lydian\"]\n      }\n    }],\n    updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n  },\n  rateLimit: {\n    get: [\"GET /rate_limit\"]\n  },\n  reactions: {\n    createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForRelease: [\"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteLegacy: [\"DELETE /reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }, {\n      deprecated: \"octokit.rest.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy\"\n    }],\n    listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }]\n  },\n  repos: {\n    acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n    addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\"GET /repos/{owner}/{repo}/compare/{basehead}\"],\n    createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateEnvironment: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}\"],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\", {\n      mediaType: {\n        previews: [\"baptiste\"]\n      }\n    }],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    deleteAnEnvironment: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"],\n    deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    downloadArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\", {}, {\n      renamed: [\"repos\", \"downloadZipballArchive\"]\n    }],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n    getEnvironment: [\"GET /repos/{owner}/{repo}/environments/{environment_name}\"],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n    removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\", {}, {\n      renamed: [\"repos\", \"updateStatusCheckProtection\"]\n    }],\n    updateStatusCheckProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n      baseUrl: \"https://uploads.github.com\"\n    }]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\", {\n      mediaType: {\n        previews: [\"cloak\"]\n      }\n    }],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    getAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\"POST /user/emails\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\"POST /user/keys\"],\n    deleteEmailForAuthenticated: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\"],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\"],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\"GET /user/keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\"],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\n\nconst VERSION = \"5.3.7\";\n\nfunction endpointsToMethods(octokit, endpointsMap) {\n  const newMethods = {};\n\n  for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n    for (const [methodName, endpoint] of Object.entries(endpoints)) {\n      const [route, defaults, decorations] = endpoint;\n      const [method, url] = route.split(/ /);\n      const endpointDefaults = Object.assign({\n        method,\n        url\n      }, defaults);\n\n      if (!newMethods[scope]) {\n        newMethods[scope] = {};\n      }\n\n      const scopeMethods = newMethods[scope];\n\n      if (decorations) {\n        scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n        continue;\n      }\n\n      scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n  }\n\n  return newMethods;\n}\n\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  /* istanbul ignore next */\n\n  function withDecorations(...args) {\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    let options = requestWithDefaults.endpoint.merge(...args); // There are currently no other decorations than `.mapToData`\n\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: undefined\n      });\n      return requestWithDefaults(options);\n    }\n\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n    }\n\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n\n    if (decorations.renamedParameters) {\n      // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n      const options = requestWithDefaults.endpoint.merge(...args);\n\n      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n        if (name in options) {\n          octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n\n          if (!(alias in options)) {\n            options[alias] = options[name];\n          }\n\n          delete options[name];\n        }\n      }\n\n      return requestWithDefaults(options);\n    } // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n\n\n    return requestWithDefaults(...args);\n  }\n\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit, Endpoints);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit, Endpoints);\n  return _objectSpread2(_objectSpread2({}, api), {}, {\n    rest: api\n  });\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n\nexports.legacyRestEndpointMethods = legacyRestEndpointMethods;\nexports.restEndpointMethods = restEndpointMethods;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar deprecation = require('deprecation');\nvar once = _interopDefault(require('once'));\n\nconst logOnceCode = once(deprecation => console.warn(deprecation));\nconst logOnceHeaders = once(deprecation => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\n\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    let headers;\n\n    if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n      headers = options.headers;\n    }\n\n    if (\"response\" in options) {\n      this.response = options.response;\n      headers = options.response.headers;\n    } // redact request credentials without mutating original request options\n\n\n    const requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy; // deprecations\n\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnceCode(new deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n\n    });\n    Object.defineProperty(this, \"headers\", {\n      get() {\n        logOnceHeaders(new deprecation.Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n        return headers || {};\n      }\n\n    });\n  }\n\n}\n\nexports.RequestError = RequestError;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar endpoint = require('@octokit/endpoint');\nvar universalUserAgent = require('universal-user-agent');\nvar isPlainObject = require('is-plain-object');\nvar nodeFetch = _interopDefault(require('node-fetch'));\nvar requestError = require('@octokit/request-error');\n\nconst VERSION = \"5.6.0\";\n\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n\n  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n\n  let headers = {};\n  let status;\n  let url;\n  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  }, // `requestOptions.request.agent` type is incompatible\n  // see https://github.com/octokit/types.ts/pull/264\n  requestOptions.request)).then(async response => {\n    url = response.url;\n    status = response.status;\n\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n\n    if (\"deprecation\" in headers) {\n      const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n      const deprecationLink = matches && matches.pop();\n      log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n    }\n\n    if (status === 204 || status === 205) {\n      return;\n    } // GitHub API returns 200 for HEAD requests\n\n\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n\n      throw new requestError.RequestError(response.statusText, status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: undefined\n        },\n        request: requestOptions\n      });\n    }\n\n    if (status === 304) {\n      throw new requestError.RequestError(\"Not modified\", status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: await getResponseData(response)\n        },\n        request: requestOptions\n      });\n    }\n\n    if (status >= 400) {\n      const data = await getResponseData(response);\n      const error = new requestError.RequestError(toErrorMessage(data), status, {\n        response: {\n          url,\n          status,\n          headers,\n          data\n        },\n        request: requestOptions\n      });\n      throw error;\n    }\n\n    return getResponseData(response);\n  }).then(data => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch(error => {\n    if (error instanceof requestError.RequestError) throw error;\n    throw new requestError.RequestError(error.message, 500, {\n      request: requestOptions\n    });\n  });\n}\n\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n\n  if (/application\\/json/.test(contentType)) {\n    return response.json();\n  }\n\n  if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n    return response.text();\n  }\n\n  return getBufferResponse(response);\n}\n\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") return data; // istanbul ignore else - just in case\n\n  if (\"message\" in data) {\n    if (Array.isArray(data.errors)) {\n      return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n    }\n\n    return data.message;\n  } // istanbul ignore next - just in case\n\n\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n\n  const newApi = function (route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n\n    const request = (route, parameters) => {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\n\nconst request = withDefaults(endpoint.endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  }\n});\n\nexports.request = request;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","var register = require('./lib/register')\nvar addHook = require('./lib/add')\nvar removeHook = require('./lib/remove')\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind\nvar bindable = bind.bind(bind)\n\nfunction bindApi (hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state])\n  hook.api = { remove: removeHookRef }\n  hook.remove = removeHookRef\n\n  ;['before', 'error', 'after', 'wrap'].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind]\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args)\n  })\n}\n\nfunction HookSingular () {\n  var singularHookName = 'h'\n  var singularHookState = {\n    registry: {}\n  }\n  var singularHook = register.bind(null, singularHookState, singularHookName)\n  bindApi(singularHook, singularHookState, singularHookName)\n  return singularHook\n}\n\nfunction HookCollection () {\n  var state = {\n    registry: {}\n  }\n\n  var hook = register.bind(null, state)\n  bindApi(hook, state)\n\n  return hook\n}\n\nvar collectionHookDeprecationMessageDisplayed = false\nfunction Hook () {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4')\n    collectionHookDeprecationMessageDisplayed = true\n  }\n  return HookCollection()\n}\n\nHook.Singular = HookSingular.bind()\nHook.Collection = HookCollection.bind()\n\nmodule.exports = Hook\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook\nmodule.exports.Singular = Hook.Singular\nmodule.exports.Collection = Hook.Collection\n","module.exports = addHook;\n\nfunction addHook(state, kind, name, hook) {\n  var orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = function (method, options) {\n      var result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then(function (result_) {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(function () {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch(function (error) {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n","module.exports = register;\n\nfunction register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce(function (callback, name) {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(function () {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce(function (method, registered) {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n","module.exports = removeHook;\n\nfunction removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  var index = state.registry[name]\n    .map(function (registered) {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexports.Deprecation = Deprecation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && \"version\" in process) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n  }\n\n  return \"<environment undetectable>\";\n}\n\nexports.getUserAgent = getUserAgent;\n//# sourceMappingURL=index.js.map\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n",null,"module.exports = require(\"assert\");;","module.exports = require(\"buffer\");;","module.exports = require(\"child_process\");;","module.exports = require(\"crypto\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"http\");;","module.exports = require(\"http2\");;","module.exports = require(\"https\");;","module.exports = require(\"net\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"process\");;","module.exports = require(\"stream\");;","module.exports = require(\"tls\");;","module.exports = require(\"url\");;","module.exports = require(\"util\");;","module.exports = require(\"zlib\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(2932);\n"],"mappings":";;;;;;;;;;A;;;;;;;;A;;;;;;;;A;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpthnyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjlzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvhngRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1IA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACllhplGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxzlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChzpuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACflFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxBA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACptIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtCA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpCA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnDA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACljvYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvruCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACvpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClxlnxfhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACRA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxBA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AChBA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClCA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACXA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxvLA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACzjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AChzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;;ACHA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClaA;AACA;AACA;A;;;;;;;;A;;;;;;;;A;;;;;;;;A;;;;;;;;A;;;;;;ACFA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;ACDA;AACA;AACA;AACA;;A","sourceRoot":""}